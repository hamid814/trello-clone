{"version":3,"sources":["context/user/userContext.js","context/board/boardContext.js","components/layout/Navbar.js","components/pages/home/SideListItem.js","components/pages/home/HomeSideList.js","context/alert/alertContext.js","components/pages/home/HomeMainItem.js","components/pages/home/Recent.js","components/pages/home/Starred.js","components/pages/home/HomeMain.js","components/pages/home/Home.js","components/pages/board/BoardTitle.js","components/pages/board/BoardNavbar.js","components/pages/board/BoardListItem.js","components/pages/board/BoardList.js","components/pages/board/AddList.js","components/pages/board/BoardMain.js","components/pages/board/Board.js","components/modal/AddBoardModal.js","components/modal/DetailsModal.js","components/modal/FastEditModal.js","components/modal/OptionsModal.js","components/modal/Modal.js","components/alert/AlertItem.js","components/alert/Alerts.js","App.js","context/board/boardReducer.js","context/types.js","context/board/BoardState.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/user/userReducer.js","context/user/UserState.js","index.js"],"names":["UserContext","createContext","BoardContext","Navbar","userContext","useContext","boardContext","clearCurrentBoardId","currentBoardId","setModal","getBoard","navbarStyle","background","color","titleTextStyle","className","style","onClick","type","id","SideListItem","board","setCurrentBoardId","useState","isHover","setIsHover","hoverStyle","opacity","onMouseEnter","onMouseLeave","title","HomeSideList","boards","map","b","key","AlertContext","HomeMainItem","alertContext","setStar","setAlert","itemStyle","e","target","classList","contains","starred","Recent","getRecentBoards","recentIds","length","r","uuid","v4","Starred","getStarredBoards","s","HomeMain","Home","BoardTitle","setTitle","text","setText","isSettingTitle","setIsSettingTitle","onBlur","console","log","onChange","value","onKeyUp","keyCode","BoardNavbar","setDescription","descText","setDescText","isSettingDesc","setIsSettingDesc","onSetDesc","description","document","querySelector","focus","BoardListItem","item","desc","BoardList","list","boardFuncs","wantToAddCard","setWantToAddCard","newCardText","setNewCardText","addCard","cancelAddCard","items","i","index","placeholder","setTimeout","AddList","addList","isAdding","setIsAdding","onAddList","cancelAddList","lists","BoardMain","mainStyle","l","Board","setBoard","useEffect","boardStyle","AddBoardModal","bg","setBg","bgColor","backgroundColor","DetailsModal","FastEditModal","OptionsModal","Modal","modalStatus","modalType","showModal","setShowModal","closeModal","modalDisplay","display","AlertItem","alert","msg","charAt","toUpperCase","slice","Alerts","alerts","deleteAlert","a","App","state","action","baords","payload","listOfStarredBoardsIds","newListOfStarredBoardsIds","push","newList","boardId","listId","newCard","BoardState","props","initialState","labels","useReducer","boardReducer","dispatch","filter","Provider","getBoardsNames","ids","forEach","indexOf","splice","children","AlertState","alertReducer","time","newAlert","UserState","userReducer","ModalStatus","setRecentBaord","newRecentIds","shift","setModalType","clearModalType","status","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6a208766.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;","import { createContext } from 'react';\r\n\r\nconst BoardContext = createContext();\r\n\r\nexport default BoardContext;\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst Navbar = () => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { clearCurrentBoardId, currentBoardId, setModal } = userContext;\r\n  const { getBoard } = boardContext;\r\n\r\n  const homeClicked =() => {\r\n    clearCurrentBoardId();\r\n  }\r\n\r\n  const addClicked = () => {\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  const navbarStyle = {\r\n    background: getBoard(currentBoardId) && getBoard(currentBoardId).color\r\n  }\r\n\r\n  const titleTextStyle = {\r\n    color: getBoard(currentBoardId) ? getBoard(currentBoardId).color : '#388d6a'\r\n  }\r\n\r\n  return (\r\n    <div className='trello-navbar' style={navbarStyle}>\r\n      <div>\r\n        <div className='btn btn-square btn-light op-8 rounded' onClick={homeClicked}>\r\n          <i className='fa fa-home'></i>\r\n        </div>\r\n        <div className='btn btn-narrow btn-light op-8 rounded'>\r\n          <i className='mr-1 fa fa-notes-medical'></i>\r\n          boards\r\n        </div>\r\n        <div className='d-i-b rounded'>\r\n          <input type='text' className='m-0 bg-light op-8 border-0 rounded' id='search-input'/>\r\n        </div>\r\n      </div>\r\n      <div className='mr-5'>\r\n        <div className='text-white text-bold cursor-p border border-white border-bottom-0'>\r\n          <div className='m mt-0 ml-0 mb-0'>\r\n            trello\r\n          </div>\r\n          <div \r\n            className='bg-white d-i-b border-0 p pt-0 pb-0 pr-0'\r\n            style={titleTextStyle}>\r\n            clone\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className='btn btn-square btn-light op-8 rounded' onClick={addClicked}>\r\n          <i className='fa fa-plus'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst SideListItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n\r\n  const [isHover, setIsHover] = useState(false);\r\n\r\n  const hoverStyle = isHover ? {\r\n    background: board.color,\r\n    color: '#f4f4f4',\r\n    opacity: '0.7'\r\n  } : {\r\n    opacity: '1'\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    setIsHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setIsHover(false);\r\n  }\r\n\r\n  const onClick = () => {\r\n    setCurrentBoardId(board.id)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      onClick={onClick}\r\n      className=\"card pl-1 cursor-p p border-0 rounded-lg text-dark transition text-bold\"\r\n      style={hoverStyle}\r\n      >\r\n      {board.title}\r\n      { <i className=\"fa fa-check m-0 float-right\"></i> }\r\n    </div> \r\n  );\r\n};\r\n\r\nexport default SideListItem","import React, { useContext } from 'react';\r\nimport SideListItem from './SideListItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst HomeSideList = () => {\r\n  const { boards } = useContext(BoardContext);\r\n\r\n  return (\r\n    <aside>\r\n      <button className=\"btn btn-block btn-primary text-left rounded-lg\">\r\n        <i className=\"fa fa-notes-medical mr-1\"></i>\r\n        <div className=\"text-bold d-i-b\">Boards</div>\r\n      </button>\r\n      { boards.map(b => (\r\n        <SideListItem key={b.id} board={b} />\r\n      )) }\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default HomeSideList\r\n","import { createContext } from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext;","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst HomeMainItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n  const { setStar } = boardContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const itemStyle = {\r\n    background: board.color,\r\n  }\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('fa-star')) {\r\n      setCurrentBoardId(board.id);\r\n    }\r\n  }\r\n\r\n  const onStarClicked = () => {\r\n    setStar(board.id);\r\n    setAlert(`${board.starred ? 'board added to favorites' : 'board removed from favorites'}`, `${board.starred ? 'success' : 'dark'}`, 2500);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='trello-home-main-item mt-1 mr-1'\r\n      style={itemStyle}\r\n      onClick={onClick}>\r\n        <div className='text-white func-title'>\r\n          {board.title}\r\n        </div>\r\n        <div\r\n          className='trello-home-main-item-star'\r\n          onClick={onStarClicked}>\r\n          <i className={`fa-star ${board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeMainItem\r\n","import React, { Fragment, useContext } from 'react';\r\nimport uuid from 'uuid';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst Recent = () => {\r\n  const boardContext = useContext(BoardContext);\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { getRecentBoards } = boardContext;\r\n  const { recentIds } = userContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      { getRecentBoards(recentIds).length !== 0\r\n        &&  <div className=\"card border-top-0 border-right-0 border-left-0 pb-2\">\r\n              <i className=\"fa fa-clock mr-1\"></i>\r\n              Recent borads\r\n              <div className=\"\">\r\n                { getRecentBoards(recentIds).map(r => (\r\n                      <HomeMainItem key={uuid.v4()} board={r} />\r\n                    ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Recent\r\n","import React, { Fragment, useContext } from 'react';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Starred = () => {\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { getStarredBoards } = boardContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      { getStarredBoards().length !== 0\r\n        &&  <div className=\"card border-top-0 border-right-0 border-left-0 pb-2\">\r\n              <i className=\"fa fa-star mr-1\"></i>\r\n              favorite borads\r\n              <div className=\"\">\r\n                { getStarredBoards().map(s => (\r\n                      <HomeMainItem key={s.id} board={s} />\r\n                    ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Starred\r\n","import React, { useContext } from 'react';\r\nimport Recent from './Recent';\r\nimport Starred from './Starred';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst HomeMain = () => {\r\n  const { setModal } = useContext(UserContext);\r\n\r\n  const onAdd = () => {\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  return (\r\n    <main className='text-bold'>\r\n      <Starred />\r\n      <Recent />\r\n      <div className='card border-0'>\r\n        <div className='trello-home-main-item hover' onClick={onAdd}>\r\n          Add Board\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default HomeMain\r\n","import React from 'react';\r\nimport HomeSideList from './HomeSideList';\r\nimport HomeMain from './HomeMain';\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container grid-1-3 mt-3\">\r\n      <HomeSideList />\r\n      <HomeMain />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardTitle = ({ title, setTitle }) => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [text, setText] = useState('');\r\n  const [isSettingTitle, setIsSettingTitle] = useState(false);\r\n\r\n  const onClick = () => {\r\n    setIsSettingTitle(true);\r\n    setText(title);\r\n    console.log('text filed must be filled with title')\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    if(text !== '') {\r\n      setTitle(text, currentBoardId);\r\n      setAlert('board title changed', 'success');\r\n      setIsSettingTitle(false);\r\n    } else {\r\n      setIsSettingTitle(false);\r\n      setAlert('board title can not be empty', 'danger');\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onBlur();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-i-b\">\r\n      <div\r\n        className={`text-white m-0 ml-1 ${isSettingTitle && 'd-n'}`}\r\n        onClick={onClick}>\r\n        { title }\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        className={`m-0 rounded ${!isSettingTitle && 'd-n'}`}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        onKeyUp={onKeyUp}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardTitle\r\n","import React, { useState, useContext } from 'react';\r\nimport BoardTitle from './BoardTitle';\r\n\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardNavbar = ({ board, setStar, setDescription, setTitle }) => {\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const [descText, setDescText] = useState('');\r\n  const [isSettingDesc, setIsSettingDesc] = useState(false);\r\n  \r\n  const onStarClick = () => {\r\n    setStar(board.id);\r\n    setAlert(`${board.starred ? 'board added to favorites' : 'board removed from favorites'}`, `${board.starred ? 'success' : 'dark'}`, 2500);\r\n  }\r\n\r\n  const onDescClick =() => {\r\n    setIsSettingDesc(true);\r\n    setDescText(board.description);\r\n    document.querySelector('#description-input').focus();\r\n  }\r\n\r\n  const onDescTextChange = (e) => {\r\n    e.target.value.length < 51\r\n      ? setDescText(e.target.value)\r\n      : setAlert('describtion can not be longer than 50 chars!!!', 'warning', 4000)\r\n  }\r\n\r\n  const onSetDesc = () => {\r\n    setDescription(descText, board.id);\r\n    setIsSettingDesc(false);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetDesc();\r\n    }\r\n  }\r\n\r\n  const navbarStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-navbar trello-navbar lighten-20' style={navbarStyle}>\r\n      <div className='card border-0 m-0 p-0'>\r\n        { board && <BoardTitle title={board.title} setTitle={setTitle} /> }\r\n        <div className='btn btn-light op-8 btn-square rounded darken-20 ml-1' onClick={onStarClick}>\r\n          <i className={`fa-star ${board && board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n        <div className='ml-1 d-i-b text-white'>\r\n          { \r\n            board\r\n            && !isSettingDesc\r\n              && (board.description ? board.description : 'no description')\r\n          }\r\n        <input\r\n          type='text'\r\n          id='description-input'\r\n          className={`m-0 rounded ${!isSettingDesc && 'd-n'}`}\r\n          value={descText}\r\n          onChange={onDescTextChange}\r\n          onBlur={onSetDesc}\r\n          onKeyUp={onKeyUp} />\r\n        </div>\r\n        <div className='btn btn-light op-8 darken-20 btn-square rounded ml-1' onClick={onDescClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardNavbar\r\n","import React from 'react'\r\n\r\nconst BoardListItem = ({ item }) => {\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('func-e-btn')) {\r\n      console.log('open edit modal')\r\n    }\r\n  }\r\n\r\n  const onEBtnClick = () => {\r\n    console.log('fast edit clicked')\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-list-item' onClick={onClick}>\r\n      <div>\r\n        { item.text }\r\n        <div className='text-sm'>\r\n          { item.desc && item.desc }\r\n        </div>\r\n      </div>\r\n      <div className='func-e-btn trello-board-list-item-edit-btn' onClick={onEBtnClick}>\r\n        e\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardListItem\r\n","import React, { Fragment, useState, useContext } from 'react';\r\nimport BoardListItem from './BoardListItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardList = ({ list, boardFuncs /* all of board context */ }) => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [wantToAddCard, setWantToAddCard] = useState(false);\r\n  const [newCardText, setNewCardText] = useState('');\r\n\r\n  const onAddCardClick = () => {\r\n    setWantToAddCard(true);\r\n    setTimeout(() => {\r\n      document.querySelector('#card-compose-textarea').focus();\r\n    }, 100);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setNewCardText(e.target.value);\r\n  }\r\n\r\n  const onTextareaBlur = () => {\r\n    if(newCardText !== '') {\r\n      addCard();\r\n    } else {\r\n      cancelAddCard();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13 && newCardText.length > 1) {\r\n      addCard();\r\n    } else if(e.keyCode === 13 && newCardText.length === 1) {\r\n      setNewCardText('');\r\n    }\r\n  }\r\n\r\n  const addCard = () => {\r\n    if(newCardText !== '') {\r\n      // three parameters: 1.text 2.list id 3.board id\r\n      boardFuncs.addCard(newCardText, list.id, currentBoardId);\r\n      setAlert('card added', 'success');\r\n      setNewCardText('');\r\n    }\r\n  }\r\n\r\n  const cancelAddCard = () => {\r\n    setWantToAddCard(false);\r\n    setNewCardText('');\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-list'>\r\n      <div className='trello-board-list-header'>\r\n        { list.title }\r\n      </div>\r\n      <div className='trello-board-list-items'>\r\n        { list.items.map((i, index) => (\r\n          <BoardListItem key={i.id} item={i} />\r\n        )) }\r\n        <div className={`trello-board-list-item trello-board-card-compose  ${!wantToAddCard && 'd-n'}`}>\r\n          <textarea\r\n            className='trello-board-card-compose-textarea'\r\n            id='card-compose-textarea'\r\n            placeholder='Enter a title for this card'\r\n            onBlur={onTextareaBlur}\r\n            onKeyUp={onKeyUp}\r\n            onChange={onChange}\r\n            value={newCardText}>\r\n\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n      <div className={`trello-board-footer ${!wantToAddCard && 'hover cursor-p'}`}>\r\n        { !wantToAddCard\r\n          ?  (<div onClick={onAddCardClick}>\r\n                {list.items.length === 0 ? '+ Add a card' : '+ Add another card'}\r\n              </div>) \r\n          : (\r\n            <Fragment>\r\n              <div className='btn btn-success' onClick={addCard}>\r\n                Add Card\r\n              </div>\r\n              <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddCard}>\r\n                &times;\r\n              </div>\r\n            </Fragment>\r\n          )  \r\n        }      \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardList\r\n","import React, { Fragment, useState, useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst AddList = ({ board }) => {\r\n  const boardContext = useContext(BoardContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { addList } = boardContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [text, setText] = useState('')\r\n\r\n  const onClick = () => {\r\n    setIsAdding(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    if(text !== '') {\r\n      onAddList();\r\n    } else {\r\n      cancelAddList();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAddList();\r\n    }\r\n  }\r\n\r\n  const onAddList = () => {\r\n    if(text !== '') {\r\n      addList(text, board.id);\r\n      setAlert(`list ${text} added`, 'success');\r\n      setText('');\r\n    } else {\r\n      console.log('alert');\r\n    }\r\n  }\r\n\r\n  const cancelAddList = () => {\r\n    setIsAdding(false);\r\n    setText('');\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`trello-board-add-list-btn btn-light op-8 darken-20 text-dark ${isAdding && 'd-n'}`}\r\n        onClick={onClick}>\r\n          { board && board.lists.length === 0 ? '+ Add a list' : '+ Add another list' }\r\n      </div>\r\n      <div\r\n        className={`trello-board-add-list-form btn-light op-9 darken-20 text-dark ${!isAdding && 'd-n'}`}>\r\n          <input\r\n            type='text'\r\n            className='m-0 rounded-lg mb-1'\r\n            placeholder='Enter list name'\r\n            value={text}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            onKeyUp={onKeyUp}/>\r\n          <div className='btn btn-success' onClick={onAddList}>\r\n            Add List\r\n          </div>\r\n          <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddList}>\r\n            &times;\r\n          </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddList\r\n","import React from 'react';\r\nimport BoardList from './BoardList';\r\nimport AddList from './AddList';\r\n\r\nconst BoardMain = ({ board, boardFuncs /* contains all of board context  */ }) => {\r\n  const mainStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-main' style={mainStyle}>\r\n      { board &&\r\n        board.lists.map(l => (\r\n          <div key={l.id} className='trello-board-list-wrapper'>\r\n            <BoardList list={l} boardFuncs={boardFuncs} />\r\n          </div>\r\n        )) }\r\n      <div className='trello-board-list-wrapper'>\r\n        <AddList board={board} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardMain\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport BoardNavbar from './BoardNavbar';\r\nimport BoardMain from './BoardMain';\r\n\r\n// context\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\n// css\r\nimport './board.css';\r\n\r\nconst Board = () => {\r\n  const [board, setBoard] = useState(null);\r\n\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { getBoard, setStar, setDescription, setTitle } = boardContext;\r\n\r\n  useEffect(() => {\r\n    setBoard(getBoard(currentBoardId));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const boardStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <BoardNavbar\r\n        board={board}\r\n        setStar={setStar}\r\n        setDescription={setDescription}\r\n        setTitle={setTitle} />\r\n      <div className='trello-board-main-wrapper lighten-20 p' style={boardStyle}>\r\n        <BoardMain boardFuncs={boardContext} board={board} />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nconst AddBoardModal = () => {\r\n  const { setModal } = useContext(UserContext);\r\n\r\n  const [bg, setBg] = useState('#ee3a59')\r\n\r\n  const onBgClicked = (e) => {\r\n    setBg(e.target.id);\r\n  }\r\n\r\n  const onClose = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const bgColor = {\r\n    backgroundColor: bg\r\n  }\r\n\r\n  return (\r\n    <div className='modal-content trello-add-board-modal-content'>\r\n      <div className='grid-3-1'>\r\n        <div className='p-1 grid-3-1' style={bgColor}>\r\n          <div>\r\n            <input\r\n              type='text'\r\n              className='m-0 border-0'/>\r\n          </div>\r\n          <div>\r\n            <div className='close' onClick={onClose}>\r\n              &times;\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='grid-3 gap-half' onClick={onBgClicked}>\r\n          <div id='#ee3a59' className='rounded-lg p-1 bg-warning cursor-p'></div>\r\n          <div id='#e27b47' className='rounded-lg p-1 bg-warning cursor-p'></div>\r\n          <div id='#efca58' className='rounded-lg p-1 bg-warning cursor-p'></div>\r\n          <div id='#46b29e' className='rounded-lg p-1 bg-warning cursor-p'></div>\r\n          <div id='#344e5c' className='rounded-lg p-1 bg-warning cursor-p'></div>\r\n          <div id='#344e5c' className='rounded-lg p-1 bg-warning cursor-p'></div>\r\n          <div id='#344e5c' className='rounded-lg p-1 bg-warning cursor-p'></div>\r\n        </div>\r\n      </div>\r\n      <div className='btn btn-light btn-narrow m text-bold'>\r\n        Create Board\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddBoardModal\r\n","import React from 'react'\r\n\r\nconst DetailsModal = () => {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailsModal\r\n","import React from 'react';\r\n\r\nconst FastEditModal = () => {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FastEditModal\r\n","import React from 'react'\r\n\r\nconst OptionsModal = () => {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OptionsModal\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport AddBoardModal from './AddBoardModal';\r\nimport DetailsModal from './DetailsModal';\r\nimport FastEditModal from './FastEditModal';\r\nimport OptionsModal from './OptionsModal';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nconst Modal = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { modalStatus, modalType, setModal } = userContext;\r\n\r\n  const [showModal, setShowModal] = useState('off');\r\n  \r\n  useEffect(() => {\r\n    setShowModal(modalStatus/* from useState */);\r\n    // for development purposes\r\n    // setModal('on', 'addBoardModal');\r\n    // eslint-disable-next-line\r\n  }, [modalStatus])\r\n\r\n  const onClick = (e) => {\r\n    if(e.target.classList.contains('modal')) {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const modalDisplay = {\r\n    display: showModal === 'on' ? 'block' : 'none'\r\n  }\r\n\r\n  return (\r\n    <div \r\n      style={modalDisplay}\r\n      className='modal'\r\n      onClick={onClick}>\r\n      {\r\n        modalType === 'addBoardModal' && <AddBoardModal />\r\n      }\r\n      {\r\n        modalType === 'detailsModal' && <DetailsModal />\r\n      }\r\n      {\r\n        modalType === 'fastEditModal' && <FastEditModal />\r\n      }\r\n      {\r\n        modalType === 'optionsModal' && <OptionsModal />\r\n      }\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\n\r\nconst AlertItem = ({ alert }) => {\r\n  return (\r\n    <div className={`trello-alert-item alert rounded-lg alert-${alert.type}`}>\r\n        <div className='trello-alert-item-msg'>\r\n          { alert.msg.charAt(0).toUpperCase() + alert.msg.slice(1) }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertItem\r\n","import React, { useContext } from 'react';\r\nimport AlertItem from './AlertItem';\r\n\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alerts = () => {\r\n  const { alerts, deleteAlert } = useContext(AlertContext);\r\n\r\n  return (\r\n    <div className='trello-alerts-wrapper'>\r\n      {\r\n        alerts.map(a => (\r\n          <AlertItem\r\n            key={a.id}\r\n            alert={a}\r\n            deleteAlert={deleteAlert} />\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alerts\r\n","import React, { Fragment, useEffect, useContext } from 'react';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Home from './components/pages/home/Home';\r\nimport Board from './components/pages/board/Board';\r\nimport Modal from './components/modal/Modal';\r\nimport Alerts from './components/alert/Alerts';\r\n\r\nimport UserContext from './context/user/userContext';\r\n\r\nimport './trello-clone.css';\r\nimport './trello-clone-keyframes.css';\r\n\r\nconst App = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setCurrentBoardId, currentBoardId } = userContext\r\n\r\n  // to display board page for development purposes\r\n  useEffect(() => {\r\n    setCurrentBoardId(null);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Modal />\r\n      <Alerts />\r\n      { !currentBoardId\r\n          ? <Home />\r\n          : <Board />\r\n      }\r\n      {/* <Home /> */}\r\n      {/* <Board /> */}\r\n    </Fragment>\r\n  );\r\n}\r\nexport default App","import {\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_DESCRIPTION,\r\n  ADD_LIST,\r\n  ADD_CARD\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_TITLE:\r\n      return {\r\n        ...state,\r\n        baords: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.title = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_STAR:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.starred = !b.starred\r\n          }\r\n          return b\r\n        }),\r\n        listOfStarredBoardsIds: action.payload.newListOfStarredBoardsIds\r\n      }\r\n    case SET_DESCRIPTION:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.description = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.lists.push(action.payload.newList)\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items.push(action.payload.newCard);\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// board state\r\nexport const GET_BOARDS_NAMES = 'GET_BOARDS_NAMES';\r\nexport const SET_TITLE = 'SET_TITLE';\r\nexport const SET_STAR = 'SET_STAR';\r\nexport const SET_DESCRIPTION = 'SET_DESCRIPTION';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const ADD_CARD = 'ADD_CARD';\r\n\r\n// alert state\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const DELETE_ALERT = 'DELETE_ALERT';\r\n\r\n// user state\r\nexport const SET_CURRENT_BOARD_ID = 'SET_CURRENT_BOARD_ID';\r\nexport const CLEAR_CURRENT_BOARD_ID = 'CLEAR_CURRENT_BOARD_ID';\r\nexport const SET_RECENT_IDS = 'SET_RECENT_IDS';\r\nexport const SET_MODAL = 'SET_MODAL';\r\nexport const SET_MODAL_TYPE = 'SET_MODAL_TYPE';\r\n\r\n// \r\nexport const TEST = 'TEST';\r\n","import React, { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\nimport BoardContext from './boardContext';\r\nimport boardReducer from './boardReducer';\r\nimport {\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_DESCRIPTION,\r\n  ADD_LIST,\r\n  ADD_CARD\r\n} from '../types';\r\n\r\nconst BoardState = props => {\r\n  const initialState = {\r\n    boards: [\r\n      {\r\n        title: 'my nice board',\r\n        id: 1,\r\n        color: '#e27b47',\r\n        starred: false,\r\n        description: 'board description goes here',\r\n        lists: [\r\n          {\r\n            title: 'todos',\r\n            id: uuid.v4(),\r\n            items: [\r\n              {\r\n                text: 'todo 1',\r\n                desc: 'one describtion',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 1',\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n            ]\r\n          },\r\n          {\r\n            title: 'doing',\r\n            id: uuid.v4(),\r\n            items: [\r\n              {\r\n                text: 'doing 1',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 3',\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 3',\r\n                  'label 4'\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 3',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 4',\r\n                  'label 2'\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            title: 'new list',\r\n            id: uuid.v4(),\r\n            items: [\r\n\r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        title: 'test empty',\r\n        id: 2,\r\n        starred: false,\r\n        color: '#4759a3',\r\n        lists: [\r\n\r\n        ]\r\n      }\r\n    ],\r\n    listOfStarredBoardsIds: []\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(boardReducer, initialState);\r\n\r\n  // Get data\r\n  const getBoardsNames = () => {\r\n    const list = state.boards.map(b => b.title);\r\n    \r\n    return list\r\n  };\r\n\r\n  // get  recent used boards based on user state\r\n  const getRecentBoards = (ids) => {\r\n    const list = [];\r\n\r\n    ids && ids.forEach(id => list.push(getBoard(id)));\r\n\r\n    return list\r\n  }\r\n\r\n  // get boards with starred = true\r\n  const getStarredBoards = () => {\r\n    const list = [];\r\n    state.listOfStarredBoardsIds.forEach(id => list.push(getBoard(id)));\r\n\r\n    return list;\r\n  }\r\n\r\n  // send a single board to board page (returns an array with one object)\r\n  const getBoard = (id) => {\r\n    const board = state.boards.filter(b => b.id === id);\r\n\r\n    return board[0]\r\n  }\r\n\r\n  // set board title\r\n  const setTitle = (text, id) => {\r\n    dispatch({\r\n      type: SET_TITLE,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board starred or unstarred\r\n  const setStar = (id) => {\r\n    let newListOfStarredBoardsIds = state.listOfStarredBoardsIds;\r\n    if(state.listOfStarredBoardsIds.indexOf(id) !== -1) {\r\n      newListOfStarredBoardsIds.splice(state.listOfStarredBoardsIds.indexOf(id), 1);\r\n    } else {\r\n      newListOfStarredBoardsIds.push(id);\r\n    }\r\n    dispatch({\r\n      type: SET_STAR,\r\n      payload: {\r\n        id,\r\n        newListOfStarredBoardsIds\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board description\r\n  const setDescription = (text, id) => {\r\n    dispatch({\r\n      type: SET_DESCRIPTION,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // add List to board\r\n  const addList = (text, id) => {\r\n    const newList = {\r\n      title: text,\r\n      id: uuid.v4(),\r\n      items: []\r\n    }\r\n    dispatch({\r\n      type: ADD_LIST,\r\n      payload: {\r\n        id,\r\n        newList\r\n      }\r\n    });\r\n  }\r\n\r\n  // add card to list\r\n  const addCard = (text, listId, boardId) => {\r\n    const newCard = {\r\n      text,\r\n      id: uuid.v4(),\r\n      labels: []\r\n    }\r\n    dispatch({\r\n      type: ADD_CARD,\r\n      payload: {\r\n        newCard,\r\n        listId,\r\n        boardId\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <BoardContext.Provider\r\n      value={{\r\n        boards: state.boards,\r\n        getBoardsNames,\r\n        getRecentBoards,\r\n        getStarredBoards,\r\n        getBoard,\r\n        setTitle,\r\n        setStar,\r\n        setDescription,\r\n        addList,\r\n        addCard\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BoardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BoardState;","import { \r\n  SET_ALERT,\r\n  DELETE_ALERT\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: [...state.alerts, action.payload]\r\n      }\r\n    case DELETE_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: state.alerts.filter(a => a.id !== action.payload)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\nimport AlertContext from './alertContext';\r\nimport alertReducer from './alertReducer';\r\nimport { \r\n  SET_ALERT,\r\n  DELETE_ALERT\r\n} from '../types';\r\n\r\nconst AlertState = props => {\r\n  const initialState = {\r\n    alerts: []\r\n    };\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n  // Get data\r\n  const setAlert = (msg, type, time) => {\r\n    const listOfMsgs = state.alerts.map(a => a.msg);\r\n    if(listOfMsgs.indexOf(msg) === -1) {\r\n      const newAlert = {\r\n        msg,\r\n        id: uuid.v4(),\r\n        type,\r\n      }\r\n\r\n      dispatch({\r\n        type: SET_ALERT,\r\n        payload: newAlert\r\n      });\r\n\r\n      setTimeout(() => {\r\n        deleteAlert(newAlert.id);\r\n      }, time ? time : 3000);\r\n    }\r\n  };\r\n\r\n  const deleteAlert = (id) => {\r\n    dispatch({\r\n      type: DELETE_ALERT,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alerts: state.alerts,\r\n        setAlert,\r\n        deleteAlert\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;","import { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_RECENT_IDS,\r\n  SET_MODAL,\r\n  SET_MODAL_TYPE\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_BOARD_ID:\r\n     return {\r\n       ...state,\r\n       currentBoardId: action.payload\r\n     }\r\n    case CLEAR_CURRENT_BOARD_ID:\r\n      return {\r\n        ...state,\r\n        currentBoardId: null\r\n      }\r\n    case SET_RECENT_IDS:\r\n      return {\r\n        ...state,\r\n        recentIds: action.payload\r\n      }\r\n    case SET_MODAL:\r\n      return {\r\n        ...state,\r\n        modalStatus: action.payload\r\n      }\r\n    case SET_MODAL_TYPE:\r\n      return {\r\n        ...state,\r\n        modalType: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer } from 'react';\r\nimport UserContext from './userContext';\r\nimport userReducer from './userReducer';\r\nimport { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_RECENT_IDS,\r\n  SET_MODAL,\r\n  SET_MODAL_TYPE\r\n} from '../types';\r\n\r\nconst UserState = props => {\r\n  const initialState = {\r\n    currentBoardId: null,\r\n    recentIds: [],\r\n    ModalStatus: 'on',\r\n    modalType: null\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(userReducer, initialState);\r\n\r\n  const setCurrentBoardId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_BOARD_ID,\r\n      payload: id\r\n    });\r\n    setRecentBaord(id);\r\n  }\r\n\r\n  // set new board to recent\r\n  const setRecentBaord = (id) => {\r\n    const newRecentIds = state.recentIds;\r\n    if(newRecentIds.length === 3 && id !== null) {\r\n      newRecentIds.shift();\r\n      newRecentIds.push(id);\r\n    } else if(id !== null) {\r\n      newRecentIds.push(id);\r\n    }\r\n    dispatch({\r\n      type: SET_RECENT_IDS,\r\n      payload: newRecentIds\r\n    });\r\n  }\r\n\r\n  // also can be done with \"setCurrentBoardId(null)\"\r\n  const clearCurrentBoardId = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_BOARD_ID\r\n    });\r\n  }\r\n\r\n  const setModal = (status, type) => {\r\n    dispatch({\r\n      type: SET_MODAL,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearModalType();\r\n    } if(status === 'on') {\r\n      setModalType(type);\r\n    }\r\n  }\r\n\r\n  const setModalType = (type) => {\r\n    dispatch({\r\n      type: SET_MODAL_TYPE,\r\n      payload: type\r\n    });\r\n  }\r\n\r\n  const clearModalType = () => {\r\n    dispatch({\r\n      type: SET_MODAL_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        currentBoardId: state.currentBoardId,\r\n        recentIds: state.recentIds,\r\n        modalStatus: state.modalStatus,\r\n        modalType: state.modalType,\r\n        setCurrentBoardId,\r\n        clearCurrentBoardId,\r\n        setModal\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport BoardState from './context/board/BoardState';\nimport AlertState from './context/alert/AlertState';\nimport UserState from './context/user/UserState';\n\nconst StateContainer = () => {\n  return (\n    <BoardState>\n      <AlertState>\n        <UserState>\n          <App />\n        </UserState>\n      </AlertState>\n    </BoardState>\n  );\n}\n\nReactDOM.render(<StateContainer />, document.getElementById('root'));"],"sourceRoot":""}