{"version":3,"sources":["context/user/userContext.js","context/board/boardContext.js","components/layout/Navbar.js","components/pages/home/SideListItem.js","components/pages/home/HomeSideList.js","context/alert/alertContext.js","components/pages/home/HomeMainItem.js","components/pages/home/Recent.js","components/pages/home/Starred.js","components/pages/home/HomeMain.js","components/pages/home/Home.js","components/pages/board/BoardTitle.js","components/pages/board/BoardNavbar.js","components/pages/board/ListTitle.js","components/pages/board/CardLabel.js","components/pages/board/ListItemLabels.js","components/pages/board/BoardListItem.js","components/pages/board/BoardList.js","components/pages/board/AddList.js","components/pages/board/BoardMain.js","components/pages/board/Board.js","components/modal/AddBoardModal.js","components/modal/DetailsModal.js","components/modal/FastEditModal.js","components/modal/Modal.js","components/modal/options/DeleteCard.js","components/modal/options/EditCardLabelItem.js","components/modal/options/EditCardLabels.js","components/modal/options/EditLabel.js","components/modal/options/ListActions.js","components/modal/options/DeleteList.js","components/modal/options/CopyList.js","components/modal/options/MoveList.js","components/modal/options/DeleteAllCards.js","components/modal/OptionsModal.js","components/alert/AlertItem.js","components/alert/Alerts.js","App.js","context/board/boardReducer.js","context/types.js","context/board/BoardState.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/user/userReducer.js","context/user/UserState.js","index.js"],"names":["UserContext","createContext","BoardContext","Navbar","userContext","useContext","boardContext","clearCurrentBoardId","currentBoardId","setModal","getBoard","navbarStyle","background","color","titleTextStyle","className","style","onClick","type","id","SideListItem","board","setCurrentBoardId","useState","isHover","setIsHover","hoverStyle","opacity","onMouseEnter","onMouseLeave","title","charAt","toUpperCase","slice","HomeSideList","boards","map","b","key","AlertContext","HomeMainItem","alertContext","setStar","setAlert","itemStyle","e","target","classList","contains","starred","Recent","getRecentBoards","recentIds","length","r","uniqid","Starred","getStarredBoards","s","HomeMain","Home","BoardTitle","boardId","setTitle","text","setText","isSettingTitle","setIsSettingTitle","textHasChanged","setTextHasChanged","useEffect","document","querySelector","focus","onSetTitle","onChange","value","onBlur","onKeyUp","keyCode","BoardNavbar","setDescribtion","descText","setDescText","isSettingDesc","setIsSettingDesc","onSetDesc","describtion","ListTitle","listId","setListTitle","currentListId","onSetListTitle","CardLabel","label","bigLabels","thisLabel","labels","filter","l","colorName","name","ListItemLabels","toggleBigLabels","father","hover","setHover","BoardListItem","timer","item","listItem","useRef","setCurrentCard","setFastEditModalPos","onlongtouch","current","top","getBoundingClientRect","left","width","ref","parentElement","onTouchStart","setTimeout","onTouchEnd","clearTimeout","desc","console","log","BoardList","list","boardFuncs","setCurrentListId","setOptionsModal","addCardFromListActions","wantToAddCard","setWantToAddCard","newCardText","setNewCardText","addCard","cancelAddCard","watching","items","i","index","placeholder","AddList","setScrollIflonger","addList","isAdding","setIsAdding","onAddList","cancelAddList","lists","BoardMain","setStyle","window","innerWidth","display","gridTemplateRows","gridTemplateColumns","Board","setBoard","boardStyle","AddBoardModal","addBoard","bg","setBg","onClose","onAdd","bgColor","backgroundColor","DetailsModal","currentCard","FastEditModal","theTextarea","fastEditModalPos","clearCurrentCard","updateCard","modalPos","position","rightWidth","onUpdate","newCard","Modal","modalStatus","modalType","showModal","setShowModal","closeModal","modalDisplay","DeleteCard","deleteCard","EditCardLabelItem","setLabelId","goToEditLabel","indexOf","EditCardLabels","setOptionsModalStep","setLabel","EditLabel","setColorName","data","optionsModalStepData","colors","addLabel","updateLabel","deleteLabel","onColorClick","is","forEach","newId","ListActions","setAddCardFromListActions","getList","setWatching","DeleteList","deleteList","CopyList","setName","copyList","MoveList","boardsSelect","PosSelect","destBoardId","setDestBoardId","desPos","setDestPos","changed","setChanged","moveList","findIndex","Number","DeleteAllCards","deleteAllCards","OptionsModal","container","optionsModalStatus","optionsModalType","optionsModalStepStatus","optionsModalStepType","mousePos","pos","setPos","setOptionsPos","rect","x","innerHeight","y","height","right","bottom","AlertItem","alert","deleteAlert","msg","Alerts","alerts","a","App","setMousePos","clientX","clientY","state","action","payload","baords","listOfStarredBoardsIds","newListOfStarredBoardsIds","push","newList","splice","firstBoardId","firstIndex","destIndex","newTitle","cardId","BoardState","props","initialState","useReducer","boardReducer","dispatch","ListId","Provider","newBaord","getBoardsNames","ids","theList","firstListId","newLabel","c","children","AlertState","alertReducer","time","newAlert","UserState","userReducer","ModalStatus","optionsModaltype","mosuePos","setRecentBaord","newRecentIds","shift","setModalType","clearModalType","setOptionsModalType","clearOptionsModalType","status","step","clearOptionsModalStepType","setOptionsModalStepType","setOptionsModalStepData","clearOptionsModalStepData","clearCurrentListId","card","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b1ef2e13.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;","import { createContext } from 'react';\r\n\r\nconst BoardContext = createContext();\r\n\r\nexport default BoardContext;\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst Navbar = () => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { clearCurrentBoardId, currentBoardId, setModal } = userContext;\r\n  const { getBoard } = boardContext;\r\n\r\n  const homeClicked =() => {\r\n    clearCurrentBoardId();\r\n  }\r\n\r\n  const addClicked = () => {\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  const navbarStyle = {\r\n    background: getBoard(currentBoardId) && getBoard(currentBoardId).color\r\n  }\r\n\r\n  const titleTextStyle = {\r\n    color: getBoard(currentBoardId) ? getBoard(currentBoardId).color : '#388d6a'\r\n  }\r\n\r\n  return (\r\n    <div className='trello-navbar' style={navbarStyle}>\r\n      <div>\r\n        <div className='btn btn-square btn-transparent rounded' onClick={homeClicked}>\r\n          <i className='fa fa-home'></i>\r\n        </div>\r\n        <div className='btn btn-narrow btn-transparent rounded'>\r\n          <i className='mr-1 fa fa-notes-medical'></i>\r\n          boards\r\n        </div>\r\n        <div className='d-i-b rounded'>\r\n          <input type='text' className='m-0 bg-light op-8 border-0 rounded' id='search-input'/>\r\n        </div>\r\n      </div>\r\n      <div className='mr-5'>\r\n        <div className='text-white text-bold cursor-p border border-white border-bottom-0'>\r\n          <div className='mr'>\r\n            trello\r\n          </div>\r\n          <div \r\n            className='bg-white d-i-b border-0 pl'\r\n            style={titleTextStyle}>\r\n            clone\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className='btn btn-square btn-transparent rounded' onClick={addClicked}>\r\n          <i className='fa fa-plus'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst SideListItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n\r\n  const [isHover, setIsHover] = useState(false);\r\n\r\n  const hoverStyle = isHover ? {\r\n    background: board.color,\r\n    color: '#f4f4f4',\r\n    opacity: '0.7'\r\n  } : {\r\n    opacity: '1'\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    setIsHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setIsHover(false);\r\n  }\r\n\r\n  const onClick = () => {\r\n    setCurrentBoardId(board.id)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      onClick={onClick}\r\n      className=\"card pl-1 cursor-p p border-0 rounded-lg text-dark transition text-bold\"\r\n      style={hoverStyle}\r\n      >\r\n      { board.title.charAt(0).toUpperCase() + board.title.slice(1) }\r\n      { <i className=\"fa fa-check m-0 float-right\"></i> }\r\n    </div> \r\n  );\r\n};\r\n\r\nexport default SideListItem","import React, { useContext } from 'react';\r\nimport SideListItem from './SideListItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst HomeSideList = () => {\r\n  const { boards } = useContext(BoardContext);\r\n\r\n  return (\r\n    <aside>\r\n      <button className=\"btn btn-block btn-primary text-left rounded-lg\">\r\n        <i className=\"fa fa-notes-medical mr-1\"></i>\r\n        <div className=\"text-bold d-i-b\">Boards</div>\r\n      </button>\r\n      { boards.map(b => (\r\n        <SideListItem key={b.id} board={b} />\r\n      )) }\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default HomeSideList\r\n","import { createContext } from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext;","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst HomeMainItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n  const { setStar } = boardContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const itemStyle = {\r\n    background: board.color\r\n  }\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('fa-star')) {\r\n      setCurrentBoardId(board.id);\r\n    }\r\n  }\r\n\r\n  const onStarClicked = () => {\r\n    setStar(board.id);\r\n    setAlert(`${board.starred ? 'board added to favorites' : 'board removed from favorites'}`, `${board.starred ? 'success' : 'dark'}`, 2500);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='trello-home-main-item mt-1 mr-1'\r\n      style={itemStyle}\r\n      onClick={onClick}>\r\n        <div className='text-white func-title'>\r\n          { board.title.charAt(0).toUpperCase() + board.title.slice(1) }\r\n        </div>\r\n        <div\r\n          className='trello-home-main-item-star'\r\n          onClick={onStarClicked}>\r\n          <i className={`fa-star ${board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeMainItem\r\n","import React, { Fragment, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst Recent = () => {\r\n  const boardContext = useContext(BoardContext);\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { getRecentBoards } = boardContext;\r\n  const { recentIds } = userContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      { getRecentBoards(recentIds).length !== 0\r\n        &&  <div className=\"card border-top-0 border-right-0 border-left-0 pb-2\">\r\n              <i className=\"fa fa-clock mr-1\"></i>\r\n              Recent borads\r\n              <div className=\"\">\r\n                { getRecentBoards(recentIds).map(r => (\r\n                      <HomeMainItem key={uniqid()} board={r} />\r\n                    ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Recent\r\n","import React, { Fragment, useContext } from 'react';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Starred = () => {\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { getStarredBoards } = boardContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      { getStarredBoards().length !== 0\r\n        &&  <div className=\"card border-top-0 border-right-0 border-left-0 pb-2\">\r\n              <i className=\"fa fa-star mr-1\"></i>\r\n              favorite borads\r\n              <div className=\"\">\r\n                { getStarredBoards().map(s => (\r\n                      <HomeMainItem key={s.id} board={s} />\r\n                    ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Starred\r\n","import React, { useContext } from 'react';\r\nimport Recent from './Recent';\r\nimport Starred from './Starred';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst HomeMain = () => {\r\n  const { setModal } = useContext(UserContext);\r\n\r\n  const onAdd = () => {\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  return (\r\n    <main className='text-bold'>\r\n      <Starred />\r\n      <Recent />\r\n      <div className='card border-0'>\r\n        <div className='trello-home-main-item hover' onClick={onAdd}>\r\n          Add Board\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default HomeMain\r\n","import React from 'react';\r\nimport HomeSideList from './HomeSideList';\r\nimport HomeMain from './HomeMain';\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container grid-1-3 mt-3\">\r\n      <HomeSideList />\r\n      <HomeMain />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardTitle = ({ boardId, title, setTitle }) => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [text, setText] = useState('');\r\n  const [isSettingTitle, setIsSettingTitle] = useState(false);\r\n  const [textHasChanged, setTextHasChanged] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setText(title);\r\n    document.querySelector(`#board-title-${boardId}`).focus()\r\n    // eslint-disable-next-line\r\n  }, [isSettingTitle])\r\n\r\n  const onClick = () => {\r\n    setIsSettingTitle(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n    setTextHasChanged(true);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    onSetTitle();\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetTitle();\r\n    }\r\n  }\r\n\r\n  const onSetTitle = () => {\r\n    if(textHasChanged) {\r\n      if(text !== '') {\r\n        setTitle(text, currentBoardId);\r\n        setAlert('board title changed', 'success');\r\n        setIsSettingTitle(false);\r\n      } else {\r\n        setIsSettingTitle(false);\r\n        setAlert('board title can not be empty', 'danger');\r\n      }\r\n    } else {\r\n      setIsSettingTitle(false);\r\n      setTextHasChanged(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='d-i-b'>\r\n      <div\r\n        className={`text-white m-0 ml-1 ${isSettingTitle && 'd-n'}`}\r\n        onClick={onClick}>\r\n        { title.charAt(0).toUpperCase() + title.slice(1) }\r\n      </div>\r\n      <input\r\n        type='text'\r\n        id={`board-title-${boardId}`}\r\n        className={`m-0 rounded ${!isSettingTitle && 'd-n'}`}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        value={text}\r\n        onKeyUp={onKeyUp}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardTitle\r\n","import React, { useState, useContext } from 'react';\r\nimport BoardTitle from './BoardTitle';\r\n\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardNavbar = ({ board, setStar, setDescribtion, setTitle }) => {\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const [descText, setDescText] = useState('');\r\n  const [isSettingDesc, setIsSettingDesc] = useState(false);\r\n  \r\n  const onStarClick = () => {\r\n    setStar(board.id);\r\n    setAlert(`${board.starred ? 'board added to favorites' : 'board removed from favorites'}`, `${board.starred ? 'success' : 'dark'}`, 2000);\r\n  }\r\n\r\n  const onDescClick =() => {\r\n    setIsSettingDesc(true);\r\n    setDescText(board.describtion);\r\n    document.querySelector('#describtion-input').focus();\r\n  }\r\n\r\n  const onDescTextChange = (e) => {\r\n    e.target.value.length < 51\r\n      ? setDescText(e.target.value)\r\n      : setAlert('describtion can not be longer than 50 chars!!!', 'warning', 4000)\r\n  }\r\n\r\n  const onSetDesc = () => {\r\n    setDescribtion(descText, board.id);\r\n    setAlert('board describtion changed successfully', 'success');\r\n    setIsSettingDesc(false);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetDesc();\r\n    }\r\n  }\r\n\r\n  const navbarStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-navbar trello-navbar lighten-20' style={navbarStyle}>\r\n      <div className='card border-0 m-0 p-0'>\r\n        { board && <BoardTitle boardId={board.id} title={board.title} setTitle={setTitle} /> }\r\n        <div className='btn btn-transparent btn-square rounded ml-1' onClick={onStarClick}>\r\n          <i className={`fa-star ${board && board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n        <div className='ml-1 d-i-b text-white'>\r\n          { \r\n            board\r\n            && !isSettingDesc\r\n              && (board.describtion ? board.describtion : 'no describtion')\r\n          }\r\n        <input\r\n          type='text'\r\n          id='describtion-input'\r\n          className={`m-0 rounded ${!isSettingDesc && 'd-n'}`}\r\n          value={descText}\r\n          onChange={onDescTextChange}\r\n          onBlur={onSetDesc}\r\n          onKeyUp={onKeyUp} />\r\n        </div>\r\n        <div className='btn btn-transparent btn-square rounded ml-1' onClick={onDescClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n      </div>\r\n      <div className='btn text-sm btn-narrow btn-transparent'>\r\n        <i className=\"fas fa-ellipsis-h mr\"></i>\r\n        Show Menu\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardNavbar\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst ListTitle = ({ listId, title, setListTitle }) => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { currentBoardId, currentListId } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [text, setText] = useState('');\r\n  const [isSettingTitle, setIsSettingTitle] = useState(false);\r\n  const [textHasChanged, setTextHasChanged] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setText(title);\r\n    document.querySelector(`#list-title-${listId}`).focus()\r\n    // eslint-disable-next-line\r\n  }, [isSettingTitle])\r\n\r\n  const onClick = () => {\r\n    setIsSettingTitle(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n    setTextHasChanged(true);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    onSetListTitle();\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetListTitle();\r\n    }\r\n  }\r\n\r\n  const onSetListTitle = () => {\r\n    if(textHasChanged) {\r\n      if(text !== '') {\r\n        setListTitle(currentBoardId, currentListId, text);\r\n        setAlert('list title changed', 'success');\r\n        setIsSettingTitle(false);\r\n      } else {\r\n        setIsSettingTitle(false);\r\n        setAlert('list title can not be empty', 'warning');\r\n      }\r\n    } else {\r\n      setIsSettingTitle(false);\r\n      setTextHasChanged(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='d-i-b m-0'>\r\n      <div\r\n        className={`pt-1 mb pl m-0 ${isSettingTitle && 'd-n'}`}\r\n        onClick={onClick}>\r\n        { title }\r\n      </div>\r\n      <input\r\n        type='text'\r\n        id={`list-title-${listId}`}\r\n        value={text}\r\n        className={`m-0 mt p-0 pt pb pl text-bold text-80 border-0 rounded ${!isSettingTitle && 'd-n'}`}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        onKeyUp={onKeyUp}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListTitle\r\n","import React, { useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst CardLabel = ({ label, onClick, onMouseEnter, onMouseLeave, bigLabels }) => {\r\n  const { labels } = useContext(BoardContext);\r\n\r\n  const thisLabel = labels.filter(l => l.id === label)[0];\r\n\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      className={`func-card-label d-i-b label label-color-${thisLabel.colorName} ${bigLabels ? 'label-lg' : 'label-sm'}`}>\r\n      <div className='label-text m-0'>{ bigLabels && thisLabel.name }</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardLabel\r\n","import React, { useState } from 'react';\r\nimport CardLabel from './CardLabel';\r\n\r\nconst ListItemLabels = ({ labels, toggleBigLabels, bigLabels, father }) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const onClick = () => {\r\n    father === 'boardListItem' && toggleBigLabels();\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    father === 'boardListItem' && setHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setHover(false);\r\n  }\r\n\r\n  return (\r\n    <div className={`trello-board-list-item-labels-container m-0 p-0 ${hover && 'darken-30'}`}>\r\n      {\r\n        labels.map(l => <CardLabel key={l} label={l} onClick={onClick} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave} bigLabels={bigLabels} />)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListItemLabels\r\n","import React, { useRef, useContext } from 'react';\r\n\r\nimport ListItemLabels from './ListItemLabels';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst BoardListItem = ({ item }) => {\r\n  const listItem = useRef(null);\r\n\r\n  const { setCurrentCard, setModal, setFastEditModalPos, toggleBigLabels, bigLabels } = useContext(UserContext);\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('func-e-btn') && !e.target.parentElement.classList.contains('func-e-btn') && !e.target.classList.contains('func-card-label')) {\r\n      setModal('on', 'detailsModal');\r\n    }\r\n    setCurrentCard(item);\r\n  }\r\n\r\n  const onEBtnClick = (e) => {\r\n    console.log('use useRef here for setFastEditModalPos')\r\n    if(e.target.classList.contains('func-e-btn')) {\r\n      setFastEditModalPos({\r\n        top: e.target.parentElement.getBoundingClientRect().top,\r\n        left: e.target.parentElement.getBoundingClientRect().left,\r\n        width: e.target.parentElement.getBoundingClientRect().width\r\n      });\r\n    } else {\r\n      setFastEditModalPos({\r\n        top: e.target.parentElement.parentElement.getBoundingClientRect().top,\r\n        left: e.target.parentElement.parentElement.getBoundingClientRect().left,\r\n        width: e.target.parentElement.parentElement.getBoundingClientRect().width\r\n      });\r\n    }\r\n    setModal('on', 'fastEditModal');\r\n  }\r\n\r\n  let timer;\r\n  const touchduration = 500;\r\n\r\n  const onTouchStart = () => {\r\n    timer = setTimeout(onlongtouch, touchduration);\r\n    setCurrentCard(item);\r\n  }\r\n\r\n  const onTouchEnd = () => {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n    }\r\n  }\r\n\r\n  const onlongtouch = () => {\r\n    if(listItem.current !== null) {\r\n      setFastEditModalPos({\r\n        top: listItem.current.getBoundingClientRect().top,\r\n        left: listItem.current.getBoundingClientRect().left,\r\n        width: listItem.current.getBoundingClientRect().width\r\n      });\r\n      setModal('on', 'fastEditModal');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='trello-board-list-item'\r\n      ref={listItem}\r\n      onClick={onClick}\r\n      onTouchStart={onTouchStart}\r\n      onTouchEnd={onTouchEnd}>\r\n        <ListItemLabels father='boardListItem' labels={item.labels} bigLabels={bigLabels} toggleBigLabels={toggleBigLabels} />\r\n        <div>\r\n          { item.text }\r\n          <div className='text-sm'>\r\n            { item.desc && item.desc }\r\n          </div>\r\n        </div>\r\n        <div className='func-e-btn trello-board-list-item-edit-btn' onClick={onEBtnClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardListItem\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport ListTitle from './ListTitle';\r\nimport BoardListItem from './BoardListItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardList = ({ list, boardFuncs /* all of board context */ }) => {\r\n\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { setCurrentListId, currentBoardId, setOptionsModal, addCardFromListActions } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [wantToAddCard, setWantToAddCard] = useState(false);\r\n  const [newCardText, setNewCardText] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(addCardFromListActions === list.id) {\r\n      setWantToAddCard(true);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [addCardFromListActions]);\r\n\r\n  const onAddCardClick = () => {\r\n    !wantToAddCard && setWantToAddCard(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    if(e.keyCode !== 13) {\r\n      setNewCardText(e.target.value);\r\n    }\r\n  }\r\n\r\n  const onTextareaBlur = () => {\r\n    if(newCardText !== '') {\r\n      addCard();\r\n    } else {\r\n      cancelAddCard();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13 && newCardText.length > 1) {\r\n      addCard();\r\n    } else if(e.keyCode === 13 && newCardText.length === 1) {\r\n      setNewCardText('');\r\n    }\r\n  }\r\n\r\n  const addCard = () => {\r\n    if(newCardText !== '') {\r\n      // three parameters: 1.text 2.list id 3.board id\r\n      boardFuncs.addCard(newCardText, list.id, currentBoardId);\r\n      setAlert('card added', 'success');\r\n      setNewCardText('');\r\n    }\r\n  }\r\n\r\n  const cancelAddCard = () => {\r\n    setWantToAddCard(false);\r\n    setNewCardText('');\r\n  }\r\n\r\n  const onListCLick = () => {\r\n    setCurrentListId(list.id);\r\n  }\r\n\r\n  const onlistOptionsClick = () => {\r\n    setOptionsModal('on', 'listActions');\r\n  }\r\n\r\n  const onNewCardOptionsClick = () => {\r\n    setOptionsModal('on', 'newCardActions');\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-list' onClick={onListCLick}>\r\n      <div className='trello-board-list-header'>\r\n        <ListTitle listId={list.id} title={list.title} setListTitle={boardFuncs.setListTitle} />\r\n        <div className='btn bg-transparent-with-hover btn-square float-right mt' onClick={onlistOptionsClick}>\r\n          <i className='fas fa-ellipsis-h'></i>\r\n        </div>\r\n        {\r\n          list.watching &&\r\n          <div className='text-85 bg-transparent btn-square float-right mt'>\r\n            <i className='fas fa-eye'></i>\r\n          </div>\r\n        }\r\n      </div>\r\n      <div className='trello-board-list-items'>\r\n        { list.items.map((i, index) => (\r\n          <BoardListItem key={i.id} item={i} />\r\n        )) }\r\n        <div className={`trello-board-list-item trello-board-card-compose  ${!wantToAddCard && 'd-n'}`}>\r\n          <textarea\r\n            className='trello-board-card-compose-textarea'\r\n            placeholder='Enter a title for this card'\r\n            onBlur={onTextareaBlur}\r\n            onKeyUp={onKeyUp}\r\n            onChange={onChange}\r\n            value={newCardText}>\r\n\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`trello-board-footer ${!wantToAddCard && 'hover cursor-p'}`}\r\n        onClick={onAddCardClick}>\r\n        { !wantToAddCard\r\n          ?  (<div>\r\n                {list.items.length === 0 ? '+ Add a card' : '+ Add another card'}\r\n              </div>) \r\n          : (\r\n            <Fragment>\r\n              <div className='btn btn-success' onClick={addCard}>\r\n                Add Card\r\n              </div>\r\n              <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddCard}>\r\n                &times;\r\n              </div>\r\n              <div className='btn bg-transparent-with-hover btn-square float-right'          onClick={onNewCardOptionsClick}>\r\n                  <i className='fas fa-ellipsis-h'></i>\r\n              </div>\r\n            </Fragment>\r\n          )  \r\n        }      \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardList\r\n","import React, { Fragment, useState, useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst AddList = ({ board, setScrollIflonger }) => {\r\n  const boardContext = useContext(BoardContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { addList } = boardContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [text, setText] = useState('')\r\n\r\n  const onClick = () => {\r\n    setIsAdding(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    if(text !== '') {\r\n      onAddList();\r\n    } else {\r\n      cancelAddList();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAddList();\r\n    }\r\n  }\r\n\r\n  const onAddList = () => {\r\n    if(text !== '') {\r\n      addList(text, board.id);\r\n      setAlert(`list ${text} added`, 'success');\r\n      setText('');\r\n      setScrollIflonger();\r\n    } else {\r\n      setAlert(`list title can not be empty`, 'warning');\r\n    }\r\n  }\r\n\r\n  const cancelAddList = () => {\r\n    setIsAdding(false);\r\n    setText('');\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`trello-board-add-list-btn btn-light op-8 darken-20 text-dark ${isAdding && 'd-n'}`}\r\n        onClick={onClick}>\r\n          { board && board.lists.length === 0 ? '+ Add a list' : '+ Add another list' }\r\n      </div>\r\n      <div\r\n        className={`trello-board-add-list-form btn-light op-9 darken-20 text-dark ${!isAdding && 'd-n'}`}>\r\n          <input\r\n            type='text'\r\n            className='m-0 rounded-lg mb-1'\r\n            placeholder='Enter list name'\r\n            value={text}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            onKeyUp={onKeyUp}/>\r\n          <div className='btn btn-success' onClick={onAddList}>\r\n            Add List\r\n          </div>\r\n          <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddList}>\r\n            &times;\r\n          </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddList\r\n","import React, { useState, useEffect } from 'react';\r\nimport BoardList from './BoardList';\r\nimport AddList from './AddList';\r\n\r\nconst BoardMain = ({ board, boardFuncs /* contains all of board context  */ }) => {\r\n  const [style, setStyle] = useState({});\r\n\r\n  useEffect(() => {\r\n    setScrollIflonger();\r\n    // eslint-disable-next-line\r\n  }, [board]);\r\n\r\n  const setScrollIflonger = () => {\r\n    const boardWidth = (board.lists.length + 1) * 270;\r\n\r\n    if(16 + boardWidth > window.innerWidth) {\r\n      setStyle({\r\n        display: 'grid',\r\n        gridTemplateRows: '1fr',\r\n        gridTemplateColumns: `repeat(${board && board.lists.length + 1}, 1fr)`\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-main' style={style}>\r\n      { board.lists.map(l => (\r\n          <div key={l.id} className='trello-board-list-wrapper'>\r\n            <BoardList list={l} boardFuncs={boardFuncs} />\r\n          </div>\r\n        )) }\r\n      <div className='trello-board-list-wrapper'>\r\n        <AddList board={board} setScrollIflonger={setScrollIflonger} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardMain\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport BoardNavbar from './BoardNavbar';\r\nimport BoardMain from './BoardMain';\r\n\r\n// context\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\n// css\r\nimport './board.css';\r\n\r\nconst Board = () => {\r\n  const [board, setBoard] = useState(null);\r\n\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { getBoard, setStar, setDescribtion, setTitle } = boardContext;\r\n\r\n  useEffect(() => {\r\n    setBoard(getBoard(currentBoardId));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const boardStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <BoardNavbar\r\n        board={board}\r\n        setStar={setStar}\r\n        setDescribtion={setDescribtion}\r\n        setTitle={setTitle} />\r\n      <div className='trello-board-main-wrapper lighten-20 p' style={boardStyle}>\r\n        {board && <BoardMain boardFuncs={boardContext} board={board} />}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nimport './modals.css';\r\n\r\nconst AddBoardModal = () => {\r\n  const { setModal, clearCurrentBoardId } = useContext(UserContext);\r\n  const { addBoard } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const [bg, setBg] = useState('#ee3a59');\r\n  const [text, setText] = useState('');\r\n\r\n  const onBgClicked = (e) => {\r\n    if(!e.target.classList.contains('func-no-click') && !e.target.classList.contains('func-colors')) {\r\n      setBg(e.target.id);\r\n    }\r\n  }\r\n\r\n  const onClose = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAdd();\r\n    }\r\n  }\r\n\r\n  const onAdd = () => {\r\n    if(text !== '') {\r\n      addBoard(text, bg);\r\n      onClose();\r\n      setAlert(`board ${text.charAt(0).toUpperCase() + text.slice(1)} was created`, 'success', 4000);\r\n      clearCurrentBoardId();\r\n    }\r\n  }\r\n\r\n  const bgColor = {\r\n    backgroundColor: bg\r\n  }\r\n\r\n  return (\r\n    <div className='modal-content add-board-modal-content'>\r\n      <div className='grid-3-1'>\r\n        <div className='p-1 grid-3-1 rounded-lg' style={bgColor}>\r\n          <div>\r\n            <input\r\n              type='text'\r\n              placeholder='Add board title'\r\n              value={text}\r\n              onChange={onChange}\r\n              onKeyUp={onKeyUp}\r\n              className='m-0 border-0 text-bold text-light pl-1 rounded'/>\r\n          </div>\r\n          <div>\r\n            <div className='close' onClick={onClose}>\r\n              &times;\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='func-colors grid-3 gap-half' onClick={onBgClicked}>\r\n          <div id='#ee3a59' className='rounded-lg p-1 background-red cursor-p'></div>\r\n          <div id='#e27b47' className='rounded-lg p-1 background-orange cursor-p'></div>\r\n          <div id='#efca58' className='rounded-lg p-1 background-yellow cursor-p'></div>\r\n          <div id='#46b29e' className='rounded-lg p-1 background-blue-l cursor-p'></div>\r\n          <div id='#344e5c' className='rounded-lg p-1 background-blue-d cursor-p'></div>\r\n          <div className='func-no-click'></div>\r\n          <div id='custom' className='rounded-lg p-1 bg-light cursor-p'></div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        onClick={onAdd}\r\n        className={`btn btn-narrow m text-bold ${text !== '' ? 'btn-success' : 'cursor-not-allowed'}`}>\r\n          Create Board\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddBoardModal\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nconst DetailsModal = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setModal, currentCard } = userContext;\r\n\r\n  const onClose = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  return (\r\n    <div className='details-modal-container'>\r\n      <div className='details-modal-header'>\r\n        <div className='close text-lg' onClick={onClose}>\r\n          &times;\r\n        </div>\r\n        <i className='fas fa-th-list mr-1'></i>\r\n        { currentCard.text }\r\n      </div>\r\n      <div className='details-modal-body'>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailsModal\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\n\r\nimport ListItemLabels from '../pages/board/ListItemLabels';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst FastEditModal = () => {\r\n  const theTextarea = useRef(null);\r\n\r\n  const {\r\n    currentBoardId,\r\n    currentListId,\r\n    fastEditModalPos,\r\n    currentCard,\r\n    clearCurrentCard,\r\n    setOptionsModal,\r\n    setModal,\r\n    bigLabels } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  useEffect(() => {\r\n    setText(currentCard.text);\r\n    theTextarea.current.focus();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const modalPos = {\r\n    position: 'absolute',\r\n    top: fastEditModalPos.top + 'px',\r\n    left: fastEditModalPos.left + 'px'\r\n  }\r\n\r\n  const rightWidth = {\r\n    width: fastEditModalPos.width + 'px'\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onUpdate();\r\n    }\r\n  }\r\n\r\n  const onUpdate = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      text\r\n    }\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    clearCurrentCard();\r\n    setModal('off');\r\n  }\r\n\r\n  const onAtionsClick = (e) => {\r\n    if(e.target.classList.contains('fas')) {\r\n      setOptionsModal('on', e.target.parentElement.id);\r\n    } else if(e.target.classList.contains('func-action-btn')) {\r\n      setOptionsModal('on', e.target.id);\r\n    } else {\r\n      setModal('off');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={modalPos} className='modal-content grid-2 gap-half'>\r\n      <div style={rightWidth} className='fast-edit-modal-right-container'>\r\n        <div className='fast-edit-modal-right'>\r\n          <ListItemLabels father='fastEditModal' bigLabels={bigLabels} labels={currentCard.labels} />\r\n          <textarea\r\n            ref={theTextarea}\r\n            className='m-0 border-0 p-0'\r\n            value={text}\r\n            onChange={onChange}\r\n            onKeyUp={onKeyUp}>\r\n          </textarea>\r\n        </div>\r\n        <div className='btn btn-success mt' onClick={onUpdate}>\r\n          Save\r\n        </div>\r\n      </div>\r\n      <div className='fast-edit-modal-action-container' onClick={onAtionsClick}>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='editCardLabels'>\r\n            <i className='fas fa-tag mr'></i>\r\n            Edit labels\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='members'>\r\n            <i className='fas fa-user mr'></i>\r\n            Change members\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='move'>\r\n            <i className='fas fa-arrow-right mr'></i>\r\n            Move\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='deleteCard'>\r\n            <i className='fas fa-trash mr'></i>\r\n            Delete card\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FastEditModal\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport AddBoardModal from './AddBoardModal';\r\nimport DetailsModal from './DetailsModal';\r\nimport FastEditModal from './FastEditModal';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nimport './modals.css';\r\n\r\nconst Modal = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { modalStatus, modalType, setModal } = userContext;\r\n\r\n  const [showModal, setShowModal] = useState('off');\r\n  \r\n  useEffect(() => {\r\n    setShowModal(modalStatus/* from useState */);\r\n    // eslint-disable-next-line\r\n  }, [modalStatus])\r\n\r\n  const onClick = (e) => {\r\n    if(e.target.classList.contains('modal')) {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const modalDisplay = {\r\n    display: showModal === 'on' ? 'block' : 'none'\r\n  }\r\n\r\n  return (\r\n    <div \r\n      style={modalDisplay}\r\n      className='modal'\r\n      onClick={onClick}>\r\n      {\r\n        modalType === 'addBoardModal' && <AddBoardModal />\r\n      }\r\n      {\r\n        modalType === 'detailsModal' && <DetailsModal />\r\n      }\r\n      {\r\n        modalType === 'fastEditModal' && <FastEditModal />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useContext } from 'react'\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst DeleteCard = () => {\r\n  const { currentBoardId, currentListId, currentCard, setModal, setOptionsModal } = useContext(UserContext);\r\n  const { deleteCard } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const onClick = () => {\r\n    deleteCard(currentBoardId, currentListId, currentCard.id);\r\n    setModal('off');\r\n    setOptionsModal('off');\r\n    setAlert('card deleted', 'dark');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='text-85 m mb-1'>\r\n        are you sure you want to delete this card?\r\n        its permanent\r\n      </div>\r\n      <div className='btn btn-danger btn-block hover-op-10 hover-lighten' onClick={onClick}>\r\n        Delete\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteCard\r\n","import React, { useState } from 'react';\r\n\r\nconst EditCardLabelItem = ({ label, setLabelId, goToEditLabel, currentCard }) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const onClick = () => {\r\n    setLabelId(label.id);\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    setHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setHover(false);\r\n  }\r\n\r\n  const onPenClick = () => {\r\n    goToEditLabel(label);\r\n  }\r\n\r\n  return (\r\n    <div className='label-item mb width-100'>\r\n      <div\r\n        className={`rounded-lg d-i-b text-sm label-color label-color-${label.colorName} ${hover && `label-color-${label.colorName}-hover`}`}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n        onClick={onClick}>\r\n        {\r\n          currentCard.labels.indexOf(label.id) !== -1\r\n            && <i className='label-color-check fas fa-check text-white float-right'></i>\r\n        }\r\n        <div className='label-color-text text-85 ml text-white'>\r\n          { label.name !== '' && label.name }\r\n        </div>\r\n      </div>\r\n      <div className='btn btn-no-bg rounded-lg d-i-b float-right p' onClick={onPenClick}>\r\n        <i className='fas fa-pen text-sm'></i>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditCardLabelItem\r\n","import React, { useContext } from 'react';\r\n\r\nimport EditCardLabelItem from './EditCardLabelItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst EditCardLabels = () => {\r\n  const { currentBoardId, currentListId, currentCard, setCurrentCard, setOptionsModal, setOptionsModalStep } = useContext(UserContext);\r\n  const { updateCard, labels } = useContext(BoardContext);\r\n\r\n\r\n  const setLabel = (id) => {\r\n    let newCard;\r\n    if(currentCard.labels.indexOf(id) === -1) {\r\n      // card hasnt this id / add the id\r\n      newCard = {\r\n        ...currentCard,\r\n        labels: [...currentCard.labels, id]\r\n      }\r\n    } else {\r\n      // card has this id / remove the id\r\n      newCard = {\r\n        ...currentCard,\r\n        labels: currentCard.labels.filter(l => l !== id)\r\n      }\r\n    }\r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    setCurrentCard(newCard);\r\n  }\r\n\r\n  const goToEditLabel = (label) => {\r\n    setOptionsModalStep('on', 'editCardLabels', {label, type: 'edit'});\r\n    setOptionsModal('on', 'editLabel');\r\n  }\r\n\r\n  const onCreateClick = () => {\r\n    setOptionsModalStep('on', 'editCardLabels', {type: 'create'});\r\n    setOptionsModal('on', 'editLabel');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input type='text' placeholder='search labels...' className='mt mb-1 text-85 p'/>\r\n      <div className='text-85 mb'>\r\n        Labels\r\n      </div>\r\n      {\r\n        labels.map(l => (\r\n          <EditCardLabelItem key={l.id} label={l} goToEditLabel={goToEditLabel} setLabelId={setLabel} currentCard={currentCard} />\r\n        ))\r\n      }\r\n      <div className='btn btn-block mt-1 text-85 mt mb' onClick={onCreateClick}>\r\n        create new label\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditCardLabels\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst EditLabel = () => {\r\n  const [text, setText] = useState('');\r\n  const [colorName, setColorName] = useState(null);\r\n\r\n  const {\r\n    setOptionsModal,\r\n    setOptionsModalStep,\r\n    currentCard,\r\n    currentBoardId,\r\n    currentListId,\r\n    setCurrentCard,\r\n    optionsModalStepData: data } = useContext(UserContext);\r\n  const { labels, colors, updateCard, addLabel, updateLabel, deleteLabel } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    data.type === 'edit' && setText(data.label.name);\r\n    data.type === 'edit' ? setColorName(data.label.colorName) : setColorName('green');\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onColorClick = (e) => {\r\n    setColorName(e.target.id);\r\n  }\r\n\r\n  const onSave = () => {\r\n    if(data.type === 'edit') {\r\n      updateLabel(text, colorName, data.label.id);\r\n      setOptionsModal('on', 'editCardLabels');\r\n      setOptionsModalStep('off');\r\n      setAlert('Label updated', 'success');\r\n    } else if(data.type === 'create') {\r\n      let is = false;\r\n      \r\n      labels.forEach(label => {\r\n        if(label.colorName === colorName) {\r\n          if(label.name === text) {\r\n            is = true\r\n          }\r\n        }\r\n      });\r\n\r\n      if(!is) {\r\n        const newId = uniqid();\r\n        // add to list of labels in board state\r\n        addLabel(text, colorName, newId);\r\n        const newCard = {\r\n          ...currentCard,\r\n          labels: [...currentCard.labels, newId]\r\n        }\r\n        // add label to current board\r\n        updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n        setCurrentCard(newCard);\r\n        setAlert('Label created', 'success');\r\n      } else {\r\n        setAlert('Label already exits', 'light');\r\n      }\r\n\r\n      setOptionsModal('on', 'editCardLabels');\r\n      setOptionsModalStep('off');\r\n    }\r\n  }\r\n\r\n  const onDelete = () => {\r\n    deleteLabel(data.label.id);\r\n    setOptionsModal('on', 'editCardLabels');\r\n    setOptionsModalStep('off');\r\n    setAlert('Label deleted', 'dark');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input type='text' className='m-0 text-85 p' value={text} placeholder='enter label name' onChange={onChange}/>\r\n      <div className='text-85 mt mb'>\r\n        pick a color\r\n      </div>\r\n      <div className='mb'>\r\n        {\r\n          colors.map(color => (\r\n            <div key={color.name} style={{ background: color.color }} className='color-for-select hover-lighten' id={color.name} onClick={onColorClick}>\r\n              { \r\n                color.name === colorName\r\n                  && <i className='fas fa-check text-85 text-white m-0'></i> \r\n              }\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n      <div>\r\n        <div className='btn btn-success' onClick={onSave}>\r\n          {\r\n            data.type === 'edit'\r\n              ? 'Save'\r\n              : 'Create'\r\n          }\r\n        </div>\r\n        {\r\n          data.type === 'edit'\r\n            &&  <div className='btn btn-danger float-right' onClick={onDelete}>\r\n                  Delete\r\n                </div>\r\n        }\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditLabel\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst ListActions = () => {\r\n  const {\r\n    currentBoardId,\r\n    currentListId,\r\n    setOptionsModal,\r\n    setOptionsModalStep,\r\n    setAddCardFromListActions\r\n  } = useContext(UserContext);\r\n  const { getList, setWatching } = useContext(BoardContext);\r\n\r\n  const onAddCardClicked = () => {\r\n    setAddCardFromListActions(currentListId);\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const onCopyClicked = () => {\r\n    setOptionsModal('on', 'copyList');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  const onMoveClicked = () => {\r\n    setOptionsModal('on', 'moveList');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  const onWatchClicked = () => {\r\n    setWatching(currentBoardId, currentListId);\r\n  }\r\n\r\n  const onMoveAllCardsClicked = () => {\r\n    console.log('move all')\r\n  }\r\n\r\n  const onSortClicked = () => {\r\n    console.log('sort')\r\n  }\r\n\r\n  const onDeleteAllCardsClicked = () => {\r\n    setOptionsModal('on', 'deleteAllCards');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  const onDeleteClicked = () => {\r\n    setOptionsModal('on', 'deleteList');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='list-action-item' onClick={onAddCardClicked}>\r\n        add card...\r\n      </div>\r\n      <div className='list-action-item' onClick={onCopyClicked}>\r\n        copy list\r\n      </div>\r\n      <div className='list-action-item' onClick={onMoveClicked}>\r\n        move list\r\n      </div>\r\n      <div className='list-action-item' onClick={onWatchClicked}>\r\n        watch\r\n        {\r\n          getList(currentBoardId, currentListId).watching\r\n            && <i className='fas fa-check ml text-85'></i>\r\n        }\r\n      </div>\r\n      <hr />\r\n      <div className='list-action-item' onClick={onMoveAllCardsClicked}>\r\n        move all cards in this list\r\n      </div>\r\n      <div className='list-action-item' onClick={onSortClicked}>\r\n        sort...\r\n      </div>\r\n      <hr />\r\n      <div className='list-action-item delete-list' onClick={onDeleteAllCardsClicked}>\r\n        delete all cards in this list\r\n      </div>\r\n      <div className='list-action-item delete-list' onClick={onDeleteClicked}>\r\n        delete this list\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListActions\r\n","import React, { useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst DeleteList = () => {\r\n  const { deleteList } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n\r\n  const onClick = () => {\r\n    deleteList(currentBoardId, currentListId);\r\n    setOptionsModal('off');\r\n    setAlert('list deleted', 'dark');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-1 mt p-1\">\r\n        delete this list ?\r\n        its permanent\r\n      </div>\r\n      <div className=\"btn btn-block btn-danger\" onClick={onClick}>\r\n        Delete\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteList\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst CopyList = () => {\r\n  const [name, setName] = useState('');\r\n  \r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n  const { getList, copyList } = useContext(BoardContext);\r\n\r\n  useEffect(() => {\r\n    setName(getList(currentBoardId, currentListId).title);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onCLick = () => {\r\n    copyList(currentBoardId, currentListId, name);\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setName(e.target.value);\r\n    // console.log(e.trgte.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"text-85\">\r\n        name\r\n      </div>\r\n      <input type=\"text\" className=\"m-0 mb mt pl-1\" value={name} onChange={onChange} />\r\n      <div className=\"btn btn-success mt-1\" onClick={onCLick}>\r\n        Copy List\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CopyList\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst MoveList = () => {\r\n  const boardsSelect = useRef(null);\r\n  const PosSelect = useRef(null);\r\n  \r\n  const [destBoardId, setDestBoardId] = useState(null);\r\n  const [desPos, setDestPos] = useState(null);\r\n  const [changed, setChanged] = useState(false);\r\n\r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n  const { boards, getBoard, moveList } = useContext(BoardContext);\r\n\r\n  useEffect(() => {\r\n    setDestBoardId(currentBoardId);\r\n    setDestPos(getBoard(currentBoardId).lists.findIndex(l => l.id === currentListId));\r\n    boardsSelect.current.value = currentBoardId;\r\n    // eslint-disable-next-line\r\n  }, [currentBoardId, currentListId]);\r\n\r\n  const onBoardDestChange = (e) => {\r\n    setChanged(true);\r\n    setDestBoardId(e.target.value);\r\n  }\r\n\r\n  const onListDestChange = (e) => {\r\n    setChanged(true);\r\n    setDestPos(Number(e.target.value) - 1);\r\n  }\r\n\r\n  const onMove = () => {\r\n    if(changed) {\r\n      moveList(currentBoardId, currentListId, destBoardId, desPos);\r\n    }\r\n\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  return (\r\n    <div className='text-85'>\r\n      <div className=\"p\">\r\n        board\r\n      </div>\r\n      <select ref={boardsSelect} onChange={onBoardDestChange} className='mb'>\r\n        {\r\n          boards.map(board => (\r\n            <option key={board.id} value={board.id}>{ board.title }{ board.id === currentBoardId && '(current)' }</option>\r\n          ))\r\n        }\r\n      </select>\r\n      <div className=\"p\">\r\n        position\r\n      </div>\r\n      <select ref={PosSelect} onChange={onListDestChange} className='mb'>\r\n        {\r\n          destBoardId && getBoard(destBoardId).lists.map((list, index) => (\r\n            <option key={list.id} value={index + 1}>{ index + 1 }{ list.id === currentListId && '(current)' }</option>\r\n          ))\r\n        }\r\n        {\r\n          destBoardId\r\n            && (destBoardId !== currentBoardId)\r\n             && <option value={getBoard(destBoardId).lists.length + 1}>{ getBoard(destBoardId).lists.length + 1 }</option>\r\n        }\r\n      </select>\r\n      <div className='btn btn-success' onClick={onMove}>\r\n        Move\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoveList\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst DeleteAllCards = () => {\r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n  const { getList, deleteAllCards } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const onClick = () => {\r\n    setOptionsModal('off');\r\n    if(getList(currentBoardId, currentListId).items.length !== 0) {\r\n      setAlert('all cards were deleted!!', 'dark');\r\n      deleteAllCards(currentBoardId, currentListId);\r\n    } else {\r\n      setAlert('no card to delete!', 'warning', 2500);\r\n      setTimeout(() => {\r\n        setAlert('enter some Card first', 'light', 2500);\r\n        setTimeout(() => {\r\n          setAlert('then try to delete cards', 'primary', 2500);\r\n          setTimeout(() => {\r\n            setAlert('you undrestand?', 'danger', 2500);\r\n            setTimeout(() => {\r\n              setAlert('what card you want me to delete?', 'danger', 2500);\r\n            }, 2500);\r\n          }, 2500);\r\n        }, 2500);\r\n      }, 2500);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='p'>\r\n        are you sure you want to delete all cards in the list <b>{ getList(currentBoardId, currentListId).title }</b>?\r\n      </div>\r\n      <div className='btn btn-block btn-danger mt-1' onClick={onClick}>\r\n        Delete All Cards\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteAllCards\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport DeleteCard from './options/DeleteCard';\r\nimport EditCardLabels from './options/EditCardLabels';\r\nimport EditLabel from './options/EditLabel';\r\nimport ListActions from './options/ListActions';\r\nimport DeleteList from './options/DeleteList';\r\nimport CopyList from './options/CopyList';\r\nimport MoveList from './options/MoveList';\r\nimport DeleteAllCards from './options/DeleteAllCards';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nimport './modals.css';\r\n\r\nconst OptionsModal = () => {\r\n  const container = useRef(null);\r\n\r\n  const userContext = useContext(UserContext);\r\n\r\n  const {\r\n    optionsModalStatus,\r\n    optionsModalType,\r\n    optionsModalStepStatus,\r\n    optionsModalStepType,\r\n    mousePos,\r\n    setOptionsModal,\r\n    setOptionsModalStep} = userContext;\r\n\r\n  const [showModal, setShowModal] = useState('off');\r\n  const [pos, setPos] = useState({});\r\n  \r\n  useEffect(() => {\r\n    setShowModal(optionsModalStatus/* from useState */);\r\n    setOptionsPos();\r\n    // eslint-disable-next-line\r\n  }, [optionsModalStatus, mousePos])\r\n\r\n  const onClick = (e) => {\r\n    if(e.target.id === 'options-modal') {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  const onBack = () => {\r\n    setOptionsModal('on', optionsModalStepType);\r\n    setOptionsModalStep('off');\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const setOptionsPos = () => {\r\n    setTimeout(() => {\r\n      if(mousePos) {\r\n        let rect;\r\n        rect = container.current.getBoundingClientRect();\r\n\r\n        if(window.innerWidth - mousePos.x - 10 < rect.width && window.innerHeight - mousePos.y > rect.height) {\r\n          setPos({\r\n            right: 10,\r\n            top: mousePos.y + 10 + 'px'\r\n          });\r\n        } else if(window.innerHeight - mousePos.y - 10 < rect.height && window.innerWidth - mousePos.x > rect.width) {\r\n          setPos({\r\n            left: mousePos.x + 10 + 'px',\r\n            bottom: 10\r\n          })\r\n        } else if(window.innerHeight - mousePos.y - 10 < rect.height && window.innerWidth - mousePos.x - 10 < rect.width) {\r\n            setPos({\r\n            right: 10,\r\n            bottom: 10\r\n          })\r\n        } else {\r\n          setPos({\r\n            left: mousePos.x + 10 + 'px',\r\n            top: mousePos.y + 10 + 'px'\r\n          })\r\n        }\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  const modalDisplay = {\r\n    display: showModal === 'on' ? 'block' : 'none'\r\n  }\r\n\r\n  return (\r\n    <div \r\n      style={modalDisplay}\r\n      id='options-modal'\r\n      onClick={onClick}>\r\n        <div ref={container} className='options-modal-container' style={pos}>\r\n          <div className='options-modal-header'>\r\n            {\r\n              optionsModalStepStatus === 'on'\r\n                && <div className='back d-i-b float-left cursor-p lighten-30 hover-darken' onClick={onBack}>\r\n                      <i className='fas fa-angle-left'></i>\r\n                    </div>\r\n            }\r\n            <div className=\"close\" onClick={closeModal}>\r\n              &times;\r\n            </div>\r\n            {\r\n              optionsModalType === 'editCardLabels' && 'Labels'\r\n            }\r\n            {\r\n              optionsModalType === 'editLabel' && 'Change Label'\r\n            }\r\n            {\r\n              optionsModalType === 'move' && 'Move card'\r\n            }\r\n            {\r\n              optionsModalType === 'members' && 'Members'\r\n            }\r\n            {\r\n              optionsModalType === 'deleteCard' && 'Delete Card'\r\n            }\r\n            {\r\n              optionsModalType === 'listActions' && 'List Actions'\r\n            }\r\n            {\r\n              optionsModalType === 'deleteList' && 'Delete List'\r\n            }\r\n            {\r\n              optionsModalType === 'copyList' && 'Copy List'\r\n            }\r\n            {\r\n              optionsModalType === 'moveList' && 'Move List'\r\n            }\r\n            {\r\n              optionsModalType === 'deleteAllCards' && 'Empty the List'\r\n            }\r\n          </div>\r\n          <div className='options-modal-body'>\r\n            {\r\n              optionsModalType === 'deleteCard' && <DeleteCard />\r\n            }\r\n            {\r\n              optionsModalType === 'editCardLabels' && <EditCardLabels />\r\n            }\r\n            {\r\n              optionsModalType === 'editLabel' && <EditLabel />\r\n            }\r\n            {\r\n              optionsModalType === 'listActions' && <ListActions />\r\n            }\r\n            {\r\n              optionsModalType === 'deleteList' && <DeleteList />\r\n            }\r\n            {\r\n              optionsModalType === 'copyList' && <CopyList />\r\n            }\r\n            {\r\n              optionsModalType === 'moveList' && <MoveList />\r\n            }\r\n            {\r\n              optionsModalType === 'deleteAllCards' && <DeleteAllCards />\r\n            }\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OptionsModal\r\n","import React from 'react'\r\n\r\nconst AlertItem = ({ alert, deleteAlert }) => {\r\n  const onClick = () => {\r\n    deleteAlert(alert.id);\r\n  }\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      className={`trello-alert-item alert rounded-lg alert-${alert.type}`}>\r\n        <div className='trello-alert-item-msg'>\r\n          { alert.msg.charAt(0).toUpperCase() + alert.msg.slice(1) }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertItem\r\n","import React, { useContext } from 'react';\r\nimport AlertItem from './AlertItem';\r\n\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alerts = () => {\r\n  const { alerts, deleteAlert } = useContext(AlertContext);\r\n\r\n  return (\r\n    <div className='trello-alerts-wrapper'>\r\n      {\r\n        alerts.map(a => (\r\n          <AlertItem\r\n            key={a.id}\r\n            alert={a}\r\n            deleteAlert={deleteAlert} />\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alerts\r\n","import React, { useEffect, useContext } from 'react';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Home from './components/pages/home/Home';\r\nimport Board from './components/pages/board/Board';\r\nimport Modal from './components/modal/Modal';\r\nimport OptionsModal from './components/modal/OptionsModal';\r\nimport Alerts from './components/alert/Alerts';\r\n\r\nimport UserContext from './context/user/userContext';\r\n\r\nimport './trello-clone.css';\r\nimport './trello-clone-keyframes.css';\r\n\r\nconst App = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const {\r\n    setCurrentBoardId,\r\n    currentBoardId,\r\n    setMousePos,\r\n    optionsModalStatus } = userContext\r\n\r\n  // to display board page for development purposes\r\n  useEffect(() => {\r\n    setCurrentBoardId('k0f0psnk');\r\n    console.log('focus on inputs')\r\n    console.log('change the word \"item\" to card in context and stuff')\r\n    console.log('sort the list actions ( put them in [dasteh] )')\r\n    console.log('setScrollIfLonger if board copied')\r\n    console.log('newCardActions in boardList does nothing yet ( add card must be editted to send an object to the context not a text )')\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onClick = (e) => {\r\n    if(optionsModalStatus === 'off') {\r\n      setMousePos(e.clientX, e.clientY)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div onClick={onClick} id='all-wrapper'>\r\n      <Navbar />\r\n      <Modal />\r\n      <OptionsModal />\r\n      <Alerts />\r\n      { !currentBoardId\r\n          ? <Home />\r\n          : <Board />\r\n      }\r\n      {/* <Home /> */}\r\n      {/* <Board /> */}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\nexport default App","import {\r\n  ADD_BOARD,\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_WATCHING,\r\n  SET_DESCRIBTION,\r\n  ADD_LIST,\r\n  DELETE_LIST,\r\n  DELETE_ALL_CARDS,\r\n  SET_LIST_TITLE,\r\n  COPY_LIST,\r\n  MOVE_LIST,\r\n  ADD_CARD,\r\n  UPDATE_CARD,\r\n  DELETE_CARD,\r\n  ADD_LABEL,\r\n  UPDATE_LABEL,\r\n  DELETE_LABEL\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_BOARD:\r\n      return {\r\n        ...state,\r\n        boards: [...state.boards, action.payload]\r\n      }\r\n    case SET_TITLE:\r\n      return {\r\n        ...state,\r\n        baords: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.title = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_STAR:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.starred = !b.starred\r\n          }\r\n          return b\r\n        }),\r\n        listOfStarredBoardsIds: action.payload.newListOfStarredBoardsIds\r\n      }\r\n    case SET_WATCHING:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.watching = !l.watching\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_DESCRIBTION:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.describtion = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.lists.push(action.payload.newList)\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case COPY_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists.splice(b.lists.findIndex(l => l.id === action.payload.listId) + 1, 0, action.payload.newList)\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case MOVE_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.firstBoardId) {\r\n            board.lists.splice(action.payload.firstIndex, 1)\r\n          }\r\n          if(board.id === action.payload.destBoardId) {\r\n            board.lists.splice(action.payload.destIndex, 0, action.payload.list)\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.boardId) {\r\n            board.lists = board.lists.filter(list => list.id !== action.payload.listId);\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case DELETE_ALL_CARDS:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items = []\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items.push(action.payload.newCard);\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    \r\n    case SET_LIST_TITLE:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.boardId) {\r\n            board.lists = board.lists.map(list => {\r\n              if(list.id === action.payload.listId) {\r\n                list.title = action.payload.newTitle\r\n              }\r\n              return list\r\n            })\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case UPDATE_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.boardId) {\r\n            board.lists = board.lists.map(list => {\r\n              if(list.id === action.payload.listId) {\r\n                list.items = list.items.map(item => (\r\n                  item.id === action.payload.cardId ? action.payload.newCard : item\r\n                ))\r\n              }\r\n              return list\r\n            })\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case DELETE_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items = l.items.filter(i => i.id !== action.payload.cardId)\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_LABEL:\r\n      return {\r\n        ...state,\r\n        labels: [...state.labels, action.payload]\r\n      }\r\n    case UPDATE_LABEL:\r\n      return {\r\n        ...state,\r\n        labels: state.labels.map(label => {\r\n          if(label.id === action.payload.id) {\r\n            label.name = action.payload.name\r\n            label.color = action.payload.color\r\n            label.colorName = action.payload.colorName\r\n          }\r\n          return label\r\n        })\r\n      }\r\n    case DELETE_LABEL:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          b.lists = b.lists.map(l => {\r\n            l.items = l.items.map(i => {\r\n              i.labels = i.labels.filter(l => l !== action.payload)\r\n              return i\r\n            })\r\n            return l\r\n          })\r\n          return b\r\n        }),\r\n        labels: state.labels.filter(l => l.id !== action.payload)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// board state\r\nexport const ADD_BOARD = 'ADD_BOARD';\r\nexport const GET_BOARDS_NAMES = 'GET_BOARDS_NAMES';\r\nexport const SET_TITLE = 'SET_TITLE';\r\nexport const SET_STAR = 'SET_STAR';\r\nexport const SET_WATCHING = 'SET_WATCHING';\r\nexport const SET_DESCRIBTION = 'SET_DESCRIBTION';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const DELETE_LIST = 'DELETE_LIST';\r\nexport const DELETE_ALL_CARDS = 'DELETE_ALL_CARDS';\r\nexport const SET_LIST_TITLE = 'SET_LIST_TITLE';\r\nexport const COPY_LIST = 'COPY_LIST';\r\nexport const MOVE_LIST = 'MOVE_LIST';\r\nexport const ADD_CARD = 'ADD_CARD';\r\nexport const UPDATE_CARD = 'UPDATE_CARD';\r\nexport const DELETE_CARD = 'DELETE_CARD';\r\nexport const ADD_LABEL = 'ADD_LABEL';\r\nexport const UPDATE_LABEL = 'UPDATE_LABEL';\r\nexport const DELETE_LABEL = 'DELETE_LABEL';\r\n\r\n// alert state\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const DELETE_ALERT = 'DELETE_ALERT';\r\n\r\n// user state\r\nexport const SET_CURRENT_BOARD_ID = 'SET_CURRENT_BOARD_ID';\r\nexport const CLEAR_CURRENT_BOARD_ID = 'CLEAR_CURRENT_BOARD_ID';\r\nexport const SET_CURRENT_LIST_ID = 'SET_CURRENT_LIST_ID';\r\nexport const CLEAR_CURRENT_LIST_ID = 'CLEAR_CURRENT_LIST_ID';\r\nexport const SET_RECENT_IDS = 'SET_RECENT_IDS';\r\nexport const SET_MODAL = 'SET_MODAL';\r\nexport const SET_MODAL_TYPE = 'SET_MODAL_TYPE';\r\nexport const SET_OPTIONS_MODAL = 'SET_OPTIONS_MODAL';\r\nexport const SET_OPTIONS_MODAL_TYPE = 'SET_OPTIONS_MODAL_TYPE';\r\nexport const SET_FAST_EDIT_MODAL_POS = 'SET_FAST_EDIT_MODAL_POS';\r\nexport const SET_CURRENT_CARD = 'SET_CURRENT_CARD';\r\nexport const CLEAR_CURRENT_CARD = 'CLEAR_CURRENT_CARD';\r\nexport const SET_MOUSE_POS = 'SET_MOUSE_POS';\r\nexport const TOGGLE_BIG_LABELS = 'TOGGLE_BIG_LABELS';\r\nexport const SET_OPTIONS_MODAL_STEP = 'SET_OPTIONS_MODAL_STEP';\r\nexport const SET_OPTIONS_MODAL_STEP_TYPE = 'SET_OPTIONS_MODAL_STEP_TYPE';\r\nexport const SET_OPTIONS_MODAL_STEP_DATA = 'SET_OPTIONS_MODAL_STEP_DATA';\r\n\r\n// \r\nexport const TEST = 'TEST';\r\n","import React, { useReducer } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport BoardContext from './boardContext';\r\nimport boardReducer from './boardReducer';\r\nimport {\r\n  ADD_BOARD,\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_WATCHING,\r\n  SET_DESCRIBTION,\r\n  ADD_LIST,\r\n  DELETE_LIST,\r\n  DELETE_ALL_CARDS,\r\n  SET_LIST_TITLE,\r\n  COPY_LIST,\r\n  MOVE_LIST,\r\n  ADD_CARD,\r\n  UPDATE_CARD,\r\n  DELETE_CARD,\r\n  ADD_LABEL,\r\n  UPDATE_LABEL,\r\n  DELETE_LABEL\r\n} from '../types';\r\n\r\nconst BoardState = props => {\r\n  const initialState = {\r\n    boards: [\r\n      {\r\n        title: 'my nice board',\r\n        id: 'k0f0psnk',\r\n        color: '#46b29e',\r\n        starred: false,\r\n        describtion: 'board describtion goes here',\r\n        lists: [\r\n          {\r\n            title: 'todos',\r\n            id: 'k0gdyqai',\r\n            watching: false,\r\n            items: [\r\n              {\r\n                text: 'todo 1',\r\n                desc: 'one describtion',\r\n                id: uniqid(),\r\n                labels: [\r\n                  1,\r\n                  3,\r\n                  6\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uniqid(),\r\n                labels: [\r\n                  3\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uniqid(),\r\n                labels: [\r\n                  2\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uniqid(),\r\n                labels: [\r\n                  2\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uniqid(),\r\n                labels: [\r\n                  2\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uniqid(),\r\n                labels: [\r\n                  2\r\n                ]\r\n              },\r\n            ]\r\n          },\r\n          {\r\n            title: 'doing',\r\n            id: uniqid(),\r\n            watching: true,\r\n            items: [\r\n              {\r\n                text: 'doing 1',\r\n                id: uniqid(),\r\n                labels: [\r\n                  5,\r\n                  3\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 2',\r\n                id: uniqid(),\r\n                labels: [\r\n                  4,\r\n                  5,\r\n                  6,\r\n                  1,\r\n                  3,\r\n                  2 \r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 3',\r\n                id: uniqid(),\r\n                labels: [\r\n                  6,\r\n                  4\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            title: 'new list',\r\n            id: uniqid(),\r\n            items: [\r\n\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        title: 'test empty',\r\n        id: 'k0f0psn2',\r\n        starred: false,\r\n        color: '#4759a3',\r\n        describtion: '',\r\n        lists: [\r\n          {\r\n            title: 'test for one',\r\n            id: uniqid(),\r\n            items: [\r\n              \r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    labels: [\r\n      {\r\n        id: 1,\r\n        color: '#61bd4f',\r\n        colorName: 'green',\r\n        name: 'label name'\r\n      },\r\n      {\r\n        id: 2,\r\n        color: '#f2d600',\r\n        colorName: 'yellow',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 3,\r\n        color: '#ff9f1a',\r\n        colorName: 'orange',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 4,\r\n        color: '#eb5a46',\r\n        colorName: 'red',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 5,\r\n        color: '#c377e0',\r\n        colorName: 'purple',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 6,\r\n        color: '#0079bf',\r\n        colorName: 'blue',\r\n        name: ''\r\n      }\r\n    ],\r\n    colors: [\r\n      {\r\n        name: 'green',\r\n        color: '#61bd4f'\r\n      },\r\n      {\r\n        name: 'yellow',\r\n        color: '#f2d600'\r\n      },\r\n      {\r\n        name: 'orange',\r\n        color: '#ff9f1a'\r\n      },\r\n      {\r\n        name: 'red',\r\n        color: '#eb5a46'\r\n      },\r\n      {\r\n        name: 'purple',\r\n        color: '#c377e0'\r\n      },\r\n      {\r\n        name: 'blue',\r\n        color: '#0079bf'\r\n      },\r\n      {\r\n        name: 'sky',\r\n        color: '#00c2e0'\r\n      },\r\n      {\r\n        name: 'lime',\r\n        color: '#51e898'\r\n      },\r\n      {\r\n        name: 'pink',\r\n        color: '#ff78cb'\r\n      },\r\n      {\r\n        name: 'black',\r\n        color: '#344563'\r\n      }\r\n    ],\r\n    listOfStarredBoardsIds: []\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(boardReducer, initialState);\r\n\r\n  // Get data\r\n  const getBoardsNames = () => {\r\n    const list = state.boards.map(b => b.title);\r\n    \r\n    return list\r\n  };\r\n\r\n  const addBoard = (title, color) => {\r\n    const newBaord = {\r\n      title,\r\n      id: uniqid(),\r\n      color,\r\n      starred: false,\r\n      describtion: '',\r\n      lists: []\r\n    }\r\n    dispatch({\r\n      type: ADD_BOARD,\r\n      payload: newBaord\r\n    });\r\n  }\r\n\r\n  // get  recent used boards based on user state\r\n  const getRecentBoards = (ids) => {\r\n    const list = [];\r\n\r\n    ids && ids.forEach(id => list.push(getBoard(id)));\r\n\r\n    return list\r\n  }\r\n\r\n  // get boards with starred = true\r\n  const getStarredBoards = () => {\r\n    const list = [];\r\n    state.listOfStarredBoardsIds.forEach(id => list.push(getBoard(id)));\r\n\r\n    return list;\r\n  }\r\n\r\n  // send a single board to board page (returns an array with one object)\r\n  const getBoard = (id) => {\r\n    const board = state.boards.filter(b => b.id === id);\r\n\r\n    return board[0]\r\n  }\r\n\r\n  const getList = (boardId, ListId) => {\r\n    const board = state.boards.filter(b => b.id === boardId)[0];\r\n\r\n    const list = board.lists.filter(l => l.id === ListId)[0];\r\n\r\n    return list\r\n  }\r\n\r\n  // set board title\r\n  const setTitle = (text, id) => {\r\n    dispatch({\r\n      type: SET_TITLE,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board starred or unstarred\r\n  const setStar = (id) => {\r\n    let newListOfStarredBoardsIds = state.listOfStarredBoardsIds;\r\n    if(state.listOfStarredBoardsIds.indexOf(id) !== -1) {\r\n      newListOfStarredBoardsIds.splice(state.listOfStarredBoardsIds.indexOf(id), 1);\r\n    } else {\r\n      newListOfStarredBoardsIds.push(id);\r\n    }\r\n    dispatch({\r\n      type: SET_STAR,\r\n      payload: {\r\n        id,\r\n        newListOfStarredBoardsIds\r\n      }\r\n    });\r\n  }\r\n\r\n  const setWatching = (boardId, listId) => {\r\n    dispatch({\r\n      type: SET_WATCHING,\r\n      payload: {\r\n        boardId,\r\n        listId\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board describtion\r\n  const setDescribtion = (text, id) => {\r\n    dispatch({\r\n      type: SET_DESCRIBTION,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // add List to board\r\n  const addList = (text, id) => {\r\n    const newList = {\r\n      title: text,\r\n      id: uniqid(),\r\n      items: []\r\n    }\r\n    dispatch({\r\n      type: ADD_LIST,\r\n      payload: {\r\n        id,\r\n        newList\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteList = (boardId, listId) => {\r\n    dispatch({\r\n      type: DELETE_LIST,\r\n      payload: {\r\n        boardId,\r\n        listId\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteAllCards = (boardId, listId) => {\r\n    dispatch({\r\n      type: DELETE_ALL_CARDS,\r\n      payload: {\r\n        boardId,\r\n        listId\r\n      }\r\n    });\r\n  }\r\n\r\n  const setListTitle = (boardId, listId, newTitle) => {\r\n    dispatch({\r\n      type: SET_LIST_TITLE,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        newTitle\r\n      }\r\n    });\r\n  }\r\n\r\n  const copyList = (boardId, listId, name) => {\r\n    let theList;\r\n\r\n    state.boards.forEach(b => b.id === boardId && b.lists.forEach(l => {\r\n      if(l.id === listId) {\r\n        theList = l\r\n      }\r\n    }))\r\n    \r\n    const newList = {\r\n      ...theList,\r\n      title: name,\r\n      id: uniqid()\r\n    }\r\n\r\n    dispatch({\r\n      type: COPY_LIST,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        newList\r\n      }\r\n    });\r\n  }\r\n\r\n  // takes in four prams: (first board id, first list id, destination board id, destionation index)\r\n  const moveList = (firstBoardId, firstListId, destBoardId, destIndex) => {\r\n    const firstIndex = getBoard(firstBoardId).lists.findIndex(l => l.id === firstListId);\r\n\r\n    const list = getList(firstBoardId, firstListId);\r\n\r\n    dispatch({\r\n      type: MOVE_LIST,\r\n      payload: {\r\n        firstBoardId,\r\n        firstIndex,\r\n        destBoardId,\r\n        destIndex,\r\n        list\r\n      }\r\n    });\r\n  }\r\n\r\n  // add card to list\r\n  const addCard = (text, listId, boardId) => {\r\n    const newCard = {\r\n      text,\r\n      id: uniqid(),\r\n      labels: []\r\n    }\r\n    dispatch({\r\n      type: ADD_CARD,\r\n      payload: {\r\n        newCard,\r\n        listId,\r\n        boardId\r\n      }\r\n    });\r\n  }\r\n\r\n  // update card\r\n  const updateCard = (boardId, listId, cardId, newCard) => {\r\n    dispatch({\r\n      type: UPDATE_CARD,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        cardId,\r\n        newCard\r\n      }\r\n    })\r\n  }\r\n\r\n  const deleteCard = (boardId, listId, cardId) => {\r\n    dispatch({\r\n      type: DELETE_CARD,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        cardId\r\n      }\r\n    });\r\n  }\r\n\r\n  const addLabel = (name, colorName, id) => {\r\n    let is = false;\r\n    const newLabel = {\r\n      id,\r\n      colorName,\r\n      name,\r\n      color: state.colors.filter(c => c.name === colorName)[0].color\r\n    };\r\n\r\n    state.labels.forEach(label => {\r\n      if(label.colorName === colorName) {\r\n        if(label.name === name) {\r\n          is = true\r\n        }\r\n      }\r\n    });\r\n\r\n    if(!is) {\r\n      dispatch({\r\n        type : ADD_LABEL,\r\n        payload: newLabel\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateLabel = (name, colorName, id) => {\r\n    dispatch({\r\n      type: UPDATE_LABEL,\r\n      payload: {\r\n        name,\r\n        colorName,\r\n        color: state.colors.filter(c => c.name === colorName)[0].color,\r\n        id\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteLabel = (id) => {\r\n    dispatch({\r\n      type: DELETE_LABEL,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <BoardContext.Provider\r\n      value={{\r\n        boards: state.boards,\r\n        labels: state.labels,\r\n        colors: state.colors,\r\n        addBoard,\r\n        getBoardsNames,\r\n        getRecentBoards,\r\n        getStarredBoards,\r\n        getBoard,\r\n        getList,\r\n        setTitle,\r\n        setStar,\r\n        setWatching,\r\n        setDescribtion,\r\n        addList,\r\n        deleteList,\r\n        deleteAllCards,\r\n        setListTitle,\r\n        copyList,\r\n        moveList,\r\n        addCard,\r\n        updateCard,\r\n        deleteCard,\r\n        addLabel,\r\n        updateLabel,\r\n        deleteLabel,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BoardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BoardState;","import { \r\n  SET_ALERT,\r\n  DELETE_ALERT\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: [action.payload]\r\n      }\r\n    case DELETE_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: state.alerts.filter(a => a.id !== action.payload)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport AlertContext from './alertContext';\r\nimport alertReducer from './alertReducer';\r\nimport { \r\n  SET_ALERT,\r\n  DELETE_ALERT\r\n} from '../types';\r\n\r\nconst AlertState = props => {\r\n  const initialState = {\r\n    alerts: []\r\n    };\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n  // Get data\r\n  const setAlert = (msg, type, time) => {\r\n    const listOfMsgs = state.alerts.map(a => a.msg);\r\n    if(listOfMsgs.indexOf(msg) === -1) {\r\n      const newAlert = {\r\n        msg,\r\n        id: uniqid(),\r\n        type,\r\n      }\r\n\r\n      dispatch({\r\n        type: SET_ALERT,\r\n        payload: newAlert\r\n      });\r\n\r\n      setTimeout(() => {\r\n        deleteAlert(newAlert.id);\r\n      }, time ? time : 3000);\r\n    }\r\n  };\r\n\r\n  const deleteAlert = (id) => {\r\n    dispatch({\r\n      type: DELETE_ALERT,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alerts: state.alerts,\r\n        setAlert,\r\n        deleteAlert\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;","import { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_CURRENT_LIST_ID,\r\n  CLEAR_CURRENT_LIST_ID,\r\n  SET_CURRENT_CARD,\r\n  CLEAR_CURRENT_CARD,\r\n  SET_RECENT_IDS,\r\n  SET_MODAL,\r\n  SET_MODAL_TYPE,\r\n  SET_OPTIONS_MODAL,\r\n  SET_OPTIONS_MODAL_TYPE,\r\n  SET_FAST_EDIT_MODAL_POS,\r\n  SET_MOUSE_POS,\r\n  TOGGLE_BIG_LABELS,\r\n  SET_OPTIONS_MODAL_STEP,\r\n  SET_OPTIONS_MODAL_STEP_TYPE,\r\n  SET_OPTIONS_MODAL_STEP_DATA,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_BOARD_ID:\r\n     return {\r\n       ...state,\r\n       currentBoardId: action.payload\r\n     }\r\n    case CLEAR_CURRENT_BOARD_ID:\r\n      return {\r\n        ...state,\r\n        currentBoardId: null\r\n      }\r\n    case SET_CURRENT_LIST_ID:\r\n      return {\r\n        ...state,\r\n        currentListId: action.payload\r\n      }\r\n    case CLEAR_CURRENT_LIST_ID:\r\n      return {\r\n        ...state,\r\n        currentListId: null\r\n      }\r\n    case SET_CURRENT_CARD:\r\n      return {\r\n        ...state,\r\n        currentCard: action.payload\r\n      }\r\n    case CLEAR_CURRENT_CARD:\r\n      return {\r\n        ...state,\r\n        currentCard: null\r\n      }\r\n    case SET_RECENT_IDS:\r\n      return {\r\n        ...state,\r\n        recentIds: action.payload\r\n      }\r\n    case SET_MODAL:\r\n      return {\r\n        ...state,\r\n        modalStatus: action.payload\r\n      }\r\n    case SET_MODAL_TYPE:\r\n      return {\r\n        ...state,\r\n        modalType: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL:\r\n      return {\r\n        ...state,\r\n        optionsModalStatus: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_TYPE:\r\n      return {\r\n        ...state,\r\n        optionsModalType: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_STEP:\r\n      return {\r\n        ...state,\r\n        optionsModalStepStatus: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_STEP_TYPE:\r\n      return {\r\n        ...state,\r\n        optionsModalStepType: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_STEP_DATA:\r\n      return {\r\n        ...state,\r\n        optionsModalStepData: action.payload\r\n      }\r\n    case SET_FAST_EDIT_MODAL_POS:\r\n      return {\r\n        ...state,\r\n        fastEditModalPos: action.payload\r\n      }\r\n    case SET_MOUSE_POS:\r\n      return {\r\n        ...state,\r\n        mousePos: action.payload  \r\n      }\r\n    case TOGGLE_BIG_LABELS:\r\n      return {\r\n        ...state,\r\n        bigLabels: !state.bigLabels\r\n      }\r\n    case 'setAddCardFromListActions':\r\n      return {\r\n        ...state,\r\n        addCardFromListActions: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer } from 'react';\r\nimport UserContext from './userContext';\r\nimport userReducer from './userReducer';\r\nimport { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_CURRENT_LIST_ID,\r\n  CLEAR_CURRENT_LIST_ID,\r\n  SET_CURRENT_CARD,\r\n  CLEAR_CURRENT_CARD,\r\n  SET_RECENT_IDS,\r\n  SET_MODAL,\r\n  SET_MODAL_TYPE,\r\n  SET_OPTIONS_MODAL,\r\n  SET_OPTIONS_MODAL_TYPE,\r\n  SET_OPTIONS_MODAL_STEP,\r\n  SET_OPTIONS_MODAL_STEP_TYPE,\r\n  SET_OPTIONS_MODAL_STEP_DATA,\r\n  SET_FAST_EDIT_MODAL_POS,\r\n  SET_MOUSE_POS,\r\n  TOGGLE_BIG_LABELS,\r\n} from '../types';\r\n\r\nconst UserState = props => {\r\n  const initialState = {\r\n    currentBoardId: null,\r\n    currentListId: null,\r\n    currentCard: null,\r\n    recentIds: [],\r\n    ModalStatus: 'off',\r\n    modalType: null,\r\n    optionsModalStatus: 'off',\r\n    optionsModaltype: null,\r\n    optionsModalStepStatus: 'off',\r\n    optionsModalStepType: null,\r\n    optionsModalStepData: null,\r\n    fastEditModalPos: null,\r\n    mosuePos: {},\r\n    bigLabels: false,\r\n    addCardFromListActions: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(userReducer, initialState);\r\n\r\n  const setCurrentBoardId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_BOARD_ID,\r\n      payload: id\r\n    });\r\n    setRecentBaord(id);\r\n  }\r\n\r\n  // set new board to recent\r\n  const setRecentBaord = (id) => {\r\n    const newRecentIds = state.recentIds;\r\n    if(newRecentIds.length === 3 && id !== null) {\r\n      newRecentIds.shift();\r\n      newRecentIds.push(id);\r\n    } else if(id !== null) {\r\n      newRecentIds.push(id);\r\n    }\r\n    dispatch({\r\n      type: SET_RECENT_IDS,\r\n      payload: newRecentIds\r\n    });\r\n  }\r\n\r\n  // also can be done with \"setCurrentBoardId(null)\"\r\n  const clearCurrentBoardId = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_BOARD_ID\r\n    });\r\n  }\r\n\r\n  const setCurrentListId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_LIST_ID,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  const clearCurrentListId = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_LIST_ID\r\n    });\r\n  }\r\n\r\n  const setCurrentCard = (card) => {\r\n    dispatch({\r\n      type: SET_CURRENT_CARD,\r\n      payload: card\r\n    });\r\n  }\r\n\r\n  const clearCurrentCard = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_CARD\r\n    });\r\n  }\r\n\r\n  const setModal = (status, type) => {\r\n    dispatch({\r\n      type: SET_MODAL,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearModalType();\r\n    } else if(status === 'on') {\r\n      setModalType(type);\r\n    }\r\n  }\r\n\r\n  const setModalType = (type) => {\r\n    dispatch({\r\n      type: SET_MODAL_TYPE,\r\n      payload: type\r\n    });\r\n  }\r\n\r\n  const clearModalType = () => {\r\n    dispatch({\r\n      type: SET_MODAL_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setOptionsModal = (status, type) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearOptionsModalType();\r\n      setOptionsModalStep('off');\r\n    } else if(status === 'on') {\r\n      setOptionsModalType(type);\r\n    }\r\n  }\r\n\r\n  const setOptionsModalType = (type) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_TYPE,\r\n      payload: type\r\n    });\r\n  }\r\n\r\n  const clearOptionsModalType = () => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  // two prams 1. has step or not (on or off) 2. the last step\r\n  const setOptionsModalStep = (status, step, data) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearOptionsModalStepType();\r\n    } else if(status === 'on') {\r\n      setOptionsModalStepType(step);\r\n    }\r\n    if(data) {\r\n      setOptionsModalStepData(data);\r\n    } else {\r\n      clearOptionsModalStepData();\r\n    }\r\n  }\r\n\r\n  const setOptionsModalStepData = (data) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_DATA,\r\n      payload: data\r\n    });\r\n  }\r\n\r\n  const clearOptionsModalStepData = () => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_DATA,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setOptionsModalStepType = (step) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_TYPE,\r\n      payload: step\r\n    });\r\n  }\r\n\r\n  const clearOptionsModalStepType = () => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setFastEditModalPos = (pos) => {\r\n    dispatch({\r\n      type: SET_FAST_EDIT_MODAL_POS,\r\n      payload: pos\r\n    });\r\n  }\r\n\r\n  const setMousePos = (x, y) => {\r\n    dispatch({\r\n      type: SET_MOUSE_POS,\r\n      payload: {x, y}\r\n    });\r\n  }\r\n\r\n  const toggleBigLabels = () => {\r\n    dispatch({\r\n      type: TOGGLE_BIG_LABELS\r\n    });\r\n  }\r\n\r\n  //  add card will be addeed to the list with the id that its passed in\r\n  const setAddCardFromListActions = (id) => {\r\n    dispatch({\r\n      type: 'setAddCardFromListActions',\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        currentBoardId: state.currentBoardId,\r\n        currentListId: state.currentListId,\r\n        currentCard: state.currentCard,\r\n        recentIds: state.recentIds,\r\n        modalStatus: state.modalStatus,\r\n        modalType: state.modalType,\r\n        optionsModalStatus: state.optionsModalStatus,\r\n        optionsModalType: state.optionsModalType,\r\n        optionsModalStepStatus: state.optionsModalStepStatus,\r\n        optionsModalStepType: state.optionsModalStepType,\r\n        optionsModalStepData: state.optionsModalStepData,\r\n        fastEditModalPos: state.fastEditModalPos,\r\n        mousePos: state.mousePos,\r\n        bigLabels: state.bigLabels,\r\n        addCardFromListActions: state.addCardFromListActions,\r\n        setCurrentBoardId,\r\n        clearCurrentBoardId,\r\n        setCurrentListId,\r\n        clearCurrentListId,\r\n        setCurrentCard,\r\n        clearCurrentCard,\r\n        setModal,\r\n        setOptionsModal,\r\n        setOptionsModalStep,\r\n        setFastEditModalPos,\r\n        setMousePos,\r\n        toggleBigLabels,\r\n        setAddCardFromListActions,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport BoardState from './context/board/BoardState';\nimport AlertState from './context/alert/AlertState';\nimport UserState from './context/user/UserState';\n\nconst StateContainer = () => {\n  return (\n    <BoardState>\n      <AlertState>\n        <UserState>\n          <App />\n        </UserState>\n      </AlertState>\n    </BoardState>\n  );\n}\n\nReactDOM.render(<StateContainer />, document.getElementById('root'));"],"sourceRoot":""}