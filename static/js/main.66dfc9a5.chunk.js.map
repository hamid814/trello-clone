{"version":3,"sources":["context/user/userContext.js","context/board/boardContext.js","components/layout/Navbar.js","components/pages/home/SideListItem.js","components/pages/home/HomeSideList.js","context/alert/alertContext.js","components/pages/home/HomeMainItem.js","components/pages/home/Recent.js","components/pages/home/Starred.js","components/pages/home/HomeMain.js","components/pages/home/Home.js","components/pages/board/BoardTitle.js","components/pages/board/BoardNavbar.js","components/pages/board/ListTitle.js","components/pages/board/CardLabel.js","components/pages/board/ListItemLabels.js","components/pages/board/BoardListItem.js","components/pages/board/BoardList.js","components/pages/board/AddList.js","components/pages/board/BoardMain.js","components/pages/board/Board.js","components/modal/AddBoardModal.js","components/modal/DetailsModal.js","components/modal/FastEditModal.js","components/modal/Modal.js","components/modal/options/DeleteCard.js","components/modal/options/EditCardLabelItem.js","components/modal/options/EditCardLabels.js","components/modal/options/EditLabel.js","components/modal/options/ListActions.js","components/modal/options/DeleteList.js","components/modal/options/CopyList.js","components/modal/OptionsModal.js","components/alert/AlertItem.js","components/alert/Alerts.js","App.js","context/board/boardReducer.js","context/types.js","context/board/BoardState.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/user/userReducer.js","context/user/UserState.js","index.js"],"names":["UserContext","createContext","BoardContext","Navbar","userContext","useContext","boardContext","clearCurrentBoardId","currentBoardId","setModal","getBoard","navbarStyle","background","color","titleTextStyle","className","style","onClick","type","id","SideListItem","board","setCurrentBoardId","useState","isHover","setIsHover","hoverStyle","opacity","onMouseEnter","onMouseLeave","title","charAt","toUpperCase","slice","HomeSideList","boards","map","b","key","AlertContext","HomeMainItem","alertContext","setStar","setAlert","itemStyle","e","target","classList","contains","starred","Recent","getRecentBoards","recentIds","length","r","uniqid","Starred","getStarredBoards","s","HomeMain","Home","BoardTitle","boardId","setTitle","text","setText","isSettingTitle","setIsSettingTitle","textHasChanged","setTextHasChanged","useEffect","document","querySelector","focus","onSetTitle","onChange","value","onBlur","onKeyUp","keyCode","BoardNavbar","setDescribtion","descText","setDescText","isSettingDesc","setIsSettingDesc","onSetDesc","describtion","ListTitle","listId","setListTitle","currentListId","onSetListTitle","CardLabel","label","bigLabels","thisLabel","labels","filter","l","colorName","name","ListItemLabels","toggleBigLabels","father","hover","setHover","BoardListItem","timer","item","listItem","useRef","setCurrentCard","setFastEditModalPos","onlongtouch","current","top","getBoundingClientRect","left","width","ref","parentElement","onTouchStart","setTimeout","onTouchEnd","clearTimeout","desc","console","log","BoardList","list","boardFuncs","setCurrentListId","setOptionsModal","wantToAddCard","setWantToAddCard","newCardText","setNewCardText","addCard","cancelAddCard","items","i","index","autoFocus","placeholder","AddList","setScrollIflonger","addList","isAdding","setIsAdding","onAddList","cancelAddList","lists","BoardMain","setStyle","window","innerWidth","display","gridTemplateRows","gridTemplateColumns","Board","setBoard","boardStyle","AddBoardModal","addBoard","bg","setBg","onClose","onAdd","bgColor","backgroundColor","DetailsModal","currentCard","FastEditModal","theTextarea","fastEditModalPos","clearCurrentCard","updateCard","modalPos","position","rightWidth","onUpdate","newCard","Modal","modalStatus","modalType","showModal","setShowModal","closeModal","modalDisplay","DeleteCard","deleteCard","EditCardLabelItem","setLabelId","goToEditLabel","indexOf","EditCardLabels","setOptionsModalStep","setLabel","EditLabel","setColorName","data","optionsModalStepData","colors","addLabel","updateLabel","deleteLabel","onColorClick","is","forEach","newId","ListActions","DeleteList","deleteList","CopyList","setName","getList","copyList","OptionsModal","container","optionsModalStatus","optionsModalType","optionsModalStepStatus","optionsModalStepType","mousePos","pos","setPos","setOptionsPos","rect","x","innerHeight","y","height","right","bottom","AlertItem","alert","deleteAlert","msg","Alerts","alerts","a","App","setMousePos","clientX","clientY","state","action","payload","baords","listOfStarredBoardsIds","newListOfStarredBoardsIds","push","newList","splice","findIndex","newTitle","cardId","BoardState","props","initialState","useReducer","boardReducer","dispatch","Provider","newBaord","getBoardsNames","ids","ListId","theList","newLabel","c","children","AlertState","alertReducer","time","newAlert","UserState","userReducer","ModalStatus","optionsModaltype","mosuePos","setRecentBaord","newRecentIds","shift","setModalType","clearModalType","setOptionsModalType","clearOptionsModalType","status","step","clearOptionsModalStepType","setOptionsModalStepType","setOptionsModalStepData","clearOptionsModalStepData","clearCurrentListId","card","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.66dfc9a5.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;","import { createContext } from 'react';\r\n\r\nconst BoardContext = createContext();\r\n\r\nexport default BoardContext;\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst Navbar = () => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { clearCurrentBoardId, currentBoardId, setModal } = userContext;\r\n  const { getBoard } = boardContext;\r\n\r\n  const homeClicked =() => {\r\n    clearCurrentBoardId();\r\n  }\r\n\r\n  const addClicked = () => {\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  const navbarStyle = {\r\n    background: getBoard(currentBoardId) && getBoard(currentBoardId).color\r\n  }\r\n\r\n  const titleTextStyle = {\r\n    color: getBoard(currentBoardId) ? getBoard(currentBoardId).color : '#388d6a'\r\n  }\r\n\r\n  return (\r\n    <div className='trello-navbar' style={navbarStyle}>\r\n      <div>\r\n        <div className='btn btn-square btn-transparent rounded' onClick={homeClicked}>\r\n          <i className='fa fa-home'></i>\r\n        </div>\r\n        <div className='btn btn-narrow btn-transparent rounded'>\r\n          <i className='mr-1 fa fa-notes-medical'></i>\r\n          boards\r\n        </div>\r\n        <div className='d-i-b rounded'>\r\n          <input type='text' className='m-0 bg-light op-8 border-0 rounded' id='search-input'/>\r\n        </div>\r\n      </div>\r\n      <div className='mr-5'>\r\n        <div className='text-white text-bold cursor-p border border-white border-bottom-0'>\r\n          <div className='mr'>\r\n            trello\r\n          </div>\r\n          <div \r\n            className='bg-white d-i-b border-0 pl'\r\n            style={titleTextStyle}>\r\n            clone\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className='btn btn-square btn-transparent rounded' onClick={addClicked}>\r\n          <i className='fa fa-plus'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst SideListItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n\r\n  const [isHover, setIsHover] = useState(false);\r\n\r\n  const hoverStyle = isHover ? {\r\n    background: board.color,\r\n    color: '#f4f4f4',\r\n    opacity: '0.7'\r\n  } : {\r\n    opacity: '1'\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    setIsHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setIsHover(false);\r\n  }\r\n\r\n  const onClick = () => {\r\n    setCurrentBoardId(board.id)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      onClick={onClick}\r\n      className=\"card pl-1 cursor-p p border-0 rounded-lg text-dark transition text-bold\"\r\n      style={hoverStyle}\r\n      >\r\n      { board.title.charAt(0).toUpperCase() + board.title.slice(1) }\r\n      { <i className=\"fa fa-check m-0 float-right\"></i> }\r\n    </div> \r\n  );\r\n};\r\n\r\nexport default SideListItem","import React, { useContext } from 'react';\r\nimport SideListItem from './SideListItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst HomeSideList = () => {\r\n  const { boards } = useContext(BoardContext);\r\n\r\n  return (\r\n    <aside>\r\n      <button className=\"btn btn-block btn-primary text-left rounded-lg\">\r\n        <i className=\"fa fa-notes-medical mr-1\"></i>\r\n        <div className=\"text-bold d-i-b\">Boards</div>\r\n      </button>\r\n      { boards.map(b => (\r\n        <SideListItem key={b.id} board={b} />\r\n      )) }\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default HomeSideList\r\n","import { createContext } from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext;","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst HomeMainItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n  const { setStar } = boardContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const itemStyle = {\r\n    background: board.color\r\n  }\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('fa-star')) {\r\n      setCurrentBoardId(board.id);\r\n    }\r\n  }\r\n\r\n  const onStarClicked = () => {\r\n    setStar(board.id);\r\n    setAlert(`${board.starred ? 'board added to favorites' : 'board removed from favorites'}`, `${board.starred ? 'success' : 'dark'}`, 2500);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='trello-home-main-item mt-1 mr-1'\r\n      style={itemStyle}\r\n      onClick={onClick}>\r\n        <div className='text-white func-title'>\r\n          { board.title.charAt(0).toUpperCase() + board.title.slice(1) }\r\n        </div>\r\n        <div\r\n          className='trello-home-main-item-star'\r\n          onClick={onStarClicked}>\r\n          <i className={`fa-star ${board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeMainItem\r\n","import React, { Fragment, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst Recent = () => {\r\n  const boardContext = useContext(BoardContext);\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { getRecentBoards } = boardContext;\r\n  const { recentIds } = userContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      { getRecentBoards(recentIds).length !== 0\r\n        &&  <div className=\"card border-top-0 border-right-0 border-left-0 pb-2\">\r\n              <i className=\"fa fa-clock mr-1\"></i>\r\n              Recent borads\r\n              <div className=\"\">\r\n                { getRecentBoards(recentIds).map(r => (\r\n                      <HomeMainItem key={uniqid()} board={r} />\r\n                    ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Recent\r\n","import React, { Fragment, useContext } from 'react';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Starred = () => {\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { getStarredBoards } = boardContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      { getStarredBoards().length !== 0\r\n        &&  <div className=\"card border-top-0 border-right-0 border-left-0 pb-2\">\r\n              <i className=\"fa fa-star mr-1\"></i>\r\n              favorite borads\r\n              <div className=\"\">\r\n                { getStarredBoards().map(s => (\r\n                      <HomeMainItem key={s.id} board={s} />\r\n                    ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Starred\r\n","import React, { useContext } from 'react';\r\nimport Recent from './Recent';\r\nimport Starred from './Starred';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst HomeMain = () => {\r\n  const { setModal } = useContext(UserContext);\r\n\r\n  const onAdd = () => {\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  return (\r\n    <main className='text-bold'>\r\n      <Starred />\r\n      <Recent />\r\n      <div className='card border-0'>\r\n        <div className='trello-home-main-item hover' onClick={onAdd}>\r\n          Add Board\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default HomeMain\r\n","import React from 'react';\r\nimport HomeSideList from './HomeSideList';\r\nimport HomeMain from './HomeMain';\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container grid-1-3 mt-3\">\r\n      <HomeSideList />\r\n      <HomeMain />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardTitle = ({ boardId, title, setTitle }) => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [text, setText] = useState('');\r\n  const [isSettingTitle, setIsSettingTitle] = useState(false);\r\n  const [textHasChanged, setTextHasChanged] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setText(title);\r\n    document.querySelector(`#board-title-${boardId}`).focus()\r\n    // eslint-disable-next-line\r\n  }, [isSettingTitle])\r\n\r\n  const onClick = () => {\r\n    setIsSettingTitle(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n    setTextHasChanged(true);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    onSetTitle();\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetTitle();\r\n    }\r\n  }\r\n\r\n  const onSetTitle = () => {\r\n    if(textHasChanged) {\r\n      if(text !== '') {\r\n        setTitle(text, currentBoardId);\r\n        setAlert('board title changed', 'success');\r\n        setIsSettingTitle(false);\r\n      } else {\r\n        setIsSettingTitle(false);\r\n        setAlert('board title can not be empty', 'danger');\r\n      }\r\n    } else {\r\n      setIsSettingTitle(false);\r\n      setTextHasChanged(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='d-i-b'>\r\n      <div\r\n        className={`text-white m-0 ml-1 ${isSettingTitle && 'd-n'}`}\r\n        onClick={onClick}>\r\n        { title.charAt(0).toUpperCase() + title.slice(1) }\r\n      </div>\r\n      <input\r\n        type='text'\r\n        id={`board-title-${boardId}`}\r\n        className={`m-0 rounded ${!isSettingTitle && 'd-n'}`}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        value={text}\r\n        onKeyUp={onKeyUp}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardTitle\r\n","import React, { useState, useContext } from 'react';\r\nimport BoardTitle from './BoardTitle';\r\n\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardNavbar = ({ board, setStar, setDescribtion, setTitle }) => {\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const [descText, setDescText] = useState('');\r\n  const [isSettingDesc, setIsSettingDesc] = useState(false);\r\n  \r\n  const onStarClick = () => {\r\n    setStar(board.id);\r\n    setAlert(`${board.starred ? 'board added to favorites' : 'board removed from favorites'}`, `${board.starred ? 'success' : 'dark'}`, 2000);\r\n  }\r\n\r\n  const onDescClick =() => {\r\n    setIsSettingDesc(true);\r\n    setDescText(board.describtion);\r\n    document.querySelector('#describtion-input').focus();\r\n  }\r\n\r\n  const onDescTextChange = (e) => {\r\n    e.target.value.length < 51\r\n      ? setDescText(e.target.value)\r\n      : setAlert('describtion can not be longer than 50 chars!!!', 'warning', 4000)\r\n  }\r\n\r\n  const onSetDesc = () => {\r\n    setDescribtion(descText, board.id);\r\n    setAlert('board describtion changed successfully', 'success');\r\n    setIsSettingDesc(false);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetDesc();\r\n    }\r\n  }\r\n\r\n  const navbarStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-navbar trello-navbar lighten-20' style={navbarStyle}>\r\n      <div className='card border-0 m-0 p-0'>\r\n        { board && <BoardTitle boardId={board.id} title={board.title} setTitle={setTitle} /> }\r\n        <div className='btn btn-transparent btn-square rounded ml-1' onClick={onStarClick}>\r\n          <i className={`fa-star ${board && board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n        <div className='ml-1 d-i-b text-white'>\r\n          { \r\n            board\r\n            && !isSettingDesc\r\n              && (board.describtion ? board.describtion : 'no describtion')\r\n          }\r\n        <input\r\n          type='text'\r\n          id='describtion-input'\r\n          className={`m-0 rounded ${!isSettingDesc && 'd-n'}`}\r\n          value={descText}\r\n          onChange={onDescTextChange}\r\n          onBlur={onSetDesc}\r\n          onKeyUp={onKeyUp} />\r\n        </div>\r\n        <div className='btn btn-transparent btn-square rounded ml-1' onClick={onDescClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n      </div>\r\n      <div className='btn text-sm btn-narrow btn-transparent'>\r\n        <i className=\"fas fa-ellipsis-h mr\"></i>\r\n        Show Menu\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardNavbar\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst ListTitle = ({ listId, title, setListTitle }) => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { currentBoardId, currentListId } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [text, setText] = useState('');\r\n  const [isSettingTitle, setIsSettingTitle] = useState(false);\r\n  const [textHasChanged, setTextHasChanged] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setText(title);\r\n    document.querySelector(`#list-title-${listId}`).focus()\r\n    // eslint-disable-next-line\r\n  }, [isSettingTitle])\r\n\r\n  const onClick = () => {\r\n    setIsSettingTitle(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n    setTextHasChanged(true);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    onSetListTitle();\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetListTitle();\r\n    }\r\n  }\r\n\r\n  const onSetListTitle = () => {\r\n    if(textHasChanged) {\r\n      if(text !== '') {\r\n        setListTitle(currentBoardId, currentListId, text);\r\n        setAlert('list title changed', 'success');\r\n        setIsSettingTitle(false);\r\n      } else {\r\n        setIsSettingTitle(false);\r\n        setAlert('list title can not be empty', 'warning');\r\n      }\r\n    } else {\r\n      setIsSettingTitle(false);\r\n      setTextHasChanged(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='d-i-b m-0'>\r\n      <div\r\n        className={`pt-1 mb pl m-0 ${isSettingTitle && 'd-n'}`}\r\n        onClick={onClick}>\r\n        { title }\r\n      </div>\r\n      <input\r\n        type='text'\r\n        id={`list-title-${listId}`}\r\n        value={text}\r\n        className={`m-0 mt p-0 pt pb pl text-bold text-80 border-0 rounded ${!isSettingTitle && 'd-n'}`}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        onKeyUp={onKeyUp}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListTitle\r\n","import React, { useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst CardLabel = ({ label, onClick, onMouseEnter, onMouseLeave, bigLabels }) => {\r\n  const { labels } = useContext(BoardContext);\r\n\r\n  const thisLabel = labels.filter(l => l.id === label)[0];\r\n\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      className={`func-card-label d-i-b label label-color-${thisLabel.colorName} ${bigLabels ? 'label-lg' : 'label-sm'}`}>\r\n      <div className='label-text m-0'>{ bigLabels && thisLabel.name }</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardLabel\r\n","import React, { useState } from 'react';\r\nimport CardLabel from './CardLabel';\r\n\r\nconst ListItemLabels = ({ labels, toggleBigLabels, bigLabels, father }) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const onClick = () => {\r\n    father === 'boardListItem' && toggleBigLabels();\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    father === 'boardListItem' && setHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setHover(false);\r\n  }\r\n\r\n  return (\r\n    <div className={`trello-board-list-item-labels-container m-0 p-0 ${hover && 'darken-30'}`}>\r\n      {\r\n        labels.map(l => <CardLabel key={l} label={l} onClick={onClick} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave} bigLabels={bigLabels} />)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListItemLabels\r\n","import React, { useRef, useContext } from 'react';\r\n\r\nimport ListItemLabels from './ListItemLabels';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst BoardListItem = ({ item }) => {\r\n  const listItem = useRef(null);\r\n\r\n  const { setCurrentCard, setModal, setFastEditModalPos, toggleBigLabels, bigLabels } = useContext(UserContext);\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('func-e-btn') && !e.target.parentElement.classList.contains('func-e-btn') && !e.target.classList.contains('func-card-label')) {\r\n      setModal('on', 'detailsModal');\r\n    }\r\n    setCurrentCard(item);\r\n  }\r\n\r\n  const onEBtnClick = (e) => {\r\n    console.log('use useRef here for setFastEditModalPos')\r\n    if(e.target.classList.contains('func-e-btn')) {\r\n      setFastEditModalPos({\r\n        top: e.target.parentElement.getBoundingClientRect().top,\r\n        left: e.target.parentElement.getBoundingClientRect().left,\r\n        width: e.target.parentElement.getBoundingClientRect().width\r\n      });\r\n    } else {\r\n      setFastEditModalPos({\r\n        top: e.target.parentElement.parentElement.getBoundingClientRect().top,\r\n        left: e.target.parentElement.parentElement.getBoundingClientRect().left,\r\n        width: e.target.parentElement.parentElement.getBoundingClientRect().width\r\n      });\r\n    }\r\n    setModal('on', 'fastEditModal');\r\n  }\r\n\r\n  let timer;\r\n  const touchduration = 500;\r\n\r\n  const onTouchStart = () => {\r\n    timer = setTimeout(onlongtouch, touchduration);\r\n    setCurrentCard(item);\r\n  }\r\n\r\n  const onTouchEnd = () => {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n    }\r\n  }\r\n\r\n  const onlongtouch = () => {\r\n    if(listItem.current !== null) {\r\n      setFastEditModalPos({\r\n        top: listItem.current.getBoundingClientRect().top,\r\n        left: listItem.current.getBoundingClientRect().left,\r\n        width: listItem.current.getBoundingClientRect().width\r\n      });\r\n      setModal('on', 'fastEditModal');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='trello-board-list-item'\r\n      ref={listItem}\r\n      onClick={onClick}\r\n      onTouchStart={onTouchStart}\r\n      onTouchEnd={onTouchEnd}>\r\n        <ListItemLabels father='boardListItem' labels={item.labels} bigLabels={bigLabels} toggleBigLabels={toggleBigLabels} />\r\n        <div>\r\n          { item.text }\r\n          <div className='text-sm'>\r\n            { item.desc && item.desc }\r\n          </div>\r\n        </div>\r\n        <div className='func-e-btn trello-board-list-item-edit-btn' onClick={onEBtnClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardListItem\r\n","import React, { Fragment, useState, useContext } from 'react';\r\nimport ListTitle from './ListTitle';\r\nimport BoardListItem from './BoardListItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardList = ({ list, boardFuncs /* all of board context */ }) => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { setCurrentListId, currentBoardId, setOptionsModal } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [wantToAddCard, setWantToAddCard] = useState(false);\r\n  const [newCardText, setNewCardText] = useState('');\r\n\r\n  const onAddCardClick = () => {\r\n    !wantToAddCard && setWantToAddCard(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    if(e.keyCode !== 13) {\r\n      setNewCardText(e.target.value);\r\n    }\r\n  }\r\n\r\n  const onTextareaBlur = () => {\r\n    if(newCardText !== '') {\r\n      addCard();\r\n    } else {\r\n      cancelAddCard();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13 && newCardText.length > 1) {\r\n      addCard();\r\n    } else if(e.keyCode === 13 && newCardText.length === 1) {\r\n      setNewCardText('');\r\n    }\r\n  }\r\n\r\n  const addCard = () => {\r\n    if(newCardText !== '') {\r\n      // three parameters: 1.text 2.list id 3.board id\r\n      boardFuncs.addCard(newCardText, list.id, currentBoardId);\r\n      setAlert('card added', 'success');\r\n      setNewCardText('');\r\n    }\r\n  }\r\n\r\n  const cancelAddCard = () => {\r\n    setWantToAddCard(false);\r\n    setNewCardText('');\r\n  }\r\n\r\n  const onListCLick = () => {\r\n    setCurrentListId(list.id);\r\n  }\r\n\r\n  const onlistOptionsClick = () => {\r\n    setOptionsModal('on', 'listActions');\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-list' onClick={onListCLick}>\r\n      <div className='trello-board-list-header'>\r\n        <ListTitle listId={list.id} title={list.title} setListTitle={boardFuncs.setListTitle} />\r\n        <div className='btn bg-transparent-with-hover btn-square float-right mt' onClick={onlistOptionsClick}>\r\n          <i className='fas fa-ellipsis-h'></i>\r\n        </div>\r\n      </div>\r\n      <div className='trello-board-list-items'>\r\n        { list.items.map((i, index) => (\r\n          <BoardListItem key={i.id} item={i} />\r\n        )) }\r\n        <div className={`trello-board-list-item trello-board-card-compose  ${!wantToAddCard && 'd-n'}`}>\r\n          <textarea\r\n            className='trello-board-card-compose-textarea'\r\n            autoFocus\r\n            placeholder='Enter a title for this card'\r\n            onBlur={onTextareaBlur}\r\n            onKeyUp={onKeyUp}\r\n            onChange={onChange}\r\n            value={newCardText}>\r\n\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`trello-board-footer ${!wantToAddCard && 'hover cursor-p'}`}\r\n        onClick={onAddCardClick}>\r\n        { !wantToAddCard\r\n          ?  (<div>\r\n                {list.items.length === 0 ? '+ Add a card' : '+ Add another card'}\r\n              </div>) \r\n          : (\r\n            <Fragment>\r\n              <div className='btn btn-success' onClick={addCard}>\r\n                Add Card\r\n              </div>\r\n              <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddCard}>\r\n                &times;\r\n              </div>\r\n            </Fragment>\r\n          )  \r\n        }      \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardList\r\n","import React, { Fragment, useState, useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst AddList = ({ board, setScrollIflonger }) => {\r\n  const boardContext = useContext(BoardContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { addList } = boardContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [text, setText] = useState('')\r\n\r\n  const onClick = () => {\r\n    setIsAdding(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    if(text !== '') {\r\n      onAddList();\r\n    } else {\r\n      cancelAddList();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAddList();\r\n    }\r\n  }\r\n\r\n  const onAddList = () => {\r\n    if(text !== '') {\r\n      addList(text, board.id);\r\n      setAlert(`list ${text} added`, 'success');\r\n      setText('');\r\n      setScrollIflonger();\r\n    } else {\r\n      setAlert(`list title can not be empty`, 'warning');\r\n    }\r\n  }\r\n\r\n  const cancelAddList = () => {\r\n    setIsAdding(false);\r\n    setText('');\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`trello-board-add-list-btn btn-light op-8 darken-20 text-dark ${isAdding && 'd-n'}`}\r\n        onClick={onClick}>\r\n          { board && board.lists.length === 0 ? '+ Add a list' : '+ Add another list' }\r\n      </div>\r\n      <div\r\n        className={`trello-board-add-list-form btn-light op-9 darken-20 text-dark ${!isAdding && 'd-n'}`}>\r\n          <input\r\n            type='text'\r\n            className='m-0 rounded-lg mb-1'\r\n            placeholder='Enter list name'\r\n            value={text}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            onKeyUp={onKeyUp}/>\r\n          <div className='btn btn-success' onClick={onAddList}>\r\n            Add List\r\n          </div>\r\n          <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddList}>\r\n            &times;\r\n          </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddList\r\n","import React, { useState, useEffect } from 'react';\r\nimport BoardList from './BoardList';\r\nimport AddList from './AddList';\r\n\r\nconst BoardMain = ({ board, boardFuncs /* contains all of board context  */ }) => {\r\n  const [style, setStyle] = useState({});\r\n\r\n  useEffect(() => {\r\n    setScrollIflonger();\r\n    // eslint-disable-next-line\r\n  }, [board]);\r\n\r\n  const setScrollIflonger = () => {\r\n    const boardWidth = (board.lists.length + 1) * 270;\r\n\r\n    if(16 + boardWidth > window.innerWidth) {\r\n      setStyle({\r\n        display: 'grid',\r\n        gridTemplateRows: '1fr',\r\n        gridTemplateColumns: `repeat(${board && board.lists.length + 1}, 1fr)`\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-main' style={style}>\r\n      { board.lists.map(l => (\r\n          <div key={l.id} className='trello-board-list-wrapper'>\r\n            <BoardList list={l} boardFuncs={boardFuncs} />\r\n          </div>\r\n        )) }\r\n      <div className='trello-board-list-wrapper'>\r\n        <AddList board={board} setScrollIflonger={setScrollIflonger} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardMain\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport BoardNavbar from './BoardNavbar';\r\nimport BoardMain from './BoardMain';\r\n\r\n// context\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\n// css\r\nimport './board.css';\r\n\r\nconst Board = () => {\r\n  const [board, setBoard] = useState(null);\r\n\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { getBoard, setStar, setDescribtion, setTitle } = boardContext;\r\n\r\n  useEffect(() => {\r\n    setBoard(getBoard(currentBoardId));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const boardStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <BoardNavbar\r\n        board={board}\r\n        setStar={setStar}\r\n        setDescribtion={setDescribtion}\r\n        setTitle={setTitle} />\r\n      <div className='trello-board-main-wrapper lighten-20 p' style={boardStyle}>\r\n        {board && <BoardMain boardFuncs={boardContext} board={board} />}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nimport './modals.css';\r\n\r\nconst AddBoardModal = () => {\r\n  const { setModal, clearCurrentBoardId } = useContext(UserContext);\r\n  const { addBoard } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const [bg, setBg] = useState('#ee3a59');\r\n  const [text, setText] = useState('');\r\n\r\n  const onBgClicked = (e) => {\r\n    if(!e.target.classList.contains('func-no-click') && !e.target.classList.contains('func-colors')) {\r\n      setBg(e.target.id);\r\n    }\r\n  }\r\n\r\n  const onClose = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAdd();\r\n    }\r\n  }\r\n\r\n  const onAdd = () => {\r\n    if(text !== '') {\r\n      addBoard(text, bg);\r\n      onClose();\r\n      setAlert(`board ${text.charAt(0).toUpperCase() + text.slice(1)} was created`, 'success', 4000);\r\n      clearCurrentBoardId();\r\n    }\r\n  }\r\n\r\n  const bgColor = {\r\n    backgroundColor: bg\r\n  }\r\n\r\n  return (\r\n    <div className='modal-content add-board-modal-content'>\r\n      <div className='grid-3-1'>\r\n        <div className='p-1 grid-3-1 rounded-lg' style={bgColor}>\r\n          <div>\r\n            <input\r\n              type='text'\r\n              placeholder='Add board title'\r\n              value={text}\r\n              onChange={onChange}\r\n              onKeyUp={onKeyUp}\r\n              className='m-0 border-0 text-bold text-light pl-1 rounded'/>\r\n          </div>\r\n          <div>\r\n            <div className='close' onClick={onClose}>\r\n              &times;\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='func-colors grid-3 gap-half' onClick={onBgClicked}>\r\n          <div id='#ee3a59' className='rounded-lg p-1 background-red cursor-p'></div>\r\n          <div id='#e27b47' className='rounded-lg p-1 background-orange cursor-p'></div>\r\n          <div id='#efca58' className='rounded-lg p-1 background-yellow cursor-p'></div>\r\n          <div id='#46b29e' className='rounded-lg p-1 background-blue-l cursor-p'></div>\r\n          <div id='#344e5c' className='rounded-lg p-1 background-blue-d cursor-p'></div>\r\n          <div className='func-no-click'></div>\r\n          <div id='custom' className='rounded-lg p-1 bg-light cursor-p'></div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        onClick={onAdd}\r\n        className={`btn btn-narrow m text-bold ${text !== '' ? 'btn-success' : 'cursor-not-allowed'}`}>\r\n          Create Board\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddBoardModal\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nconst DetailsModal = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setModal, currentCard } = userContext;\r\n\r\n  const onClose = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  return (\r\n    <div className='details-modal-container'>\r\n      <div className='details-modal-header'>\r\n        <div className='close text-lg' onClick={onClose}>\r\n          &times;\r\n        </div>\r\n        <i className='fas fa-th-list mr-1'></i>\r\n        { currentCard.text }\r\n      </div>\r\n      <div className='details-modal-body'>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailsModal\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\n\r\nimport ListItemLabels from '../pages/board/ListItemLabels';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst FastEditModal = () => {\r\n  const theTextarea = useRef(null);\r\n\r\n  const {\r\n    currentBoardId,\r\n    currentListId,\r\n    fastEditModalPos,\r\n    currentCard,\r\n    clearCurrentCard,\r\n    setOptionsModal,\r\n    setModal,\r\n    bigLabels } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  useEffect(() => {\r\n    setText(currentCard.text);\r\n    theTextarea.current.focus();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const modalPos = {\r\n    position: 'absolute',\r\n    top: fastEditModalPos.top + 'px',\r\n    left: fastEditModalPos.left + 'px'\r\n  }\r\n\r\n  const rightWidth = {\r\n    width: fastEditModalPos.width + 'px'\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onUpdate();\r\n    }\r\n  }\r\n\r\n  const onUpdate = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      text\r\n    }\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    clearCurrentCard();\r\n    setModal('off');\r\n  }\r\n\r\n  const onAtionsClick = (e) => {\r\n    if(e.target.classList.contains('fas')) {\r\n      setOptionsModal('on', e.target.parentElement.id);\r\n    } else if(e.target.classList.contains('func-action-btn')) {\r\n      setOptionsModal('on', e.target.id);\r\n    } else {\r\n      setModal('off');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={modalPos} className='modal-content grid-2 gap-half'>\r\n      <div style={rightWidth} className='fast-edit-modal-right-container'>\r\n        <div className='fast-edit-modal-right'>\r\n          <ListItemLabels father='fastEditModal' bigLabels={bigLabels} labels={currentCard.labels} />\r\n          <textarea\r\n            ref={theTextarea}\r\n            className='m-0 border-0 p-0'\r\n            value={text}\r\n            onChange={onChange}\r\n            onKeyUp={onKeyUp}>\r\n          </textarea>\r\n        </div>\r\n        <div className='btn btn-success mt' onClick={onUpdate}>\r\n          Save\r\n        </div>\r\n      </div>\r\n      <div className='fast-edit-modal-action-container' onClick={onAtionsClick}>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='editCardLabels'>\r\n            <i className='fas fa-tag mr'></i>\r\n            Edit labels\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='members'>\r\n            <i className='fas fa-user mr'></i>\r\n            Change members\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='move'>\r\n            <i className='fas fa-arrow-right mr'></i>\r\n            Move\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='deleteCard'>\r\n            <i className='fas fa-trash mr'></i>\r\n            Delete card\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FastEditModal\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport AddBoardModal from './AddBoardModal';\r\nimport DetailsModal from './DetailsModal';\r\nimport FastEditModal from './FastEditModal';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nimport './modals.css';\r\n\r\nconst Modal = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { modalStatus, modalType, setModal } = userContext;\r\n\r\n  const [showModal, setShowModal] = useState('off');\r\n  \r\n  useEffect(() => {\r\n    setShowModal(modalStatus/* from useState */);\r\n    // eslint-disable-next-line\r\n  }, [modalStatus])\r\n\r\n  const onClick = (e) => {\r\n    if(e.target.classList.contains('modal')) {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const modalDisplay = {\r\n    display: showModal === 'on' ? 'block' : 'none'\r\n  }\r\n\r\n  return (\r\n    <div \r\n      style={modalDisplay}\r\n      className='modal'\r\n      onClick={onClick}>\r\n      {\r\n        modalType === 'addBoardModal' && <AddBoardModal />\r\n      }\r\n      {\r\n        modalType === 'detailsModal' && <DetailsModal />\r\n      }\r\n      {\r\n        modalType === 'fastEditModal' && <FastEditModal />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useContext } from 'react'\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst DeleteCard = () => {\r\n  const { currentBoardId, currentListId, currentCard, setModal, setOptionsModal } = useContext(UserContext);\r\n  const { deleteCard } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const onClick = () => {\r\n    deleteCard(currentBoardId, currentListId, currentCard.id);\r\n    setModal('off');\r\n    setOptionsModal('off');\r\n    setAlert('card deleted', 'dark');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='text-85 m mb-1'>\r\n        are you sure you want to delete this card?\r\n        its permanent\r\n      </div>\r\n      <div className='btn btn-danger btn-block hover-op-10 hover-lighten' onClick={onClick}>\r\n        Delete\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteCard\r\n","import React, { useState } from 'react';\r\n\r\nconst EditCardLabelItem = ({ label, setLabelId, goToEditLabel, currentCard }) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const onClick = () => {\r\n    setLabelId(label.id);\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    setHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setHover(false);\r\n  }\r\n\r\n  const onPenClick = () => {\r\n    goToEditLabel(label);\r\n  }\r\n\r\n  return (\r\n    <div className='label-item mb width-100'>\r\n      <div\r\n        className={`rounded-lg d-i-b text-sm label-color label-color-${label.colorName} ${hover && `label-color-${label.colorName}-hover`}`}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n        onClick={onClick}>\r\n        {\r\n          currentCard.labels.indexOf(label.id) !== -1\r\n            && <i className='label-color-check fas fa-check text-white float-right'></i>\r\n        }\r\n        <div className='label-color-text text-85 ml text-white'>\r\n          { label.name !== '' && label.name }\r\n        </div>\r\n      </div>\r\n      <div className='btn btn-no-bg rounded-lg d-i-b float-right p' onClick={onPenClick}>\r\n        <i className='fas fa-pen text-sm'></i>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditCardLabelItem\r\n","import React, { useContext } from 'react';\r\n\r\nimport EditCardLabelItem from './EditCardLabelItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst EditCardLabels = () => {\r\n  const { currentBoardId, currentListId, currentCard, setCurrentCard, setOptionsModal, setOptionsModalStep } = useContext(UserContext);\r\n  const { updateCard, labels } = useContext(BoardContext);\r\n\r\n\r\n  const setLabel = (id) => {\r\n    let newCard;\r\n    if(currentCard.labels.indexOf(id) === -1) {\r\n      // card hasnt this id / add the id\r\n      newCard = {\r\n        ...currentCard,\r\n        labels: [...currentCard.labels, id]\r\n      }\r\n    } else {\r\n      // card has this id / remove the id\r\n      newCard = {\r\n        ...currentCard,\r\n        labels: currentCard.labels.filter(l => l !== id)\r\n      }\r\n    }\r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    setCurrentCard(newCard);\r\n  }\r\n\r\n  const goToEditLabel = (label) => {\r\n    setOptionsModalStep('on', 'editCardLabels', {label, type: 'edit'});\r\n    setOptionsModal('on', 'editLabel');\r\n  }\r\n\r\n  const onCreateClick = () => {\r\n    setOptionsModalStep('on', 'editCardLabels', {type: 'create'});\r\n    setOptionsModal('on', 'editLabel');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input type='text' placeholder='search labels...' className='mt mb-1 text-85 p'/>\r\n      <div className='text-85 mb'>\r\n        Labels\r\n      </div>\r\n      {\r\n        labels.map(l => (\r\n          <EditCardLabelItem key={l.id} label={l} goToEditLabel={goToEditLabel} setLabelId={setLabel} currentCard={currentCard} />\r\n        ))\r\n      }\r\n      <div className='btn btn-block mt-1 text-85 mt mb' onClick={onCreateClick}>\r\n        create new label\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditCardLabels\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst EditLabel = () => {\r\n  const [text, setText] = useState('');\r\n  const [colorName, setColorName] = useState(null);\r\n\r\n  const {\r\n    setOptionsModal,\r\n    setOptionsModalStep,\r\n    currentCard,\r\n    currentBoardId,\r\n    currentListId,\r\n    setCurrentCard,\r\n    optionsModalStepData: data } = useContext(UserContext);\r\n  const { labels, colors, updateCard, addLabel, updateLabel, deleteLabel } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    data.type === 'edit' && setText(data.label.name);\r\n    data.type === 'edit' ? setColorName(data.label.colorName) : setColorName('green');\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onColorClick = (e) => {\r\n    setColorName(e.target.id);\r\n  }\r\n\r\n  const onSave = () => {\r\n    if(data.type === 'edit') {\r\n      updateLabel(text, colorName, data.label.id);\r\n      setOptionsModal('on', 'editCardLabels');\r\n      setOptionsModalStep('off');\r\n      setAlert('Label updated', 'success');\r\n    } else if(data.type === 'create') {\r\n      let is = false;\r\n      \r\n      labels.forEach(label => {\r\n        if(label.colorName === colorName) {\r\n          if(label.name === text) {\r\n            is = true\r\n          }\r\n        }\r\n      });\r\n\r\n      if(!is) {\r\n        const newId = uniqid();\r\n        // add to list of labels in board state\r\n        addLabel(text, colorName, newId);\r\n        const newCard = {\r\n          ...currentCard,\r\n          labels: [...currentCard.labels, newId]\r\n        }\r\n        // add label to current board\r\n        updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n        setCurrentCard(newCard);\r\n        setAlert('Label created', 'success');\r\n      } else {\r\n        setAlert('Label already exits', 'light');\r\n      }\r\n\r\n      setOptionsModal('on', 'editCardLabels');\r\n      setOptionsModalStep('off');\r\n    }\r\n  }\r\n\r\n  const onDelete = () => {\r\n    deleteLabel(data.label.id);\r\n    setOptionsModal('on', 'editCardLabels');\r\n    setOptionsModalStep('off');\r\n    setAlert('Label deleted', 'dark');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input type='text' className='m-0 text-85 p' value={text} placeholder='enter label name' onChange={onChange}/>\r\n      <div className='text-85 mt mb'>\r\n        pick a color\r\n      </div>\r\n      <div className='mb'>\r\n        {\r\n          colors.map(color => (\r\n            <div key={color.name} style={{ background: color.color }} className='color-for-select hover-lighten' id={color.name} onClick={onColorClick}>\r\n              { \r\n                color.name === colorName\r\n                  && <i className='fas fa-check text-85 text-white m-0'></i> \r\n              }\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n      <div>\r\n        <div className='btn btn-success' onClick={onSave}>\r\n          {\r\n            data.type === 'edit'\r\n              ? 'Save'\r\n              : 'Create'\r\n          }\r\n        </div>\r\n        {\r\n          data.type === 'edit'\r\n            &&  <div className='btn btn-danger float-right' onClick={onDelete}>\r\n                  Delete\r\n                </div>\r\n        }\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditLabel\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst ListActions = () => {\r\n  const { setOptionsModal, setOptionsModalStep } = useContext(UserContext);\r\n\r\n  const onDeleteClicked = () => {\r\n    setOptionsModal('on', 'deleteList');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n\r\n  const onCopyClicked = () => {\r\n    setOptionsModal('on', 'copyList');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='list-action-item'>\r\n        add card...\r\n      </div>\r\n      <div className='list-action-item' onClick={onCopyClicked}>\r\n        copy list\r\n      </div>\r\n      <div className='list-action-item'>\r\n        move list\r\n      </div>\r\n      <div className='list-action-item'>\r\n        watch\r\n      </div>\r\n      <hr />\r\n      <div className='list-action-item'>\r\n        move all cards in this list list\r\n      </div>\r\n      <div className='list-action-item'>\r\n        delete all cards in this list\r\n      </div>\r\n      <div className='list-action-item'>\r\n        sort...\r\n      </div>\r\n      <hr />\r\n      <div className='list-action-item delete-list' onClick={onDeleteClicked}>\r\n        delete this list\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListActions\r\n","import React, { useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst DeleteList = () => {\r\n  const { deleteList } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n\r\n  const onClick = () => {\r\n    deleteList(currentBoardId, currentListId);\r\n    setOptionsModal('off');\r\n    setAlert('list deleted', 'dark');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-1 mt p-1\">\r\n        delete this list ?\r\n        its permanent\r\n      </div>\r\n      <div className=\"btn btn-block btn-danger\" onClick={onClick}>\r\n        Delete\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteList\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst CopyList = () => {\r\n  const [name, setName] = useState('');\r\n  \r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n  const { getList, copyList } = useContext(BoardContext);\r\n\r\n  useEffect(() => {\r\n    setName(getList(currentBoardId, currentListId).title);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onCLick = () => {\r\n    copyList(currentBoardId, currentListId, name);\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setName(e.target.value);\r\n    // console.log(e.trgte.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"text-85\">\r\n        name\r\n      </div>\r\n      <input type=\"text\" className=\"m-0 mb mt pl-1\" value={name} onChange={onChange} />\r\n      <div className=\"btn btn-success mt-1\" onClick={onCLick}>\r\n        Copy List\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CopyList\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport DeleteCard from './options/DeleteCard';\r\nimport EditCardLabels from './options/EditCardLabels';\r\nimport EditLabel from './options/EditLabel';\r\nimport ListActions from './options/ListActions';\r\nimport DeleteList from './options/DeleteList';\r\nimport CopyList from './options/CopyList';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nimport './modals.css';\r\n\r\nconst OptionsModal = () => {\r\n  const container = useRef(null);\r\n\r\n  const userContext = useContext(UserContext);\r\n\r\n  const {\r\n    optionsModalStatus,\r\n    optionsModalType,\r\n    optionsModalStepStatus,\r\n    optionsModalStepType,\r\n    mousePos,\r\n    setOptionsModal,\r\n    setOptionsModalStep} = userContext;\r\n\r\n  const [showModal, setShowModal] = useState('off');\r\n  const [pos, setPos] = useState({});\r\n  \r\n  useEffect(() => {\r\n    setShowModal(optionsModalStatus/* from useState */);\r\n    setOptionsPos();\r\n    // eslint-disable-next-line\r\n  }, [optionsModalStatus, mousePos])\r\n\r\n  const onClick = (e) => {\r\n    if(e.target.id === 'options-modal') {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  const onBack = () => {\r\n    setOptionsModal('on', optionsModalStepType);\r\n    setOptionsModalStep('off');\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const setOptionsPos = () => {\r\n    setTimeout(() => {\r\n      if(mousePos) {\r\n        let rect;\r\n        rect = container.current.getBoundingClientRect();\r\n\r\n        if(window.innerWidth - mousePos.x - 10 < rect.width && window.innerHeight - mousePos.y > rect.height) {\r\n          setPos({\r\n            right: 10,\r\n            top: mousePos.y + 10 + 'px'\r\n          });\r\n        } else if(window.innerHeight - mousePos.y - 10 < rect.height && window.innerWidth - mousePos.x > rect.width) {\r\n          setPos({\r\n            left: mousePos.x + 10 + 'px',\r\n            bottom: 10\r\n          })\r\n        } else if(window.innerHeight - mousePos.y - 10 < rect.height && window.innerWidth - mousePos.x - 10 < rect.width) {\r\n            setPos({\r\n            right: 10,\r\n            bottom: 10\r\n          })\r\n        } else {\r\n          setPos({\r\n            left: mousePos.x + 10 + 'px',\r\n            top: mousePos.y + 10 + 'px'\r\n          })\r\n        }\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  const modalDisplay = {\r\n    display: showModal === 'on' ? 'block' : 'none'\r\n  }\r\n\r\n  return (\r\n    <div \r\n      style={modalDisplay}\r\n      id='options-modal'\r\n      onClick={onClick}>\r\n        <div ref={container} className='options-modal-container' style={pos}>\r\n          <div className='options-modal-header'>\r\n            {\r\n              optionsModalStepStatus === 'on'\r\n                && <div className='back d-i-b float-left cursor-p lighten-30 hover-darken' onClick={onBack}>\r\n                      <i className='fas fa-angle-left'></i>\r\n                    </div>\r\n            }\r\n            <div className=\"close\" onClick={closeModal}>\r\n              &times;\r\n            </div>\r\n            {\r\n              optionsModalType === 'editCardLabels' && 'Labels'\r\n            }\r\n            {\r\n              optionsModalType === 'editLabel' && 'Change Label'\r\n            }\r\n            {\r\n              optionsModalType === 'move' && 'Move card'\r\n            }\r\n            {\r\n              optionsModalType === 'members' && 'Members'\r\n            }\r\n            {\r\n              optionsModalType === 'deleteCard' && 'Delete Card'\r\n            }\r\n            {\r\n              optionsModalType === 'listActions' && 'List Actions'\r\n            }\r\n            {\r\n              optionsModalType === 'deleteList' && 'Delete List'\r\n            }\r\n            {\r\n              optionsModalType === 'copyList' && 'Copy List'\r\n            }\r\n          </div>\r\n          <div className='options-modal-body'>\r\n            {\r\n              optionsModalType === 'deleteCard' && <DeleteCard />\r\n            }\r\n            {\r\n              optionsModalType === 'editCardLabels' && <EditCardLabels />\r\n            }\r\n            {\r\n              optionsModalType === 'editLabel' && <EditLabel />\r\n            }\r\n            {\r\n              optionsModalType === 'listActions' && <ListActions />\r\n            }\r\n            {\r\n              optionsModalType === 'deleteList' && <DeleteList />\r\n            }\r\n            {\r\n              optionsModalType === 'copyList' && <CopyList />\r\n            }\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OptionsModal\r\n","import React from 'react'\r\n\r\nconst AlertItem = ({ alert, deleteAlert }) => {\r\n  const onClick = () => {\r\n    deleteAlert(alert.id);\r\n  }\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      className={`trello-alert-item alert rounded-lg alert-${alert.type}`}>\r\n        <div className='trello-alert-item-msg'>\r\n          { alert.msg.charAt(0).toUpperCase() + alert.msg.slice(1) }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertItem\r\n","import React, { useContext } from 'react';\r\nimport AlertItem from './AlertItem';\r\n\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alerts = () => {\r\n  const { alerts, deleteAlert } = useContext(AlertContext);\r\n\r\n  return (\r\n    <div className='trello-alerts-wrapper'>\r\n      {\r\n        alerts.map(a => (\r\n          <AlertItem\r\n            key={a.id}\r\n            alert={a}\r\n            deleteAlert={deleteAlert} />\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alerts\r\n","import React, { useEffect, useContext } from 'react';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Home from './components/pages/home/Home';\r\nimport Board from './components/pages/board/Board';\r\nimport Modal from './components/modal/Modal';\r\nimport OptionsModal from './components/modal/OptionsModal';\r\nimport Alerts from './components/alert/Alerts';\r\n\r\nimport UserContext from './context/user/userContext';\r\n\r\nimport './trello-clone.css';\r\nimport './trello-clone-keyframes.css';\r\n\r\nconst App = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const {\r\n    setCurrentBoardId,\r\n    currentBoardId,\r\n    setMousePos,\r\n    optionsModalStatus } = userContext\r\n\r\n  // to display board page for development purposes\r\n  useEffect(() => {\r\n    setCurrentBoardId(1);\r\n    console.log('focus on inputs')\r\n    console.log('change the word \"item\" to card in context and stuff')\r\n    console.log('sort the list actions ( put them in [dasteh] )')\r\n    console.log('setScrollIfLonger if board copied')\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onClick = (e) => {\r\n    if(optionsModalStatus === 'off') {\r\n      setMousePos(e.clientX, e.clientY)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div onClick={onClick} id='all-wrapper'>\r\n      <Navbar />\r\n      <Modal />\r\n      <OptionsModal />\r\n      <Alerts />\r\n      { !currentBoardId\r\n          ? <Home />\r\n          : <Board />\r\n      }\r\n      {/* <Home /> */}\r\n      {/* <Board /> */}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\nexport default App","import {\r\n  ADD_BOARD,\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_DESCRIBTION,\r\n  ADD_LIST,\r\n  DELETE_LIST,\r\n  SET_LIST_TITLE,\r\n  COPY_LIST,\r\n  ADD_CARD,\r\n  UPDATE_CARD,\r\n  DELETE_CARD,\r\n  ADD_LABEL,\r\n  UPDATE_LABEL,\r\n  DELETE_LABEL\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_BOARD:\r\n      return {\r\n        ...state,\r\n        boards: [...state.boards, action.payload]\r\n      }\r\n    case SET_TITLE:\r\n      return {\r\n        ...state,\r\n        baords: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.title = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_STAR:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.starred = !b.starred\r\n          }\r\n          return b\r\n        }),\r\n        listOfStarredBoardsIds: action.payload.newListOfStarredBoardsIds\r\n      }\r\n    case SET_DESCRIBTION:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.describtion = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.lists.push(action.payload.newList)\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case COPY_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists.splice(b.lists.findIndex(l => l.id === action.payload.listId) + 1, 0, action.payload.newList)\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.boardId) {\r\n            board.lists = board.lists.filter(list => list.id !== action.payload.listId);\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case ADD_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items.push(action.payload.newCard);\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    \r\n    case SET_LIST_TITLE:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.boardId) {\r\n            board.lists = board.lists.map(list => {\r\n              if(list.id === action.payload.listId) {\r\n                list.title = action.payload.newTitle\r\n              }\r\n              return list\r\n            })\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case UPDATE_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.boardId) {\r\n            board.lists = board.lists.map(list => {\r\n              if(list.id === action.payload.listId) {\r\n                list.items = list.items.map(item => (\r\n                  item.id === action.payload.cardId ? action.payload.newCard : item\r\n                ))\r\n              }\r\n              return list\r\n            })\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case DELETE_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items = l.items.filter(i => i.id !== action.payload.cardId)\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_LABEL:\r\n      return {\r\n        ...state,\r\n        labels: [...state.labels, action.payload]\r\n      }\r\n    case UPDATE_LABEL:\r\n      return {\r\n        ...state,\r\n        labels: state.labels.map(label => {\r\n          if(label.id === action.payload.id) {\r\n            label.name = action.payload.name\r\n            label.color = action.payload.color\r\n            label.colorName = action.payload.colorName\r\n          }\r\n          return label\r\n        })\r\n      }\r\n    case DELETE_LABEL:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          b.lists = b.lists.map(l => {\r\n            l.items = l.items.map(i => {\r\n              i.labels = i.labels.filter(l => l !== action.payload)\r\n              return i\r\n            })\r\n            return l\r\n          })\r\n          return b\r\n        }),\r\n        labels: state.labels.filter(l => l.id !== action.payload)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// board state\r\nexport const ADD_BOARD = 'ADD_BOARD';\r\nexport const GET_BOARDS_NAMES = 'GET_BOARDS_NAMES';\r\nexport const SET_TITLE = 'SET_TITLE';\r\nexport const SET_STAR = 'SET_STAR';\r\nexport const SET_DESCRIBTION = 'SET_DESCRIBTION';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const DELETE_LIST = 'DELETE_LIST';\r\nexport const SET_LIST_TITLE = 'SET_LIST_TITLE';\r\nexport const COPY_LIST = 'COPY_LIST';\r\nexport const ADD_CARD = 'ADD_CARD';\r\nexport const UPDATE_CARD = 'UPDATE_CARD';\r\nexport const DELETE_CARD = 'DELETE_CARD';\r\nexport const ADD_LABEL = 'ADD_LABEL';\r\nexport const UPDATE_LABEL = 'UPDATE_LABEL';\r\nexport const DELETE_LABEL = 'DELETE_LABEL';\r\n\r\n// alert state\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const DELETE_ALERT = 'DELETE_ALERT';\r\n\r\n// user state\r\nexport const SET_CURRENT_BOARD_ID = 'SET_CURRENT_BOARD_ID';\r\nexport const CLEAR_CURRENT_BOARD_ID = 'CLEAR_CURRENT_BOARD_ID';\r\nexport const SET_CURRENT_LIST_ID = 'SET_CURRENT_LIST_ID';\r\nexport const CLEAR_CURRENT_LIST_ID = 'CLEAR_CURRENT_LIST_ID';\r\nexport const SET_RECENT_IDS = 'SET_RECENT_IDS';\r\nexport const SET_MODAL = 'SET_MODAL';\r\nexport const SET_MODAL_TYPE = 'SET_MODAL_TYPE';\r\nexport const SET_OPTIONS_MODAL = 'SET_OPTIONS_MODAL';\r\nexport const SET_OPTIONS_MODAL_TYPE = 'SET_OPTIONS_MODAL_TYPE';\r\nexport const SET_FAST_EDIT_MODAL_POS = 'SET_FAST_EDIT_MODAL_POS';\r\nexport const SET_CURRENT_CARD = 'SET_CURRENT_CARD';\r\nexport const CLEAR_CURRENT_CARD = 'CLEAR_CURRENT_CARD';\r\nexport const SET_MOUSE_POS = 'SET_MOUSE_POS';\r\nexport const TOGGLE_BIG_LABELS = 'TOGGLE_BIG_LABELS';\r\nexport const SET_OPTIONS_MODAL_STEP = 'SET_OPTIONS_MODAL_STEP';\r\nexport const SET_OPTIONS_MODAL_STEP_TYPE = 'SET_OPTIONS_MODAL_STEP_TYPE';\r\nexport const SET_OPTIONS_MODAL_STEP_DATA = 'SET_OPTIONS_MODAL_STEP_DATA';\r\n\r\n// \r\nexport const TEST = 'TEST';\r\n","import React, { useReducer } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport BoardContext from './boardContext';\r\nimport boardReducer from './boardReducer';\r\nimport {\r\n  ADD_BOARD,\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_DESCRIBTION,\r\n  ADD_LIST,\r\n  DELETE_LIST,\r\n  SET_LIST_TITLE,\r\n  COPY_LIST,\r\n  ADD_CARD,\r\n  UPDATE_CARD,\r\n  DELETE_CARD,\r\n  ADD_LABEL,\r\n  UPDATE_LABEL,\r\n  DELETE_LABEL\r\n} from '../types';\r\n\r\nconst BoardState = props => {\r\n  const initialState = {\r\n    boards: [\r\n      {\r\n        title: 'my nice board',\r\n        id: 1,\r\n        color: '#46b29e',\r\n        starred: false,\r\n        describtion: 'board describtion goes here',\r\n        lists: [\r\n          {\r\n            title: 'todos',\r\n            id: 1,\r\n            items: [\r\n              {\r\n                text: 'todo 1',\r\n                desc: 'one describtion',\r\n                id: uniqid(),\r\n                labels: [\r\n                  1,\r\n                  3,\r\n                  6\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uniqid(),\r\n                labels: [\r\n                  3\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uniqid(),\r\n                labels: [\r\n                  2\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uniqid(),\r\n                labels: [\r\n                  2\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uniqid(),\r\n                labels: [\r\n                  2\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uniqid(),\r\n                labels: [\r\n                  2\r\n                ]\r\n              },\r\n            ]\r\n          },\r\n          {\r\n            title: 'doing',\r\n            id: uniqid(),\r\n            items: [\r\n              {\r\n                text: 'doing 1',\r\n                id: uniqid(),\r\n                labels: [\r\n                  5,\r\n                  3\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 2',\r\n                id: uniqid(),\r\n                labels: [\r\n                  4,\r\n                  5,\r\n                  6,\r\n                  1,\r\n                  3,\r\n                  2 \r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 3',\r\n                id: uniqid(),\r\n                labels: [\r\n                  6,\r\n                  4\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            title: 'new list',\r\n            id: uniqid(),\r\n            items: [\r\n\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        title: 'test empty',\r\n        id: 2,\r\n        starred: false,\r\n        color: '#4759a3',\r\n        describtion: '',\r\n        lists: [\r\n          {\r\n            title: 'test for one',\r\n            id: uniqid(),\r\n            items: [\r\n              \r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    labels: [\r\n      {\r\n        id: 1,\r\n        color: '#61bd4f',\r\n        colorName: 'green',\r\n        name: 'label name'\r\n      },\r\n      {\r\n        id: 2,\r\n        color: '#f2d600',\r\n        colorName: 'yellow',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 3,\r\n        color: '#ff9f1a',\r\n        colorName: 'orange',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 4,\r\n        color: '#eb5a46',\r\n        colorName: 'red',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 5,\r\n        color: '#c377e0',\r\n        colorName: 'purple',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 6,\r\n        color: '#0079bf',\r\n        colorName: 'blue',\r\n        name: ''\r\n      }\r\n    ],\r\n    colors: [\r\n      {\r\n        name: 'green',\r\n        color: '#61bd4f'\r\n      },\r\n      {\r\n        name: 'yellow',\r\n        color: '#f2d600'\r\n      },\r\n      {\r\n        name: 'orange',\r\n        color: '#ff9f1a'\r\n      },\r\n      {\r\n        name: 'red',\r\n        color: '#eb5a46'\r\n      },\r\n      {\r\n        name: 'purple',\r\n        color: '#c377e0'\r\n      },\r\n      {\r\n        name: 'blue',\r\n        color: '#0079bf'\r\n      },\r\n      {\r\n        name: 'sky',\r\n        color: '#00c2e0'\r\n      },\r\n      {\r\n        name: 'lime',\r\n        color: '#51e898'\r\n      },\r\n      {\r\n        name: 'pink',\r\n        color: '#ff78cb'\r\n      },\r\n      {\r\n        name: 'black',\r\n        color: '#344563'\r\n      }\r\n    ],\r\n    listOfStarredBoardsIds: []\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(boardReducer, initialState);\r\n\r\n  // Get data\r\n  const getBoardsNames = () => {\r\n    const list = state.boards.map(b => b.title);\r\n    \r\n    return list\r\n  };\r\n\r\n  const addBoard = (title, color) => {\r\n    const newBaord = {\r\n      title,\r\n      id: uniqid(),\r\n      color,\r\n      starred: false,\r\n      describtion: '',\r\n      lists: []\r\n    }\r\n    dispatch({\r\n      type: ADD_BOARD,\r\n      payload: newBaord\r\n    });\r\n  }\r\n\r\n  // get  recent used boards based on user state\r\n  const getRecentBoards = (ids) => {\r\n    const list = [];\r\n\r\n    ids && ids.forEach(id => list.push(getBoard(id)));\r\n\r\n    return list\r\n  }\r\n\r\n  // get boards with starred = true\r\n  const getStarredBoards = () => {\r\n    const list = [];\r\n    state.listOfStarredBoardsIds.forEach(id => list.push(getBoard(id)));\r\n\r\n    return list;\r\n  }\r\n\r\n  // send a single board to board page (returns an array with one object)\r\n  const getBoard = (id) => {\r\n    const board = state.boards.filter(b => b.id === id);\r\n\r\n    return board[0]\r\n  }\r\n\r\n  const getList = (boardId, ListId) => {\r\n    const board = state.boards.filter(b => b.id === boardId)[0];\r\n\r\n    const list = board.lists.filter(l => l.id === ListId)[0];\r\n\r\n    return list\r\n  }\r\n\r\n  // set board title\r\n  const setTitle = (text, id) => {\r\n    dispatch({\r\n      type: SET_TITLE,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board starred or unstarred\r\n  const setStar = (id) => {\r\n    let newListOfStarredBoardsIds = state.listOfStarredBoardsIds;\r\n    if(state.listOfStarredBoardsIds.indexOf(id) !== -1) {\r\n      newListOfStarredBoardsIds.splice(state.listOfStarredBoardsIds.indexOf(id), 1);\r\n    } else {\r\n      newListOfStarredBoardsIds.push(id);\r\n    }\r\n    dispatch({\r\n      type: SET_STAR,\r\n      payload: {\r\n        id,\r\n        newListOfStarredBoardsIds\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board describtion\r\n  const setDescribtion = (text, id) => {\r\n    dispatch({\r\n      type: SET_DESCRIBTION,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // add List to board\r\n  const addList = (text, id) => {\r\n    const newList = {\r\n      title: text,\r\n      id: uniqid(),\r\n      items: []\r\n    }\r\n    dispatch({\r\n      type: ADD_LIST,\r\n      payload: {\r\n        id,\r\n        newList\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteList = (boardId, listId) => {\r\n    dispatch({\r\n      type: DELETE_LIST,\r\n      payload: {\r\n        boardId,\r\n        listId\r\n      }\r\n    });\r\n  }\r\n\r\n  const setListTitle = (boardId, listId, newTitle) => {\r\n    dispatch({\r\n      type: SET_LIST_TITLE,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        newTitle\r\n      }\r\n    });\r\n  }\r\n\r\n  const copyList = (boardId, listId, name) => {\r\n    let theList;\r\n\r\n    state.boards.forEach(b => b.id === boardId && b.lists.forEach(l => {\r\n      if(l.id === listId) {\r\n        theList = l\r\n      }\r\n    }))\r\n    \r\n    const newList = {\r\n      ...theList,\r\n      title: name,\r\n      id: uniqid()\r\n    }\r\n\r\n    dispatch({\r\n      type: COPY_LIST,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        newList\r\n      }\r\n    });\r\n  }\r\n\r\n  // add card to list\r\n  const addCard = (text, listId, boardId) => {\r\n    const newCard = {\r\n      text,\r\n      id: uniqid(),\r\n      labels: []\r\n    }\r\n    dispatch({\r\n      type: ADD_CARD,\r\n      payload: {\r\n        newCard,\r\n        listId,\r\n        boardId\r\n      }\r\n    });\r\n  }\r\n\r\n  // update card\r\n  const updateCard = (boardId, listId, cardId, newCard) => {\r\n    dispatch({\r\n      type: UPDATE_CARD,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        cardId,\r\n        newCard\r\n      }\r\n    })\r\n  }\r\n\r\n  const deleteCard = (boardId, listId, cardId) => {\r\n    dispatch({\r\n      type: DELETE_CARD,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        cardId\r\n      }\r\n    });\r\n  }\r\n\r\n  const addLabel = (name, colorName, id) => {\r\n    let is = false;\r\n    const newLabel = {\r\n      id,\r\n      colorName,\r\n      name,\r\n      color: state.colors.filter(c => c.name === colorName)[0].color\r\n    };\r\n\r\n    state.labels.forEach(label => {\r\n      if(label.colorName === colorName) {\r\n        if(label.name === name) {\r\n          is = true\r\n        }\r\n      }\r\n    });\r\n\r\n    if(!is) {\r\n      dispatch({\r\n        type : ADD_LABEL,\r\n        payload: newLabel\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateLabel = (name, colorName, id) => {\r\n    dispatch({\r\n      type: UPDATE_LABEL,\r\n      payload: {\r\n        name,\r\n        colorName,\r\n        color: state.colors.filter(c => c.name === colorName)[0].color,\r\n        id\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteLabel = (id) => {\r\n    dispatch({\r\n      type: DELETE_LABEL,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <BoardContext.Provider\r\n      value={{\r\n        boards: state.boards,\r\n        labels: state.labels,\r\n        colors: state.colors,\r\n        addBoard,\r\n        getBoardsNames,\r\n        getRecentBoards,\r\n        getStarredBoards,\r\n        getBoard,\r\n        getList,\r\n        setTitle,\r\n        setStar,\r\n        setDescribtion,\r\n        addList,\r\n        deleteList,\r\n        setListTitle,\r\n        copyList,\r\n        addCard,\r\n        updateCard,\r\n        deleteCard,\r\n        addLabel,\r\n        updateLabel,\r\n        deleteLabel,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BoardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BoardState;","import { \r\n  SET_ALERT,\r\n  DELETE_ALERT\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: [action.payload]\r\n      }\r\n    case DELETE_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: state.alerts.filter(a => a.id !== action.payload)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport AlertContext from './alertContext';\r\nimport alertReducer from './alertReducer';\r\nimport { \r\n  SET_ALERT,\r\n  DELETE_ALERT\r\n} from '../types';\r\n\r\nconst AlertState = props => {\r\n  const initialState = {\r\n    alerts: []\r\n    };\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n  // Get data\r\n  const setAlert = (msg, type, time) => {\r\n    const listOfMsgs = state.alerts.map(a => a.msg);\r\n    if(listOfMsgs.indexOf(msg) === -1) {\r\n      const newAlert = {\r\n        msg,\r\n        id: uniqid(),\r\n        type,\r\n      }\r\n\r\n      dispatch({\r\n        type: SET_ALERT,\r\n        payload: newAlert\r\n      });\r\n\r\n      setTimeout(() => {\r\n        deleteAlert(newAlert.id);\r\n      }, time ? time : 3000);\r\n    }\r\n  };\r\n\r\n  const deleteAlert = (id) => {\r\n    dispatch({\r\n      type: DELETE_ALERT,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alerts: state.alerts,\r\n        setAlert,\r\n        deleteAlert\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;","import { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_CURRENT_LIST_ID,\r\n  CLEAR_CURRENT_LIST_ID,\r\n  SET_CURRENT_CARD,\r\n  CLEAR_CURRENT_CARD,\r\n  SET_RECENT_IDS,\r\n  SET_MODAL,\r\n  SET_MODAL_TYPE,\r\n  SET_OPTIONS_MODAL,\r\n  SET_OPTIONS_MODAL_TYPE,\r\n  SET_FAST_EDIT_MODAL_POS,\r\n  SET_MOUSE_POS,\r\n  TOGGLE_BIG_LABELS,\r\n  SET_OPTIONS_MODAL_STEP,\r\n  SET_OPTIONS_MODAL_STEP_TYPE,\r\n  SET_OPTIONS_MODAL_STEP_DATA,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_BOARD_ID:\r\n     return {\r\n       ...state,\r\n       currentBoardId: action.payload\r\n     }\r\n    case CLEAR_CURRENT_BOARD_ID:\r\n      return {\r\n        ...state,\r\n        currentBoardId: null\r\n      }\r\n    case SET_CURRENT_LIST_ID:\r\n      return {\r\n        ...state,\r\n        currentListId: action.payload\r\n      }\r\n    case CLEAR_CURRENT_LIST_ID:\r\n      return {\r\n        ...state,\r\n        currentListId: null\r\n      }\r\n    case SET_CURRENT_CARD:\r\n      return {\r\n        ...state,\r\n        currentCard: action.payload\r\n      }\r\n    case CLEAR_CURRENT_CARD:\r\n      return {\r\n        ...state,\r\n        currentCard: null\r\n      }\r\n    case SET_RECENT_IDS:\r\n      return {\r\n        ...state,\r\n        recentIds: action.payload\r\n      }\r\n    case SET_MODAL:\r\n      return {\r\n        ...state,\r\n        modalStatus: action.payload\r\n      }\r\n    case SET_MODAL_TYPE:\r\n      return {\r\n        ...state,\r\n        modalType: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL:\r\n      return {\r\n        ...state,\r\n        optionsModalStatus: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_TYPE:\r\n      return {\r\n        ...state,\r\n        optionsModalType: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_STEP:\r\n      return {\r\n        ...state,\r\n        optionsModalStepStatus: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_STEP_TYPE:\r\n      return {\r\n        ...state,\r\n        optionsModalStepType: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_STEP_DATA:\r\n      return {\r\n        ...state,\r\n        optionsModalStepData: action.payload\r\n      }\r\n    case SET_FAST_EDIT_MODAL_POS:\r\n      return {\r\n        ...state,\r\n        fastEditModalPos: action.payload\r\n      }\r\n    case SET_MOUSE_POS:\r\n      return {\r\n        ...state,\r\n        mousePos: action.payload  \r\n      }\r\n    case TOGGLE_BIG_LABELS:\r\n      return {\r\n        ...state,\r\n        bigLabels: !state.bigLabels\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer } from 'react';\r\nimport UserContext from './userContext';\r\nimport userReducer from './userReducer';\r\nimport { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_CURRENT_LIST_ID,\r\n  CLEAR_CURRENT_LIST_ID,\r\n  SET_CURRENT_CARD,\r\n  CLEAR_CURRENT_CARD,\r\n  SET_RECENT_IDS,\r\n  SET_MODAL,\r\n  SET_MODAL_TYPE,\r\n  SET_OPTIONS_MODAL,\r\n  SET_OPTIONS_MODAL_TYPE,\r\n  SET_OPTIONS_MODAL_STEP,\r\n  SET_OPTIONS_MODAL_STEP_TYPE,\r\n  SET_OPTIONS_MODAL_STEP_DATA,\r\n  SET_FAST_EDIT_MODAL_POS,\r\n  SET_MOUSE_POS,\r\n  TOGGLE_BIG_LABELS,\r\n} from '../types';\r\n\r\nconst UserState = props => {\r\n  const initialState = {\r\n    currentBoardId: null,\r\n    currentListId: null,\r\n    currentCard: null,\r\n    recentIds: [],\r\n    ModalStatus: 'off',\r\n    modalType: null,\r\n    optionsModalStatus: 'off',\r\n    optionsModaltype: null,\r\n    optionsModalStepStatus: 'off',\r\n    optionsModalStepType: null,\r\n    optionsModalStepData: null,\r\n    fastEditModalPos: null,\r\n    mosuePos: {},\r\n    bigLabels: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(userReducer, initialState);\r\n\r\n  const setCurrentBoardId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_BOARD_ID,\r\n      payload: id\r\n    });\r\n    setRecentBaord(id);\r\n  }\r\n\r\n  // set new board to recent\r\n  const setRecentBaord = (id) => {\r\n    const newRecentIds = state.recentIds;\r\n    if(newRecentIds.length === 3 && id !== null) {\r\n      newRecentIds.shift();\r\n      newRecentIds.push(id);\r\n    } else if(id !== null) {\r\n      newRecentIds.push(id);\r\n    }\r\n    dispatch({\r\n      type: SET_RECENT_IDS,\r\n      payload: newRecentIds\r\n    });\r\n  }\r\n\r\n  // also can be done with \"setCurrentBoardId(null)\"\r\n  const clearCurrentBoardId = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_BOARD_ID\r\n    });\r\n  }\r\n\r\n  const setCurrentListId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_LIST_ID,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  const clearCurrentListId = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_LIST_ID\r\n    });\r\n  }\r\n\r\n  const setCurrentCard = (card) => {\r\n    dispatch({\r\n      type: SET_CURRENT_CARD,\r\n      payload: card\r\n    });\r\n  }\r\n\r\n  const clearCurrentCard = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_CARD\r\n    });\r\n  }\r\n\r\n  const setModal = (status, type) => {\r\n    dispatch({\r\n      type: SET_MODAL,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearModalType();\r\n    } else if(status === 'on') {\r\n      setModalType(type);\r\n    }\r\n  }\r\n\r\n  const setModalType = (type) => {\r\n    dispatch({\r\n      type: SET_MODAL_TYPE,\r\n      payload: type\r\n    });\r\n  }\r\n\r\n  const clearModalType = () => {\r\n    dispatch({\r\n      type: SET_MODAL_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setOptionsModal = (status, type) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearOptionsModalType();\r\n      setOptionsModalStep('off');\r\n    } else if(status === 'on') {\r\n      setOptionsModalType(type);\r\n    }\r\n  }\r\n\r\n  const setOptionsModalType = (type) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_TYPE,\r\n      payload: type\r\n    });\r\n  }\r\n\r\n  const clearOptionsModalType = () => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  // two prams 1. has step or not (on or off) 2. the last step\r\n  const setOptionsModalStep = (status, step, data) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearOptionsModalStepType();\r\n    } else if(status === 'on') {\r\n      setOptionsModalStepType(step);\r\n    }\r\n    if(data) {\r\n      setOptionsModalStepData(data);\r\n    } else {\r\n      clearOptionsModalStepData();\r\n    }\r\n  }\r\n\r\n  const setOptionsModalStepData = (data) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_DATA,\r\n      payload: data\r\n    });\r\n  }\r\n\r\n  const clearOptionsModalStepData = () => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_DATA,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setOptionsModalStepType = (step) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_TYPE,\r\n      payload: step\r\n    });\r\n  }\r\n\r\n  const clearOptionsModalStepType = () => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setFastEditModalPos = (pos) => {\r\n    dispatch({\r\n      type: SET_FAST_EDIT_MODAL_POS,\r\n      payload: pos\r\n    });\r\n  }\r\n\r\n  const setMousePos = (x, y) => {\r\n    dispatch({\r\n      type: SET_MOUSE_POS,\r\n      payload: {x, y}\r\n    });\r\n  }\r\n\r\n  const toggleBigLabels = () => {\r\n    dispatch({\r\n      type: TOGGLE_BIG_LABELS\r\n    });\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        currentBoardId: state.currentBoardId,\r\n        currentListId: state.currentListId,\r\n        currentCard: state.currentCard,\r\n        recentIds: state.recentIds,\r\n        modalStatus: state.modalStatus,\r\n        modalType: state.modalType,\r\n        optionsModalStatus: state.optionsModalStatus,\r\n        optionsModalType: state.optionsModalType,\r\n        optionsModalStepStatus: state.optionsModalStepStatus,\r\n        optionsModalStepType: state.optionsModalStepType,\r\n        optionsModalStepData: state.optionsModalStepData,\r\n        fastEditModalPos: state.fastEditModalPos,\r\n        mousePos: state.mousePos,\r\n        bigLabels: state.bigLabels,\r\n        setCurrentBoardId,\r\n        clearCurrentBoardId,\r\n        setCurrentListId,\r\n        clearCurrentListId,\r\n        setCurrentCard,\r\n        clearCurrentCard,\r\n        setModal,\r\n        setOptionsModal,\r\n        setOptionsModalStep,\r\n        setFastEditModalPos,\r\n        setMousePos,\r\n        toggleBigLabels,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport BoardState from './context/board/BoardState';\nimport AlertState from './context/alert/AlertState';\nimport UserState from './context/user/UserState';\n\nconst StateContainer = () => {\n  return (\n    <BoardState>\n      <AlertState>\n        <UserState>\n          <App />\n        </UserState>\n      </AlertState>\n    </BoardState>\n  );\n}\n\nReactDOM.render(<StateContainer />, document.getElementById('root'));"],"sourceRoot":""}