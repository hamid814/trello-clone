{"version":3,"sources":["context/user/userContext.js","context/board/boardContext.js","components/layout/Navbar.js","components/pages/home/SideListItem.js","components/pages/home/HomeSideList.js","context/alert/alertContext.js","components/pages/home/HomeMainItem.js","components/pages/home/Recent.js","components/pages/home/Starred.js","components/pages/home/HomeMain.js","components/pages/home/Home.js","components/pages/board/BoardTitle.js","components/pages/board/BoardNavbar.js","components/pages/board/ListTitle.js","components/pages/board/CardLabel.js","components/pages/board/ListItemLabels.js","components/pages/board/BoardListItem.js","components/pages/board/BoardList.js","components/pages/board/AddList.js","components/pages/board/BoardMain.js","components/pages/board/Board.js","components/modal/AddBoardModal.js","components/modal/details/LabelItem.js","components/modal/details/Labels.js","components/modal/details/Description.js","components/modal/details/CheckListItem.js","components/modal/details/Checklist.js","components/modal/details/Checklists.js","components/modal/details/DetailsRightPanel.js","components/modal/DetailsModal.js","components/modal/FastEditModal.js","components/modal/Modal.js","components/modal/options/DeleteCard.js","components/modal/options/MoveCard.js","components/modal/options/AddChecklist.js","components/modal/options/DeleteChecklist.js","components/modal/options/ChecklistItemActions.js","components/modal/options/EditCardLabelItem.js","components/modal/options/EditCardLabels.js","components/modal/options/EditLabel.js","components/modal/options/ListActions.js","components/modal/options/DeleteList.js","components/modal/options/CopyList.js","components/modal/options/MoveList.js","components/modal/options/DeleteAllCards.js","components/modal/options/MoveAllCards.js","components/modal/OptionsModal.js","components/alert/AlertItem.js","components/alert/Alerts.js","App.js","context/board/boardReducer.js","context/types.js","context/board/BoardState.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/user/userReducer.js","context/user/UserState.js","index.js"],"names":["UserContext","createContext","BoardContext","Navbar","userContext","useContext","boardContext","clearCurrentBoardId","currentBoardId","setModal","getBoard","navbarStyle","background","color","titleTextStyle","className","style","onClick","type","id","SideListItem","board","setCurrentBoardId","useState","isHover","setIsHover","hoverStyle","opacity","onMouseEnter","onMouseLeave","title","charAt","toUpperCase","slice","HomeSideList","boards","map","b","key","AlertContext","HomeMainItem","alertContext","setStar","setAlert","itemStyle","e","target","classList","contains","starred","Recent","getRecentBoards","recentIds","length","r","uniqid","Starred","getStarredBoards","s","HomeMain","Home","BoardTitle","boardId","setTitle","text","setText","isSettingTitle","setIsSettingTitle","textHasChanged","setTextHasChanged","useEffect","document","querySelector","focus","onSetTitle","onChange","value","onBlur","onKeyUp","keyCode","BoardNavbar","setDescribtion","descText","setDescText","isSettingDesc","setIsSettingDesc","onSetDesc","describtion","ListTitle","listId","setListTitle","currentListId","onSetListTitle","CardLabel","label","bigLabels","thisLabel","labels","filter","l","colorName","name","ListItemLabels","toggleBigLabels","father","hover","setHover","makeLabelsGrid","display","gridGap","gridTemplateColumns","BoardListItem","timer","item","listItem","useRef","setCurrentCard","setFastEditModalPos","onlongtouch","current","top","getBoundingClientRect","left","width","getNumberOfChecklistItems","num","checklists","forEach","c","items","i","getNumberOfDoneChecklistItems","done","ref","parentElement","onTouchStart","setTimeout","onTouchEnd","clearTimeout","desc","watching","console","log","BoardList","list","boardFuncs","setCurrentListId","setOptionsModal","addCardFromListActions","wantToAddCard","setWantToAddCard","newCardText","setNewCardText","addCard","cancelAddCard","index","placeholder","AddList","setScrollIflonger","addList","isAdding","setIsAdding","onAddList","cancelAddList","lists","BoardMain","setStyle","window","innerWidth","gridTemplateRows","Board","setBoard","boardStyle","AddBoardModal","addBoard","bg","setBg","onClose","onAdd","bgColor","backgroundColor","Labelitem","Labels","LabelItem","Description","currentCard","updateCard","isEditing","setIsEditing","onSave","newCard","CheckListItem","clId","hideDone","setData","ifDone","textDecoration","defaultChecked","checklistId","Checklist","checklist","onAddItem","newItem","getNumberOfDones","progress","Math","floor","Checklists","DetailsRightPanel","DetailsModal","getList","FastEditModal","theTextarea","fastEditModalPos","clearCurrentCard","modalPos","position","rightWidth","onUpdate","Modal","modalStatus","modalType","showModal","setShowModal","closeModal","modalDisplay","DeleteCard","deleteCard","MoveCard","boardsSelect","listSelect","posSelect","destBoardId","setDestBoardId","destListId","setDestListId","destPos","setDestPos","moveCard","findIndex","Number","AddChecklist","newChecklist","DeleteChecklist","data","newListOfChecklists","ChecklistItemActions","onDelete","EditCardLabelItem","setLabelId","goToEditLabel","indexOf","EditCardLabels","setOptionsModalStep","setLabel","EditLabel","setColorName","optionsModalStepData","colors","addLabel","updateLabel","deleteLabel","onColorClick","is","newId","ListActions","setAddCardFromListActions","setWatching","sortList","DeleteList","deleteList","CopyList","setName","copyList","MoveList","PosSelect","desPos","moveList","DeleteAllCards","deleteAllCards","MoveAllCards","moveAllCards","OptionsModal","container","optionsModalStatus","optionsModalType","optionsModalStepStatus","optionsModalStepType","mousePos","pos","setPos","setOptionsPos","rect","x","innerHeight","y","height","right","bottom","AlertItem","alert","deleteAlert","msg","Alerts","alerts","a","App","setMousePos","clear","clientX","clientY","state","action","payload","baords","listOfStarredBoardsIds","newListOfStarredBoardsIds","push","newList","splice","newItems","firstBoardId","firstIndex","destIndex","firstListId","concat","newTitle","cardId","card","BoardState","props","initialState","useReducer","boardReducer","dispatch","ListId","Provider","newBaord","getBoardsNames","ids","theList","sort","cardWithNewId","newLabel","children","AlertState","alertReducer","time","newAlert","UserState","userReducer","ModalStatus","optionsModaltype","mosuePos","setRecentBaord","newRecentIds","shift","setModalType","clearModalType","setOptionsModalType","clearOptionsModalType","status","step","clearOptionsModalStepType","setOptionsModalStepType","setOptionsModalStepData","clearOptionsModalStepData","clearCurrentListId","ReactDOM","render","getElementById"],"mappings":"4QAIeA,EAFKC,0BCELC,EAFMD,0BC6DNE,EA1DA,WACb,IAAMC,EAAcC,qBAAWL,GACzBM,EAAeD,qBAAWH,GAExBK,EAAkDH,EAAlDG,oBAAqBC,EAA6BJ,EAA7BI,eAAgBC,EAAaL,EAAbK,SACrCC,EAAaJ,EAAbI,SAUFC,EAAc,CAClBC,WAAYF,EAASF,IAAmBE,EAASF,GAAgBK,OAG7DC,EAAiB,CACrBD,MAAOH,EAASF,GAAkBE,EAASF,GAAgBK,MAAQ,WAGrE,OACE,yBAAKE,UAAU,gBAAgBC,MAAOL,GACpC,6BACE,yBAAKI,UAAU,yCAAyCE,QAnB3C,WACjBV,MAmBM,uBAAGQ,UAAU,gBAEf,yBAAKA,UAAU,0CACb,uBAAGA,UAAU,6BADf,UAIA,yBAAKA,UAAU,iBACb,2BAAOG,KAAK,OAAOH,UAAU,qCAAqCI,GAAG,mBAGzE,yBAAKJ,UAAU,QACb,yBAAKA,UAAU,qEACb,yBAAKA,UAAU,MAAf,UAGA,yBACEA,UAAU,6BACVC,MAAOF,GAFT,WAOJ,6BACE,yBAAKC,UAAU,yCAAyCE,QAvC3C,WACjBR,EAAS,KAAM,mBAuCT,uBAAGM,UAAU,mB,OCXRK,EAzCM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAGdC,EAFYjB,qBAAWL,GAEvBsB,kBAH0B,EAKJC,oBAAS,GALL,mBAK3BC,EAL2B,KAKlBC,EALkB,KAO5BC,EAAaF,EAAU,CAC3BZ,WAAYS,EAAMR,MAClBA,MAAO,UACPc,QAAS,OACP,CACFA,QAAS,KAeX,OACE,yBACEC,aAdiB,WACnBH,GAAW,IAcTI,aAXiB,WACnBJ,GAAW,IAWTR,QARY,WACdK,EAAkBD,EAAMF,KAQtBJ,UAAU,0EACVC,MAAOU,GAELL,EAAMS,MAAMC,OAAO,GAAGC,cAAgBX,EAAMS,MAAMG,MAAM,GACxD,uBAAGlB,UAAU,kCCnBNmB,EAhBM,WAAO,IAClBC,EAAW9B,qBAAWH,GAAtBiC,OAER,OACE,+BACE,4BAAQpB,UAAU,kDAChB,uBAAGA,UAAU,6BACb,yBAAKA,UAAU,mBAAf,WAEAoB,EAAOC,IAAI,SAAAC,GAAC,OACZ,kBAAC,EAAD,CAAcC,IAAKD,EAAElB,GAAIE,MAAOgB,Q,gBCXzBE,EAFMtC,0BC6CNuC,EAzCM,SAAC,GAAe,IAAbnB,EAAY,EAAZA,MAChBjB,EAAcC,qBAAWL,GACzBM,EAAeD,qBAAWH,GAC1BuC,EAAepC,qBAAWkC,GAExBjB,EAAsBlB,EAAtBkB,kBACAoB,EAAYpC,EAAZoC,QACAC,EAAaF,EAAbE,SAEFC,EAAY,CAChBhC,WAAYS,EAAMR,OAcpB,OACE,yBACEE,UAAU,kCACVC,MAAO4B,EACP3B,QAfY,SAAC4B,GACXA,EAAEC,OAAOC,UAAUC,SAAS,YAC9B1B,EAAkBD,EAAMF,MActB,yBAAKJ,UAAU,yBACXM,EAAMS,MAAMC,OAAO,GAAGC,cAAgBX,EAAMS,MAAMG,MAAM,IAE5D,yBACElB,UAAU,6BACVE,QAfc,WACpByB,EAAQrB,EAAMF,IACdwB,EAAS,GAAD,OAAItB,EAAM4B,QAAU,2BAA6B,gCAAjD,UAAsF5B,EAAM4B,QAAU,UAAY,QAAU,QAc9H,uBAAGlC,UAAS,kBAAaM,EAAM4B,QAAU,mBAAqB,YCTzDC,EAzBA,WACb,IAAM5C,EAAeD,qBAAWH,GAC1BE,EAAcC,qBAAWL,GAEvBmD,EAAoB7C,EAApB6C,gBACAC,EAAchD,EAAdgD,UAER,OACE,kBAAC,WAAD,KAC0C,IAAtCD,EAAgBC,GAAWC,QACvB,yBAAKtC,UAAU,uDACb,uBAAGA,UAAU,qBADf,gBAGE,yBAAKA,UAAU,IACXoC,EAAgBC,GAAWhB,IAAI,SAAAkB,GAAC,OAC5B,kBAAC,EAAD,CAAchB,IAAKiB,MAAUlC,MAAOiC,UCM3CE,EAvBC,WACd,IAEQC,EAFapD,qBAAWH,GAExBuD,iBAER,OACE,kBAAC,WAAD,KACkC,IAA9BA,IAAmBJ,QACf,yBAAKtC,UAAU,uDACb,uBAAGA,UAAU,oBADf,kBAGE,yBAAKA,UAAU,IACX0C,IAAmBrB,IAAI,SAAAsB,GAAC,OACpB,kBAAC,EAAD,CAAcpB,IAAKoB,EAAEvC,GAAIE,MAAOqC,UCQvCC,EApBE,WAAO,IACdlD,EAAaJ,qBAAWL,GAAxBS,SAMR,OACE,0BAAMM,UAAU,aACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,8BAA8BE,QATrC,WACZR,EAAS,KAAM,mBAQX,gBCJOmD,EATF,WACX,OACE,yBAAK7C,UAAU,2BACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCmES8C,EAvEI,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAAShC,EAAsB,EAAtBA,MAAOiC,EAAe,EAAfA,SAC9B3D,EAAcC,qBAAWL,GACzByC,EAAepC,qBAAWkC,GAExB/B,EAAmBJ,EAAnBI,eACAmC,EAAaF,EAAbE,SAL2C,EAO3BpB,mBAAS,IAPkB,mBAO5CyC,EAP4C,KAOtCC,EAPsC,OAQP1C,oBAAS,GARF,mBAQ5C2C,EAR4C,KAQ5BC,EAR4B,OASP5C,oBAAS,GATF,mBAS5C6C,EAT4C,KAS5BC,EAT4B,KAWnDC,oBAAU,WACRL,EAAQnC,GACRyC,SAASC,cAAT,uBAAuCV,IAAWW,SAEjD,CAACP,IAEJ,IAmBMQ,EAAa,WACdN,EACW,KAATJ,GACDD,EAASC,EAAMxD,GACfmC,EAAS,sBAAuB,WAChCwB,GAAkB,KAElBA,GAAkB,GAClBxB,EAAS,+BAAgC,YAG3CwB,GAAkB,GAClBE,GAAkB,KAItB,OACE,yBAAKtD,UAAU,SACb,yBACEA,UAAS,8BAAyBmD,GAAkB,OACpDjD,QAvCU,WACdkD,GAAkB,KAuCZrC,EAAMC,OAAO,GAAGC,cAAgBF,EAAMG,MAAM,IAEhD,2BACEf,KAAK,OACLC,GAAE,sBAAiB2C,GACnB/C,UAAS,uBAAkBmD,GAAkB,OAC7CS,SA1CW,SAAC9B,GAChBoB,EAAQpB,EAAEC,OAAO8B,OACjBP,GAAkB,IAyCdQ,OAtCS,WACbH,KAsCIE,MAAOZ,EACPc,QApCU,SAACjC,GACE,KAAdA,EAAEkC,SACHL,SCyCSM,EAzEK,SAAC,GAAkD,IAAhD3D,EAA+C,EAA/CA,MAAOqB,EAAwC,EAAxCA,QAASuC,EAA+B,EAA/BA,eAAgBlB,EAAe,EAAfA,SAC7CpB,EAAatC,qBAAWkC,GAAxBI,SAD4D,EAGpCpB,mBAAS,IAH2B,mBAG7D2D,EAH6D,KAGnDC,EAHmD,OAI1B5D,oBAAS,GAJiB,mBAI7D6D,EAJ6D,KAI9CC,EAJ8C,KAuB9DC,EAAY,WAChBL,EAAeC,EAAU7D,EAAMF,IAC/BwB,EAAS,yCAA0C,WACnD0C,GAAiB,IASb1E,EAAc,CAClBC,WAAYS,GAASA,EAAMR,OAG7B,OACE,yBAAKE,UAAU,+CAA+CC,MAAOL,GACnE,yBAAKI,UAAU,yBACXM,GAAS,kBAAC,EAAD,CAAYyC,QAASzC,EAAMF,GAAIW,MAAOT,EAAMS,MAAOiC,SAAUA,IACxE,yBAAKhD,UAAU,8CAA8CE,QArC/C,WAClByB,EAAQrB,EAAMF,IACdwB,EAAS,GAAD,OAAItB,EAAM4B,QAAU,2BAA6B,gCAAjD,UAAsF5B,EAAM4B,QAAU,UAAY,QAAU,OAoC9H,uBAAGlC,UAAS,kBAAaM,GAASA,EAAM4B,QAAU,mBAAqB,UAEzE,yBAAKlC,UAAU,yBAEXM,IACI+D,IACE/D,EAAMkE,YAAclE,EAAMkE,YAAc,kBAElD,2BACErE,KAAK,OACLC,GAAG,oBACHJ,UAAS,uBAAkBqE,GAAiB,OAC5CR,MAAOM,EACPP,SAxCiB,SAAC9B,GACxBA,EAAEC,OAAO8B,MAAMvB,OAAS,GACpB8B,EAAYtC,EAAEC,OAAO8B,OACrBjC,EAAS,iDAAkD,UAAW,MAsCpEkC,OAAQS,EACRR,QA9BQ,SAACjC,GACE,KAAdA,EAAEkC,SACHO,QA8BE,yBAAKvE,UAAU,8CAA8CE,QAlDhD,WACjBoE,GAAiB,GACjBF,EAAY9D,EAAMkE,aAClBhB,SAASC,cAAc,sBAAsBC,UAgDvC,uBAAG1D,UAAU,iBAGjB,yBAAKA,UAAU,0CACb,uBAAGA,UAAU,yBADf,eCMSyE,EAvEG,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,OAAQ3D,EAA0B,EAA1BA,MAAO4D,EAAmB,EAAnBA,aAC5BtF,EAAcC,qBAAWL,GACzByC,EAAepC,qBAAWkC,GAExB/B,EAAkCJ,EAAlCI,eAAgBmF,EAAkBvF,EAAlBuF,cAChBhD,EAAaF,EAAbE,SAL6C,EAO7BpB,mBAAS,IAPoB,mBAO9CyC,EAP8C,KAOxCC,EAPwC,OAQT1C,oBAAS,GARA,mBAQ9C2C,EAR8C,KAQ9BC,EAR8B,OAST5C,oBAAS,GATA,mBAS9C6C,EAT8C,KAS9BC,EAT8B,KAWrDC,oBAAU,WACRL,EAAQnC,GACRyC,SAASC,cAAT,sBAAsCiB,IAAUhB,SAE/C,CAACP,IAEJ,IAmBM0B,EAAiB,WAClBxB,EACW,KAATJ,GACD0B,EAAalF,EAAgBmF,EAAe3B,GAC5CrB,EAAS,qBAAsB,WAC/BwB,GAAkB,KAElBA,GAAkB,GAClBxB,EAAS,8BAA+B,aAG1CwB,GAAkB,GAClBE,GAAkB,KAItB,OACE,yBAAKtD,UAAU,aACb,yBACEA,UAAS,yBAAoBmD,GAAkB,OAC/CjD,QAvCU,WACdkD,GAAkB,KAuCZrC,GAEJ,2BACEZ,KAAK,OACLC,GAAE,qBAAgBsE,GAClBb,MAAOZ,EACPjD,UAAS,kEAA6DmD,GAAkB,OACxFS,SA3CW,SAAC9B,GAChBoB,EAAQpB,EAAEC,OAAO8B,OACjBP,GAAkB,IA0CdQ,OAvCS,WACbe,KAuCId,QApCU,SAACjC,GACE,KAAdA,EAAEkC,SACHa,SCjBSC,EAhBG,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,MAAO7E,EAAqD,EAArDA,QAASW,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,aAAckE,EAAgB,EAAhBA,UAGzDC,EAFa3F,qBAAWH,GAAtB+F,OAEiBC,OAAO,SAAAC,GAAC,OAAIA,EAAEhF,KAAO2E,IAAO,GAErD,OACE,yBACE7E,QAASA,EACTW,aAAcA,EACdC,aAAcA,EACdd,UAAS,kDAA6CiF,EAAUI,UAAvD,YAAoEL,EAAY,WAAa,aACtG,yBAAKhF,UAAU,kBAAmBgF,GAAaC,EAAUK,QCkBhDC,EA9BQ,SAAC,GAAoD,IAAlDL,EAAiD,EAAjDA,OAAQM,EAAyC,EAAzCA,gBAAiBR,EAAwB,EAAxBA,UAAWS,EAAa,EAAbA,OAAa,EAC/CjF,oBAAS,GADsC,mBAClEkF,EADkE,KAC3DC,EAD2D,KAGnEzF,EAAU,WACH,kBAAXuF,GAA8BD,KAG1B3E,EAAe,WACR,kBAAX4E,GAA8BE,GAAS,IAGnC7E,EAAe,WACnB6E,GAAS,IAGLC,EAAiB,CACrBC,QAAS,OACTC,QAAQ,QACRC,oBAAoB,UAAD,OAAYb,EAAO5C,OAAnB,WAGrB,OACE,yBAAKrC,MAAO2F,EAAgB5F,UAAS,0DAAqD0F,GAAS,cAE/FR,EAAO7D,IAAI,SAAA+D,GAAC,OAAI,kBAAC,EAAD,CAAW7D,IAAK6D,EAAGL,MAAOK,EAAGlF,QAASA,EAASW,aAAcA,EAAcC,aAAcA,EAAckE,UAAWA,QCkG3HgB,EAvHO,SAAC,GAAc,IA8B/BC,EA9BmBC,EAAW,EAAXA,KACjBC,EAAWC,iBAAO,MADU,EAGoD9G,qBAAWL,GAAzFoH,EAH0B,EAG1BA,eAAgB3G,EAHU,EAGVA,SAAU4G,EAHA,EAGAA,oBAAqBd,EAHrB,EAGqBA,gBAAiBR,EAHtC,EAGsCA,UAyClEuB,EAAc,WACM,OAArBJ,EAASK,UACVF,EAAoB,CAClBG,IAAKN,EAASK,QAAQE,wBAAwBD,IAC9CE,KAAMR,EAASK,QAAQE,wBAAwBC,KAC/CC,MAAOT,EAASK,QAAQE,wBAAwBE,QAElDlH,EAAS,KAAM,mBAIbmH,EAA4B,WAChC,IAAIC,EAAM,EAOV,OANAZ,EAAKa,WAAWC,QAAQ,SAAAC,GACtBA,EAAEC,MAAMF,QAAQ,SAAAG,GACdL,QAIGA,GAGHM,EAAgC,WACpC,IAAIN,EAAM,EAOV,OANAZ,EAAKa,WAAWC,QAAQ,SAAAC,GACtBA,EAAEC,MAAMF,QAAQ,SAAAG,GACdA,EAAEE,MAAQP,QAIPA,GAGT,OACE,yBACE9G,UAAU,yBACVsH,IAAKnB,EACLjG,QA5EY,SAAC4B,GACXA,EAAEC,OAAOC,UAAUC,SAAS,eAAkBH,EAAEC,OAAOwF,cAAcvF,UAAUC,SAAS,eAAkBH,EAAEC,OAAOC,UAAUC,SAAS,oBACxIvC,EAAS,KAAM,gBAEjB2G,EAAeH,IAyEbsB,aAjDiB,WACnBvB,EAAQwB,WAAWlB,EAHC,KAIpBF,EAAeH,IAgDbwB,WA7Ce,WACbzB,GACF0B,aAAa1B,KA4CX,kBAAC,EAAD,CAAgBR,OAAO,gBAAgBP,OAAQgB,EAAKhB,OAAQF,UAAWA,EAAWQ,gBAAiBA,IACnG,6BACIU,EAAKjD,MAET,yBAAKjD,UAAU,cAEXkG,EAAK0B,MACH,uBAAG5H,UAAU,yBAGfkG,EAAK2B,UACH,uBAAG7H,UAAU,kBAGfkG,EAAKa,WAAWzE,OAAS,GACS,IAAhCuE,KACE,yBAAK7G,UAAS,wBAAmBoH,MAAoCP,KAA+D,IAAhCA,IAAoC,cAAgB,aACtJ,uBAAG7G,UAAU,wBAEXoH,IAHJ,IAOIP,MAKZ,yBAAK7G,UAAU,6CAA6CE,QApG9C,SAAC4B,GACnBgG,QAAQC,IAAI,2CACTjG,EAAEC,OAAOC,UAAUC,SAAS,cAC7BqE,EAAoB,CAClBG,IAAK3E,EAAEC,OAAOwF,cAAcb,wBAAwBD,IACpDE,KAAM7E,EAAEC,OAAOwF,cAAcb,wBAAwBC,KACrDC,MAAO9E,EAAEC,OAAOwF,cAAcb,wBAAwBE,QAGxDN,EAAoB,CAClBG,IAAK3E,EAAEC,OAAOwF,cAAcA,cAAcb,wBAAwBD,IAClEE,KAAM7E,EAAEC,OAAOwF,cAAcA,cAAcb,wBAAwBC,KACnEC,MAAO9E,EAAEC,OAAOwF,cAAcA,cAAcb,wBAAwBE,QAGxElH,EAAS,KAAM,mBAsFT,uBAAGM,UAAU,kBCcRgI,EA9HG,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,WAEnB7I,EAAcC,qBAAWL,GACzByC,EAAepC,qBAAWkC,GAExB2G,EAA8E9I,EAA9E8I,iBAAkB1I,EAA4DJ,EAA5DI,eAAgB2I,EAA4C/I,EAA5C+I,gBAAiBC,EAA2BhJ,EAA3BgJ,uBACnDzG,EAAaF,EAAbE,SAN6D,EAQ3BpB,oBAAS,GARkB,mBAQ9D8H,EAR8D,KAQ/CC,EAR+C,OAS/B/H,mBAAS,IATsB,mBAS9DgI,EAT8D,KASjDC,EATiD,KAWrElF,oBAAU,WACL8E,IAA2BJ,EAAK7H,IACjCmI,GAAiB,IAGlB,CAACF,IAEJ,IA0BMK,EAAU,WACK,KAAhBF,IAEDN,EAAWQ,QAAQF,EAAaP,EAAK7H,GAAIX,GACzCmC,EAAS,aAAc,WACvB6G,EAAe,MAIbE,EAAgB,WACpBJ,GAAiB,GACjBE,EAAe,KAejB,OACE,yBAAKzI,UAAU,oBAAoBE,QAbjB,WAClBiI,EAAiBF,EAAK7H,MAapB,yBAAKJ,UAAU,4BACb,kBAAC,EAAD,CAAW0E,OAAQuD,EAAK7H,GAAIW,MAAOkH,EAAKlH,MAAO4D,aAAcuD,EAAWvD,eACxE,yBAAK3E,UAAU,0DAA0DE,QAZpD,WACzBkI,EAAgB,KAAM,iBAYhB,uBAAGpI,UAAU,uBAGbiI,EAAKJ,UACL,yBAAK7H,UAAU,oDACb,uBAAGA,UAAU,iBAInB,yBAAKA,UAAU,2BACXiI,EAAKf,MAAM7F,IAAI,SAAC8F,EAAGyB,GAAJ,OACf,kBAAC,EAAD,CAAerH,IAAK4F,EAAE/G,GAAI8F,KAAMiB,MAElC,yBAAKnH,UAAS,6DAAwDsI,GAAiB,QACrF,8BACEtI,UAAU,qCACV6I,YAAY,8BACZ/E,OAhEa,WACF,KAAhB0E,EACDE,IAEAC,KA6DM5E,QAzDM,SAACjC,GACE,KAAdA,EAAEkC,SAAkBwE,EAAYlG,OAAS,EAC1CoG,IACsB,KAAd5G,EAAEkC,SAAyC,IAAvBwE,EAAYlG,QACxCmG,EAAe,KAsDT7E,SAxEO,SAAC9B,GACC,KAAdA,EAAEkC,SACHyE,EAAe3G,EAAEC,OAAO8B,QAuElBA,MAAO2E,MAKb,yBACExI,UAAS,+BAA0BsI,GAAiB,kBACpDpI,QApFiB,YACpBoI,GAAiBC,GAAiB,KAoF5BD,EAKC,kBAAC,WAAD,KACE,yBAAKtI,UAAU,kBAAkBE,QAASwI,GAA1C,YAGA,yBAAK1I,UAAU,+CAA+CE,QAASyI,GAAvE,QAGA,yBAAK3I,UAAU,uDAAgEE,QAjD7D,WAC5BkI,EAAgB,KAAM,oBAiDR,uBAAGpI,UAAU,wBAZjB,6BACyB,IAAtBiI,EAAKf,MAAM5E,OAAe,eAAiB,yBC/B7CwG,EA5EC,SAAC,GAAkC,IAAhCxI,EAA+B,EAA/BA,MAAOyI,EAAwB,EAAxBA,kBAClBxJ,EAAeD,qBAAWH,GAC1BuC,EAAepC,qBAAWkC,GAExBwH,EAAYzJ,EAAZyJ,QACApH,EAAaF,EAAbE,SALwC,EAOhBpB,oBAAS,GAPO,mBAOzCyI,EAPyC,KAO/BC,EAP+B,OAQxB1I,mBAAS,IARe,mBAQzCyC,EARyC,KAQnCC,EARmC,KAgC1CiG,EAAY,WACJ,KAATlG,GACD+F,EAAQ/F,EAAM3C,EAAMF,IACpBwB,EAAS,QAAD,OAASqB,EAAT,UAAuB,WAC/BC,EAAQ,IACR6F,KAEAnH,EAAS,8BAA+B,YAItCwH,EAAgB,WACpBF,GAAY,GACZhG,EAAQ,KAGV,OACE,kBAAC,WAAD,KACE,yBACElD,UAAS,uEAAkEiJ,GAAY,OACvF/I,QA1CU,WACdgJ,GAAY,KA0CJ5I,GAAgC,IAAvBA,EAAM+I,MAAM/G,OAAe,eAAiB,sBAE3D,yBACEtC,UAAS,yEAAoEiJ,GAAY,QACvF,2BACE9I,KAAK,OACLH,UAAU,sBACV6I,YAAY,kBACZhF,MAAOZ,EACPW,SAhDO,SAAC9B,GAChBoB,EAAQpB,EAAEC,OAAO8B,QAgDTC,OA7CK,WACD,KAATb,EACDkG,IAEAC,KA0CMrF,QAtCM,SAACjC,GACE,KAAdA,EAAEkC,SACHmF,OAqCI,yBAAKnJ,UAAU,kBAAkBE,QAASiJ,GAA1C,YAGA,yBAAKnJ,UAAU,+CAA+CE,QAASkJ,GAAvE,WCnCKE,EAlCG,SAAC,GAAgE,IAA9DhJ,EAA6D,EAA7DA,MAAO4H,EAAsD,EAAtDA,WAAsD,EACtD1H,mBAAS,IAD6C,mBACzEP,EADyE,KAClEsJ,EADkE,KAGhFhG,oBAAU,WACRwF,KAEC,CAACzI,IAEJ,IAAMyI,EAAoB,WAGrB,GAF2C,KAA1BzI,EAAM+I,MAAM/G,OAAS,GAEpBkH,OAAOC,YAC1BF,EAAS,CACP1D,QAAS,OACT6D,iBAAkB,MAClB3D,oBAAoB,UAAD,OAAYzF,GAASA,EAAM+I,MAAM/G,OAAS,EAA1C,aAKzB,OACE,yBAAKtC,UAAU,oBAAoBC,MAAOA,GACtCK,EAAM+I,MAAMhI,IAAI,SAAA+D,GAAC,OACf,yBAAK7D,IAAK6D,EAAEhF,GAAIJ,UAAU,6BACxB,kBAAC,EAAD,CAAWiI,KAAM7C,EAAG8C,WAAYA,OAGtC,yBAAKlI,UAAU,6BACb,kBAAC,EAAD,CAASM,MAAOA,EAAOyI,kBAAmBA,OCWnCY,G,MAhCD,WAAO,IAAD,EACQnJ,mBAAS,MADjB,mBACXF,EADW,KACJsJ,EADI,KAGZvK,EAAcC,qBAAWL,GACzBM,EAAeD,qBAAWH,GAExBM,EAAmBJ,EAAnBI,eACAE,EAAgDJ,EAAhDI,SAAUgC,EAAsCpC,EAAtCoC,QAASuC,EAA6B3E,EAA7B2E,eAAgBlB,EAAazD,EAAbyD,SAE3CO,oBAAU,WACRqG,EAASjK,EAASF,KAEjB,IAEH,IAAMoK,EAAa,CACjBhK,WAAYS,GAASA,EAAMR,OAG7B,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CACEQ,MAAOA,EACPqB,QAASA,EACTuC,eAAgBA,EAChBlB,SAAUA,IACZ,yBAAKhD,UAAU,yCAAyCC,MAAO4J,GAC5DvJ,GAAS,kBAAC,EAAD,CAAW4H,WAAY3I,EAAce,MAAOA,QCkD/CwJ,G,KA/EO,WAAO,IAAD,EACgBxK,qBAAWL,GAA7CS,EADkB,EAClBA,SAAUF,EADQ,EACRA,oBACVuK,EAAazK,qBAAWH,GAAxB4K,SACAnI,EAAatC,qBAAWkC,GAAxBI,SAHkB,EAKNpB,mBAAS,WALH,mBAKnBwJ,EALmB,KAKfC,EALe,OAMFzJ,mBAAS,IANP,mBAMnByC,EANmB,KAMbC,EANa,KAcpBgH,EAAU,WACdxK,EAAS,QAaLyK,EAAQ,WACA,KAATlH,IACD8G,EAAS9G,EAAM+G,GACfE,IACAtI,EAAS,SAAD,OAAUqB,EAAKjC,OAAO,GAAGC,cAAgBgC,EAAK/B,MAAM,GAApD,gBAAsE,UAAW,KACzF1B,MAIE4K,EAAU,CACdC,gBAAiBL,GAGnB,OACE,yBAAKhK,UAAU,yCACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,0BAA0BC,MAAOmK,GAC9C,6BACE,2BACEjK,KAAK,OACL0I,YAAY,kBACZhF,MAAOZ,EACPW,SAhCK,SAAC9B,GAChBoB,EAAQpB,EAAEC,OAAO8B,QAgCPE,QA7BI,SAACjC,GACE,KAAdA,EAAEkC,SACHmG,KA4BQnK,UAAU,oDAEd,6BACE,yBAAKA,UAAU,QAAQE,QAASgK,GAAhC,UAKJ,yBAAKlK,UAAU,8BAA8BE,QApD/B,SAAC4B,GACfA,EAAEC,OAAOC,UAAUC,SAAS,kBAAqBH,EAAEC,OAAOC,UAAUC,SAAS,gBAC/EgI,EAAMnI,EAAEC,OAAO3B,MAmDX,yBAAKA,GAAG,UAAUJ,UAAU,2CAC5B,yBAAKI,GAAG,UAAUJ,UAAU,8CAC5B,yBAAKI,GAAG,UAAUJ,UAAU,8CAC5B,yBAAKI,GAAG,UAAUJ,UAAU,8CAC5B,yBAAKI,GAAG,UAAUJ,UAAU,8CAC5B,yBAAKA,UAAU,kBACf,yBAAKI,GAAG,SAASJ,UAAU,uCAG/B,yBACEE,QAASiK,EACTnK,UAAS,qCAAyC,KAATiD,EAAc,cAAgB,uBAFzE,mBC7DSqH,EAbG,SAAC,GAAwB,IAAtBvF,EAAqB,EAArBA,MAAO7E,EAAc,EAAdA,QAGpB+E,EAFa3F,qBAAWH,GAAtB+F,OAEiBC,OAAO,SAAAC,GAAC,OAAIA,EAAEhF,KAAO2E,IAAO,GAErD,OACE,yBACE7E,QAASA,EACTF,UAAS,gDAA2CiF,EAAUI,cCoBrDkF,EA3BA,SAAC,GAAgB,IAAdrF,EAAa,EAAbA,OACRkD,EAAoB9I,qBAAWL,GAA/BmJ,gBAEFlI,EAAU,WACdkI,EAAgB,KAAM,mBAGxB,OACE,yBAAKpI,UAAS,uBAAoC,IAAlBkF,EAAO5C,QAAgB,QACrD,uBAAGtC,UAAU,qBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,wBAAf,UAIEkF,EAAO7D,IAAI,SAAA+D,GAAC,OACV,kBAACoF,EAAD,CAAWjJ,IAAK6D,EAAGL,MAAOK,EAAGlF,QAASA,MAG1C,yBAAKF,UAAU,iDAAiDE,QAASA,GACvE,uBAAGF,UAAU,4B,mOCpBvB,IAsEeyK,EAtEK,WAAO,IAAD,EAC+BnL,qBAAWL,GAA1DQ,EADgB,EAChBA,eAAgBmF,EADA,EACAA,cAAe8F,EADf,EACeA,YAC/BC,EAAerL,qBAAWH,GAA1BwL,WAFgB,EAIAnK,mBAAS,IAJT,mBAIjByC,EAJiB,KAIXC,EAJW,OAKU1C,oBAAS,GALnB,mBAKjBoK,EALiB,KAKNC,EALM,KAOxBtH,oBAAU,WACRmH,EAAY9C,MAAQ1E,EAAQwH,EAAY9C,OAEvC,IAEH,IAgBMkD,EAAS,WACb,GAAG7H,IAASyH,EAAY9C,KAAM,CAC5B,IAAMmD,E,qVAAO,IACRL,EADQ,CAEX9C,KAAM3E,IAER0H,EAAWlL,EAAgBmF,EAAe8F,EAAYtK,GAAI2K,GAG5DF,GAAa,IAGf,OACE,yBAAK7K,UAAU,gBACb,uBAAGA,UAAU,4BACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,wBAAf,eAGA,yBAAKA,UAAS,uBAAkB4K,GAAa,OAAS1K,QAnC1C,WAChB2K,GAAa,KAmCL5H,GAAc,iCAElB,yBAAKjD,UAAS,qCAAgC4K,GAAa,QACzD,8BACE/B,YAAY,oBACZ7I,UAAU,qBACV6D,MAAOZ,EACPW,SAvCO,SAAC9B,GAChBoB,EAAQpB,EAAEC,OAAO8B,QAuCTC,OApCK,WACbgH,OAqCM,yBAAK9K,UAAU,oBAAoBE,QAAS4K,GAA5C,QAGA,yBAAK9K,UAAU,2BAA2BE,QArCjC,WACf2K,GAAa,KAoCP,Y,mOC7DV,IAgDeG,EAhDO,SAAC,GAA8B,IAA5B9E,EAA2B,EAA3BA,KAAM+E,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAAe,EAC+B5L,qBAAWL,GAApFQ,EAD0C,EAC1CA,eAAgBmF,EAD0B,EAC1BA,cAAe8F,EADW,EACXA,YAAatC,EADF,EACEA,gBAAiB+C,EADnB,EACmBA,QAC7DR,EAAerL,qBAAWH,GAA1BwL,WA6BDS,EAAS,CACdC,eAAgBnF,EAAKmB,KAAO,eAAiB,QAG/C,OACE,yBAAKrH,UAAS,yBAAqBkL,GAAYhF,EAAKmB,MAAS,QAC3D,2BAAOlH,KAAK,WAAWmL,eAAgBpF,EAAKmB,KAAMzD,SAjCrC,WACf,IAAMmH,E,qVAAO,IACRL,EADQ,CAEX3D,WAAY2D,EAAY3D,WAAW1F,IAAI,SAAA4F,GASrC,OARGA,EAAE7G,KAAO6K,IACVhE,EAAEC,MAAQD,EAAEC,MAAM7F,IAAI,SAAA8F,GAIpB,OAHGA,EAAE/G,KAAO8F,EAAK9F,KACf8F,EAAKmB,MAAQnB,EAAKmB,MAEbF,KAGJF,MAIX0D,EAAWlL,EAAgBmF,EAAe8F,EAAYtK,GAAI2K,IAiBc/K,UAAU,cAChF,yBAAKC,MAAOmL,EAAQpL,UAAU,iBAC1BkG,EAAKjD,MAET,yBAAKjD,UAAU,8BAA8BE,QAlBxB,WACvBkI,EAAgB,KAAM,wBACtB+C,EAAQ,CACNjF,OACAqF,YAAaN,MAeX,uBAAGjL,UAAU,yB,mjBCxCrB,IA4IewL,EA5IG,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACXd,EAAerL,qBAAWH,GAA1BwL,WAD2B,EAE8DrL,qBAAWL,GAApGQ,EAF2B,EAE3BA,eAAgBmF,EAFW,EAEXA,cAAe8F,EAFJ,EAEIA,YAAarE,EAFjB,EAEiBA,eAAgB+B,EAFjC,EAEiCA,gBAAiB+C,EAFlD,EAEkDA,QAFlD,EAIX3K,mBAAS,IAJE,mBAI5ByC,EAJ4B,KAItBC,EAJsB,OAKH1C,oBAAS,GALN,mBAK5ByI,EAL4B,KAKlBC,EALkB,KA2C7BwC,EAAY,WAChB,GAAY,KAATzI,EAAa,CACd,IAAM0I,EAAU,CACd1I,OACA7C,GAAIoC,MACJ6E,MAAM,GAGF0D,EAAO,KACRL,EADQ,CAEX3D,WAAY2D,EAAY3D,WAAW1F,IAAI,SAAA4F,GAIrC,OAHGA,EAAE7G,KAAOqL,EAAUrL,KACpB6G,EAAEC,MAAF,sBAAcD,EAAEC,OAAhB,CAAuByE,KAElB1E,MAIX0D,EAAWlL,EAAgBmF,EAAe8F,EAAYtK,GAAI2K,GAC1D1E,EAAe0E,GACf7H,EAAQ,MAIN0I,EAAmB,WACvB,IAAI9E,EAAM,EAQV,OANA2E,EAAUvE,MAAMF,QAAQ,SAAAG,GACnBA,EAAEE,MACHP,MAIGA,GAGH+E,EAAW,CACfjF,MAAM,GAAD,OAAKkF,KAAKC,MAAMH,IAAqBH,EAAUvE,MAAM5E,OAAS,KAA9D,MAGP,OACE,6BACE,yBAAKtC,UAAU,mBACb,2BAAKyL,EAAU1K,OACf,yBAAKf,UAAU,eACb,yBACEA,UAAS,oCAAsD,IAAvB4L,KAA4B,OACpE1L,QApEe,WACvB,IAAM6K,EAAO,KACRL,EADQ,CAEX3D,WAAY2D,EAAY3D,WAAW1F,IAAI,SAAA4F,GAIrC,OAHGA,EAAE7G,KAAOqL,EAAUrL,KACpB6G,EAAEiE,UAAYjE,EAAEiE,UAEXjE,MAGX0D,EAAWlL,EAAgBmF,EAAe8F,EAAYtK,GAAI2K,KA2D9CU,EAAUP,SAAV,8BAC2BU,IAD3B,KAEI,wBAEV,yBAAK5L,UAAU,8BAA8BE,QA9EhC,WACnBkI,EAAgB,KAAM,mBACtB+C,EAAQM,EAAUrL,MA4EZ,YAKJ,yBAAKJ,UAAS,8BAAoD,IAA3ByL,EAAUvE,MAAM5E,QAAgB,QACrE,yBAAKtC,UAAU,cAAf,UACO8L,KAAKC,MAAMH,IAAqBH,EAAUvE,MAAM5E,OAAS,KADhE,MAGA,yBAAKtC,UAAU,gBACb,yBAAKC,MAAO4L,EAAU7L,UAAU,eAGpC,yBAAKA,UAAS,0BAAqByL,EAAUP,UAAYU,MAAuBH,EAAUvE,MAAM5E,SAAW,QAA3G,6CAGA,yBAAKtC,UAAU,MAEXyL,EAAUvE,MAAM7F,IAAI,SAAA8F,GAAC,OACnB,kBAAC,EAAD,CAAe5F,IAAK4F,EAAE/G,GAAI8F,KAAMiB,EAAG8D,KAAMQ,EAAUrL,GAAI8K,SAAUO,EAAUP,cAIjF,yBAAKlL,UAAS,WAAMiJ,GAAY,QAC9B,2BACE9I,KAAK,OACLH,UAAU,wBACV6I,YAAY,cACZhF,MAAOZ,EACPc,QAjHQ,SAACjC,GACE,KAAdA,EAAEkC,SACH0H,KAgHI9H,SAtHS,SAAC9B,GAChBoB,EAAQpB,EAAEC,OAAO8B,UAsHb,yBAAK7D,UAAU,kBAAkBE,QAASwL,GAA1C,OAGA,yBAAK1L,UAAU,yBAAyBE,QA1F1B,WAClBgJ,GAAY,KAyFR,SAIF,yBAAKlJ,UAAS,yBAAoBiJ,GAAY,OAAS/I,QAlGxC,WACjBgJ,GAAY,KAiGV,iBCzHS8C,EAfI,SAAC,GAAoB,IAAlBjF,EAAiB,EAAjBA,WACpB,OACE,yBAAK/G,UAAS,uBAAwC,IAAtB+G,EAAWzE,QAAgB,QACzD,uBAAGtC,UAAU,8BACb,yBAAKA,UAAU,QAEX+G,EAAW1F,IAAI,SAAA4F,GAAC,OACd,kBAAC,EAAD,CAAW1F,IAAK0F,EAAE7G,GAAIqL,UAAWxE,S,4NCL7C,IAmFegF,EAnFW,WAAO,IAAD,EACyD3M,qBAAWL,GAA1FQ,EADsB,EACtBA,eAAgBmF,EADM,EACNA,cAAe8F,EADT,EACSA,YAAYrE,EADrB,EACqBA,eAAgB+B,EADrC,EACqCA,gBAC3DuC,EAAerL,qBAAWH,GAA1BwL,WAoCR,OACE,yBAAK3K,UAAU,uBACb,iCACE,2CAGA,yBAAKE,QAxCU,WACnBkI,EAAgB,KAAM,oBAwChB,uBAAGpI,UAAU,eADf,SAIA,yBAAKE,QAxCW,WACpBkI,EAAgB,KAAM,aAwChB,uBAAGpI,UAAU,gBADf,WAIA,yBAAKE,QAxCc,WACvBkI,EAAgB,KAAM,kBAwChB,uBAAGpI,UAAU,wBADf,cAKF,iCACE,uCAGA,yBAAKE,QA7CS,WAClBkI,EAAgB,KAAM,cA6ChB,uBAAGpI,UAAU,uBADf,QAIA,yBAAKE,QA7CS,WAClBkI,EAAgB,KAAM,cA6ChB,uBAAGpI,UAAU,iBADf,QAIA,yBAAKE,QA7CU,WACnB,IAAM6K,E,qVAAO,IACRL,EADQ,CAEX7C,UAAW6C,EAAY7C,WAGzB8C,EAAWlL,EAAgBmF,EAAe8F,EAAYtK,GAAI2K,GAC1D1E,EAAe0E,IAsCiB/K,UAAU,WACpC,uBAAGA,UAAU,eADf,QAGE,uBAAGA,UAAS,wBAAmB0K,EAAY7C,UAAY,MAA3C,yDAEd,yBAAK3H,QAxCW,WACnBkI,EAAgB,KAAM,eAuCUpI,UAAU,eACrC,uBAAGA,UAAU,iBADf,aC5BOkM,EA3CM,WACnB,IAAM7M,EAAcC,qBAAWL,GACzBM,EAAeD,qBAAWH,GAExBM,EAA0EJ,EAA1EI,eAAgBmF,EAA0DvF,EAA1DuF,cAAe8F,EAA2CrL,EAA3CqL,YAAahL,EAA8BL,EAA9BK,SAAU0I,EAAoB/I,EAApB+I,gBACtD+D,EAAY5M,EAAZ4M,QAUR,OACE,yBAAKnM,UAAU,2BACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,gBAAgBE,QAXrB,WACdR,EAAS,SAUL,QAGA,uBAAGM,UAAU,wBACX0K,EAAYzH,KACd,yBAAKjD,UAAU,mBAAf,eACc,yBAAKE,QAbJ,WACnBkI,EAAgB,KAAM,aAYuBpI,UAAU,yCAA0CmM,EAAQ1M,EAAgBmF,GAAe7D,OAClI,uBAAGf,UAAS,sBAAiB0K,EAAY7C,UAAY,WAGzD,yBAAK7H,UAAU,+BAEb,6BACE,kBAAC,EAAD,CAAQkF,OAAQwF,EAAYxF,SAE5B,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAY6B,WAAY2D,EAAY3D,cAGtC,kBAAC,EAAD,S,4NCvCR,IAmHeqF,EAnHO,WACpB,IAAMC,EAAcjG,iBAAO,MADD,EAWV9G,qBAAWL,GAPzBQ,EAJwB,EAIxBA,eACAmF,EALwB,EAKxBA,cACA0H,EANwB,EAMxBA,iBACA5B,EAPwB,EAOxBA,YACA6B,EARwB,EAQxBA,iBACAnE,EATwB,EASxBA,gBACA1I,EAVwB,EAUxBA,SACAsF,EAXwB,EAWxBA,UACM2F,EAAerL,qBAAWH,GAA1BwL,WAZkB,EAcFnK,mBAAS,IAdP,mBAcnByC,EAdmB,KAcbC,EAda,KAgB1BK,oBAAU,WACRL,EAAQwH,EAAYzH,MACpBoJ,EAAY7F,QAAQ9C,SAEnB,IAEH,IAAM8I,EAAW,CACfC,SAAU,WACVhG,IAAK6F,EAAiB7F,IAAM,KAC5BE,KAAM2F,EAAiB3F,KAAO,MAG1B+F,EAAa,CACjB9F,MAAO0F,EAAiB1F,MAAQ,MAa5B+F,EAAW,WACf,IAAM5B,E,qVAAO,IACRL,EADQ,CAEXzH,SAEF0H,EAAWlL,EAAgBmF,EAAe8F,EAAYtK,GAAI2K,GAC1DwB,IACA7M,EAAS,QAaX,OACE,yBAAKO,MAAOuM,EAAUxM,UAAU,iCAC9B,yBAAKC,MAAOyM,EAAY1M,UAAU,mCAChC,yBAAKA,UAAU,yBACb,kBAAC,EAAD,CAAgByF,OAAO,gBAAgBT,UAAWA,EAAWE,OAAQwF,EAAYxF,SACjF,8BACEoC,IAAK+E,EACLrM,UAAU,mBACV6D,MAAOZ,EACPW,SAvCO,SAAC9B,GAChBoB,EAAQpB,EAAEC,OAAO8B,QAuCTE,QApCM,SAACjC,GACE,KAAdA,EAAEkC,SACH2I,QAqCE,yBAAK3M,UAAU,qBAAqBE,QAASyM,GAA7C,SAIF,yBAAK3M,UAAU,mCAAmCE,QA3BhC,SAAC4B,GAClBA,EAAEC,OAAOC,UAAUC,SAAS,OAC7BmG,EAAgB,KAAMtG,EAAEC,OAAOwF,cAAcnH,IACrC0B,EAAEC,OAAOC,UAAUC,SAAS,mBACpCmG,EAAgB,KAAMtG,EAAEC,OAAO3B,IAE/BV,EAAS,SAsBP,yBAAKM,UAAU,0BACb,yBAAKA,UAAU,6CAA6CI,GAAG,kBAC7D,uBAAGJ,UAAU,kBADf,gBAKF,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,6CAA6CI,GAAG,WAC7D,uBAAGJ,UAAU,mBADf,mBAKF,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,6CAA6CI,GAAG,YAC7D,uBAAGJ,UAAU,0BADf,SAKF,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,6CAA6CI,GAAG,YAC7D,uBAAGJ,UAAU,oBADf,SAKF,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,6CAA6CI,GAAG,cAC7D,uBAAGJ,UAAU,oBADf,mBC3DK4M,EA5CD,WACZ,IAAMvN,EAAcC,qBAAWL,GAEvB4N,EAAqCxN,EAArCwN,YAAaC,EAAwBzN,EAAxByN,UAAWpN,EAAaL,EAAbK,SAHd,EAKgBc,mBAAS,OALzB,mBAKXuM,EALW,KAKAC,EALA,KAOlBzJ,oBAAU,WACRyJ,EAAaH,IAEZ,CAACA,IAEJ,IAMMI,EAAa,WACjBvN,EAAS,QAGLwN,EAAe,CACnBrH,QAAuB,OAAdkH,EAAqB,QAAU,QAG1C,OACE,yBACE9M,MAAOiN,EACPlN,UAAU,QACVE,QAlBY,SAAC4B,GACZA,EAAEC,OAAOC,UAAUC,SAAS,UAC7BgL,MAkBgB,kBAAdH,GAAiC,kBAAC,EAAD,MAGnB,iBAAdA,GAAgC,kBAAC,EAAD,MAGlB,kBAAdA,GAAiC,kBAAC,EAAD,QChB1BK,EAzBI,WAAO,IAAD,EAC2D7N,qBAAWL,GAArFQ,EADe,EACfA,eAAgBmF,EADD,EACCA,cAAe8F,EADhB,EACgBA,YAAahL,EAD7B,EAC6BA,SAAU0I,EADvC,EACuCA,gBACtDgF,EAAe9N,qBAAWH,GAA1BiO,WACAxL,EAAatC,qBAAWkC,GAAxBI,SASR,OACE,6BACE,yBAAK5B,UAAU,kBAAf,4DAIA,yBAAKA,UAAU,qDAAqDE,QAbxD,WACdkN,EAAW3N,EAAgBmF,EAAe8F,EAAYtK,IACtDV,EAAS,OACT0I,EAAgB,OAChBxG,EAAS,eAAgB,UASvB,YCiFSyL,EAnGE,WACf,IAAMC,EAAelH,iBAAO,MACtBmH,EAAanH,iBAAO,MACpBoH,EAAYpH,iBAAO,MAHJ,EAKiB5F,mBAAS,IAL1B,mBAKdiN,EALc,KAKDC,EALC,OAMelN,mBAAS,IANxB,mBAMdmN,EANc,KAMFC,EANE,OAOSpN,mBAAS,GAPlB,mBAOdqN,EAPc,KAOLC,EAPK,OASwExO,qBAAWL,GAAhGQ,EATa,EASbA,eAAgBmF,EATH,EASGA,cAAe8F,EATlB,EASkBA,YAAaoC,EAT/B,EAS+BA,UAAWpN,EAT1C,EAS0CA,SAAU0I,EATpD,EASoDA,gBATpD,EAU2B9I,qBAAWH,GAAnDiC,EAVa,EAUbA,OAAQzB,EAVK,EAULA,SAAUwM,EAVL,EAUKA,QAAS4B,EAVd,EAUcA,SAC3BnM,EAAatC,qBAAWkC,GAAxBI,SAER2B,oBAAU,WACRmK,EAAejO,GACfmO,EAAchJ,GACdkJ,EAAW3B,EAAQ1M,EAAgBmF,GAAesC,MAAM8G,UAAU,SAAA7G,GAAC,OAAIA,EAAE/G,KAAOsK,EAAYtK,KAAM,IAEjG,CAACX,EAAgBmF,IAwBpB,OACE,yBAAK5E,UAAU,2BAEb,iCACE,yBAAKA,UAAU,KAAf,SAGA,4BAAQsH,IAAKgG,EAAczJ,MAAO4J,EAAa7J,SA7B3B,SAAC9B,GACzB4L,EAAe5L,EAAEC,OAAO8B,OACxB+J,EAAcjO,EAASmC,EAAEC,OAAO8B,OAAOwF,MAAM,GAAGjJ,KA2BgCJ,UAAU,MAElFoB,EAAOC,IAAI,SAAAf,GAAK,OACS,IAAvBA,EAAM+I,MAAM/G,QACZ,4BAAQf,IAAKjB,EAAMF,GAAIyD,MAAOvD,EAAMF,IAAME,EAAMS,MAAST,EAAMF,KAAOX,GAAkB,kBAMhG,iCACE,yBAAKO,UAAU,KAAf,QAGA,4BAAQsH,IAAKiG,EAAY1J,MAAO8J,EAAY/J,SAtCzB,SAAC9B,GACxB8L,EAAc9L,EAAEC,OAAO8B,QAqCqD7D,UAAU,MAE9EyN,GAAe9N,EAAS8N,GAAapE,MAAMhI,IAAI,SAAC4G,EAAMW,GAAP,OAC7C,4BAAQrH,IAAK0G,EAAK7H,GAAIyD,MAAOoE,EAAK7H,IAAM6H,EAAKlH,MAASkH,EAAK7H,KAAOwE,GAAiB,iBAM3F,iCACE,yBAAK5E,UAAU,KAAf,YAGA,4BAAQsH,IAAKkG,EAAW3J,MAAOgK,EAASjK,SA/CtB,SAAC9B,GACvBgM,EAAWG,OAAOnM,EAAEC,OAAO8B,OAAS,IA8CmC7D,UAAU,MAEzEyN,GACKE,GACExB,EAAQsB,EAAaE,GAAYzG,MAAM7F,IAAI,SAAC6E,EAAM0C,GAAP,OAC1C,4BAAQrH,IAAK2E,EAAK9F,GAAIyD,MAAO+E,EAAQ,GAAKA,EAAQ,EAAK1C,EAAK9F,KAAOsK,EAAYtK,IAAM,gBAI7FqN,GACKE,GACGA,IAAe/I,GACb,4BAAQf,MAAOsI,EAAQsB,EAAaE,GAAYzG,MAAM5E,OAAS,GAAK6J,EAAQsB,EAAaE,GAAYzG,MAAM5E,OAAS,KAIpI,yBAAKtC,UAAU,kBAAkBE,QA3DtB,WACb6N,EAAStO,EAAgBmF,EAAe8F,EAAYtK,GAAIqN,EAAaE,EAAYE,EAASnD,GAC1FtC,EAAgB,OACC,kBAAd0E,GACDpN,EAAS,OAEXkC,EAAS,iBAAkB,aAqDzB,U,4NC5FN,IAwCesM,EAxCM,WAAO,IAAD,EAC+D5O,qBAAWL,GAA3FQ,EADiB,EACjBA,eAAgBmF,EADC,EACDA,cAAe8F,EADd,EACcA,YAAarE,EAD3B,EAC2BA,eAAgB+B,EAD3C,EAC2CA,gBAC5DuC,EAAerL,qBAAWH,GAA1BwL,WAFiB,EAIDnK,mBAAS,aAJR,mBAIlByC,EAJkB,KAIZC,EAJY,KA8BzB,OACE,6BACE,2BAAOW,MAAOZ,EAAMW,SA1BP,SAAC9B,GAChBoB,EAAQpB,EAAEC,OAAO8B,QAyByB1D,KAAK,OAAOH,UAAU,kBAC9D,yBAAKA,UAAU,uBAAuBE,QAvB5B,WACZ,IAAMiO,EAAe,CACnBpN,MAAOkC,EACP7C,GAAIoC,MACJ0I,UAAU,EACVhE,MAAO,IAGH6D,E,qVAAO,IACRL,EADQ,CAEX3D,WAAW,GAAD,mBAAM2D,EAAY3D,YAAlB,CAA8BoH,MAG1CxD,EAAWlL,EAAgBmF,EAAe8F,EAAYtK,GAAI2K,GAE1D1E,EAAe0E,GAEf3C,EAAgB,SAMd,S,6NClCN,IA8BegG,GA9BS,WAAO,IAAD,EACkE9O,qBAAWL,GAAjGQ,EADoB,EACpBA,eAAgBmF,EADI,EACJA,cAAe8F,EADX,EACWA,YAAarE,EADxB,EACwBA,eAAgB+B,EADxC,EACwCA,gBAAiBiG,EADzD,EACyDA,KAC7E1D,EAAerL,qBAAWH,GAA1BwL,WAgBR,OACE,6BACE,yBAAK3K,UAAU,aAAf,mDAGA,yBAAKA,UAAU,8BAA8BE,QAnBjC,WACd,IAAMoO,EAAsB5D,EAAY3D,WAAW5B,OAAO,SAAAC,GAAC,OAAIA,EAAEhF,KAAOiO,IAElEtD,E,uVAAO,IACRL,EADQ,CAEX3D,WAAYuH,IAGd3D,EAAWlL,EAAgBmF,EAAe8F,EAAYtK,GAAI2K,GAC1D1E,EAAe0E,GAEf3C,EAAgB,SAQd,sB,6NCvBN,IAqCemG,GArCc,WAAO,IAAD,EAC8CjP,qBAAWL,GAAlFQ,EADyB,EACzBA,eAAgBmF,EADS,EACTA,cAAe8F,EADN,EACMA,YAAatC,EADnB,EACmBA,gBAAkBiG,EADrC,EACqCA,KADrC,EAED/O,qBAAWH,GAAnCuJ,EAFyB,EAEzBA,QAASiC,EAFgB,EAEhBA,WAEX6D,EAAW,WACf,IAAMzD,E,uVAAO,IACRL,EADQ,CAEX3D,WAAY2D,EAAY3D,WAAW1F,IAAI,SAAA4F,GAIrC,OAHGA,EAAE7G,KAAOiO,EAAK9C,cACftE,EAAEC,MAAQD,EAAEC,MAAM/B,OAAO,SAAAgC,GAAC,OAAIA,EAAE/G,KAAOiO,EAAKnI,KAAK9F,MAE5C6G,MAIX0D,EAAWlL,EAAgBmF,EAAe8F,EAAYtK,GAAI2K,GAC1D3C,EAAgB,QASlB,OACE,6BACE,yBAAKpI,UAAU,mBAAmBE,QARd,WACtBsO,IACA9F,EAAQ2F,EAAKnI,KAAKjD,KAAM2B,EAAenF,GACvC2I,EAAgB,SAKd,mBAGA,yBAAKpI,UAAU,mBAAmBE,QAASsO,GAA3C,YCQSC,GAzCW,SAAC,GAAuD,IAArD1J,EAAoD,EAApDA,MAAO2J,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,cAAejE,EAAkB,EAAlBA,YAAkB,EACrDlK,oBAAS,GAD4C,mBACxEkF,EADwE,KACjEC,EADiE,KAmB/E,OACE,yBAAK3F,UAAU,2BACb,yBACEA,UAAS,2DAAsD+E,EAAMM,UAA5D,YAAyEK,GAAK,sBAAmBX,EAAMM,UAAzB,WACvFxE,aAhBe,WACnB8E,GAAS,IAgBL7E,aAbe,WACnB6E,GAAS,IAaLzF,QAtBU,WACdwO,EAAW3J,EAAM3E,OAuB+B,IAA1CsK,EAAYxF,OAAO0J,QAAQ7J,EAAM3E,KAC5B,uBAAGJ,UAAU,0DAEpB,yBAAKA,UAAU,0CACI,KAAf+E,EAAMO,MAAeP,EAAMO,OAGjC,yBAAKtF,UAAU,+CAA+CE,QAnB/C,WACjByO,EAAc5J,KAmBV,uBAAG/E,UAAU,0B,ujBC9BrB,IAqDe6O,GArDQ,WAAO,IAAD,EACkFvP,qBAAWL,GAAhHQ,EADmB,EACnBA,eAAgBmF,EADG,EACHA,cAAe8F,EADZ,EACYA,YAAarE,EADzB,EACyBA,eAAgB+B,EADzC,EACyCA,gBAAiB0G,EAD1D,EAC0DA,oBAD1D,EAEIxP,qBAAWH,GAAlCwL,EAFmB,EAEnBA,WAAYzF,EAFO,EAEPA,OAGd6J,EAAW,SAAC3O,GAChB,IAAI2K,EAGFA,GAFqC,IAApCL,EAAYxF,OAAO0J,QAAQxO,GAErB,MACFsK,EADE,CAELxF,OAAO,GAAD,mBAAMwF,EAAYxF,QAAlB,CAA0B9E,MAI3B,MACFsK,EADE,CAELxF,OAAQwF,EAAYxF,OAAOC,OAAO,SAAAC,GAAC,OAAIA,IAAMhF,MAIjDuK,EAAWlL,EAAgBmF,EAAe8F,EAAYtK,GAAI2K,GAC1D1E,EAAe0E,IAGX4D,EAAgB,SAAC5J,GACrB+J,EAAoB,KAAM,iBAAkB,CAAC/J,QAAO5E,KAAM,SAC1DiI,EAAgB,KAAM,cAQxB,OACE,6BACE,2BAAOjI,KAAK,OAAO0I,YAAY,mBAAmB7I,UAAU,sBAC5D,yBAAKA,UAAU,cAAf,UAIEkF,EAAO7D,IAAI,SAAA+D,GAAC,OACV,kBAAC,GAAD,CAAmB7D,IAAK6D,EAAEhF,GAAI2E,MAAOK,EAAGuJ,cAAeA,EAAeD,WAAYK,EAAUrE,YAAaA,MAG7G,yBAAK1K,UAAU,mCAAmCE,QAhBhC,WACpB4O,EAAoB,KAAM,iBAAkB,CAAC3O,KAAM,WACnDiI,EAAgB,KAAM,eAcpB,sB,6NC9CN,IAgHe4G,GAhHG,WAAO,IAAD,EACExO,mBAAS,IADX,mBACfyC,EADe,KACTC,EADS,OAEY1C,mBAAS,MAFrB,mBAEf6E,EAFe,KAEJ4J,EAFI,OAWW3P,qBAAWL,GAN1CmJ,EALoB,EAKpBA,gBACA0G,EANoB,EAMpBA,oBACApE,EAPoB,EAOpBA,YACAjL,EARoB,EAQpBA,eACAmF,EAToB,EASpBA,cACAyB,EAVoB,EAUpBA,eACsBgI,EAXF,EAWpBa,qBAXoB,EAYqD5P,qBAAWH,GAA9E+F,EAZc,EAYdA,OAAQiK,EAZM,EAYNA,OAAQxE,EAZF,EAYEA,WAAYyE,EAZd,EAYcA,SAAUC,EAZxB,EAYwBA,YAAaC,EAZrC,EAYqCA,YACnD1N,EAAatC,qBAAWkC,GAAxBI,SAER2B,oBAAU,WACM,SAAd8K,EAAKlO,MAAmB+C,EAAQmL,EAAKtJ,MAAMO,MAC7B,SAAd+I,EAAKlO,KAAkB8O,EAAaZ,EAAKtJ,MAAMM,WAAa4J,EAAa,UAExE,IAEH,IAIMM,EAAe,SAACzN,GACpBmN,EAAanN,EAAEC,OAAO3B,KAgDxB,OACE,6BACE,2BAAOD,KAAK,OAAOH,UAAU,gBAAgB6D,MAAOZ,EAAM4F,YAAY,mBAAmBjF,SAvD5E,SAAC9B,GAChBoB,EAAQpB,EAAEC,OAAO8B,UAuDf,yBAAK7D,UAAU,iBAAf,gBAGA,yBAAKA,UAAU,MAEXmP,EAAO9N,IAAI,SAAAvB,GAAK,OACd,yBAAKyB,IAAKzB,EAAMwF,KAAMrF,MAAO,CAAEJ,WAAYC,EAAMA,OAASE,UAAU,iCAAiCI,GAAIN,EAAMwF,KAAMpF,QAASqP,GAE1HzP,EAAMwF,OAASD,GACV,uBAAGrF,UAAU,4CAM5B,6BACE,yBAAKA,UAAU,kBAAkBE,QAhExB,WACb,GAAiB,SAAdmO,EAAKlO,KACNkP,EAAYpM,EAAMoC,EAAWgJ,EAAKtJ,MAAM3E,IACxCgI,EAAgB,KAAM,kBACtB0G,EAAoB,OACpBlN,EAAS,gBAAiB,gBACrB,GAAiB,WAAdyM,EAAKlO,KAAmB,CAChC,IAAIqP,GAAK,EAUT,GARAtK,EAAO8B,QAAQ,SAAAjC,GACVA,EAAMM,YAAcA,GAClBN,EAAMO,OAASrC,IAChBuM,GAAK,KAKPA,EAaF5N,EAAS,sBAAuB,aAb1B,CACN,IAAM6N,EAAQjN,MAEd4M,EAASnM,EAAMoC,EAAWoK,GAC1B,IAAM1E,E,uVAAO,IACRL,EADQ,CAEXxF,OAAO,GAAD,mBAAMwF,EAAYxF,QAAlB,CAA0BuK,MAGlC9E,EAAWlL,EAAgBmF,EAAe8F,EAAYtK,GAAI2K,GAC1D1E,EAAe0E,GACfnJ,EAAS,gBAAiB,WAK5BwG,EAAgB,KAAM,kBACtB0G,EAAoB,UAgCA,SAAdT,EAAKlO,KACD,OACA,UAIQ,SAAdkO,EAAKlO,MACC,yBAAKH,UAAU,6BAA6BE,QAnCzC,WACfoP,EAAYjB,EAAKtJ,MAAM3E,IACvBgI,EAAgB,KAAM,kBACtB0G,EAAoB,OACpBlN,EAAS,gBAAiB,UA+Bd,aCnBD8N,GArFK,WAAO,IAAD,EAOpBpQ,qBAAWL,GALbQ,EAFsB,EAEtBA,eACAmF,EAHsB,EAGtBA,cACAwD,EAJsB,EAItBA,gBACA0G,EALsB,EAKtBA,oBACAa,EANsB,EAMtBA,0BANsB,EAQmBrQ,qBAAWH,GAA9CgN,EARgB,EAQhBA,QAASyD,EARO,EAQPA,YAAaC,EARN,EAQMA,SAyC9B,OACE,6BACE,yBAAK7P,UAAU,mBAAmBE,QAzCb,WACvByP,EAA0B/K,GAC1BwD,EAAgB,SAuCd,eAGA,yBAAKpI,UAAU,mBAAmBE,QAvChB,WACpBkI,EAAgB,KAAM,YACtB0G,EAAoB,KAAM,iBAqCxB,aAGA,yBAAK9O,UAAU,mBAAmBE,QArChB,WACpBkI,EAAgB,KAAM,YACtB0G,EAAoB,KAAM,iBAmCxB,aAGA,yBAAK9O,UAAU,mBAAmBE,QAnCf,WACrB0P,EAAYnQ,EAAgBmF,KAkC1B,QAGIuH,EAAQ1M,EAAgBmF,GAAeiD,UAClC,uBAAG7H,UAAU,6BAGtB,6BACA,yBAAKA,UAAU,mBAAmBE,QAvCR,WAC5BkI,EAAgB,KAAM,gBACtB0G,EAAoB,KAAM,iBAqCxB,+BAGA,yBAAK9O,UAAU,mBAAmBE,QArChB,WACpB2P,EAASpQ,EAAgBmF,GACzBwD,EAAgB,SAmCd,WAGA,6BACA,yBAAKpI,UAAU,+BAA+BE,QApClB,WAC9BkI,EAAgB,KAAM,kBACtB0G,EAAoB,KAAM,iBAkCxB,iCAGA,yBAAK9O,UAAU,+BAA+BE,QAlC1B,WACtBkI,EAAgB,KAAM,cACtB0G,EAAoB,KAAM,iBAgCxB,sBCrDSgB,GAxBI,WAAO,IAChBC,EAAezQ,qBAAWH,GAA1B4Q,WACAnO,EAAatC,qBAAWkC,GAAxBI,SAFe,EAGoCtC,qBAAWL,GAA9DQ,EAHe,EAGfA,eAAgBmF,EAHD,EAGCA,cAAewD,EAHhB,EAGgBA,gBAQvC,OACE,6BACE,yBAAKpI,UAAU,eAAf,oCAIA,yBAAKA,UAAU,2BAA2BE,QAZ9B,WACd6P,EAAWtQ,EAAgBmF,GAC3BwD,EAAgB,OAChBxG,EAAS,eAAgB,UASvB,YCgBSoO,GAlCE,WAAO,IAAD,EACGxP,mBAAS,IADZ,mBACd8E,EADc,KACR2K,EADQ,OAGsC3Q,qBAAWL,GAA9DQ,EAHa,EAGbA,eAAgBmF,EAHH,EAGGA,cAAewD,EAHlB,EAGkBA,gBAHlB,EAIS9I,qBAAWH,GAAjCgN,EAJa,EAIbA,QAAS+D,EAJI,EAIJA,SAEjB3M,oBAAU,WACR0M,EAAQ9D,EAAQ1M,EAAgBmF,GAAe7D,QAE9C,IAYH,OACE,6BACE,yBAAKf,UAAU,WAAf,QAGA,2BAAOG,KAAK,OAAOH,UAAU,iBAAiB6D,MAAOyB,EAAM1B,SAV9C,SAAC9B,GAChBmO,EAAQnO,EAAEC,OAAO8B,UAUf,yBAAK7D,UAAU,uBAAuBE,QAhB1B,WACdgQ,EAASzQ,EAAgBmF,EAAeU,GACxC8C,EAAgB,SAcd,eCyCS+H,GApEE,WACf,IAAM7C,EAAelH,iBAAO,MACtBgK,EAAYhK,iBAAO,MAFJ,EAIiB5F,mBAAS,MAJ1B,mBAIdiN,EAJc,KAIDC,EAJC,OAKQlN,mBAAS,GALjB,mBAKd6P,EALc,KAKNvC,EALM,OAOsCxO,qBAAWL,GAA9DQ,EAPa,EAObA,eAAgBmF,EAPH,EAOGA,cAAewD,EAPlB,EAOkBA,gBAPlB,EAQkB9I,qBAAWH,GAA1CiC,EARa,EAQbA,OAAQzB,EARK,EAQLA,SAAU2Q,EARL,EAQKA,SAE1B/M,oBAAU,WACRmK,EAAejO,GACfqO,EAAWnO,EAASF,GAAgB4J,MAAM2E,UAAU,SAAA5I,GAAC,OAAIA,EAAEhF,KAAOwE,IAAiB,GACnF0I,EAAa9G,QAAQ3C,MAAQpE,GAE5B,CAACA,EAAgBmF,IAepB,OACE,yBAAK5E,UAAU,2BACb,iCACE,yBAAKA,UAAU,KAAf,SAGA,4BAAQsH,IAAKgG,EAAc1J,SAnBP,SAAC9B,GACzB4L,EAAe5L,EAAEC,OAAO8B,QAkBoC7D,UAAU,MAE9DoB,EAAOC,IAAI,SAAAf,GAAK,OACd,4BAAQiB,IAAKjB,EAAMF,GAAIyD,MAAOvD,EAAMF,IAAME,EAAMS,MAAST,EAAMF,KAAOX,GAAkB,kBAKhG,iCACE,yBAAKO,UAAU,KAAf,YAGA,4BAAQsH,IAAK8I,EAAWvM,MAAOwM,EAAQzM,SA3BpB,SAAC9B,GACxBgM,EAAWG,OAAOnM,EAAEC,OAAO8B,OAAS,IA0BmC7D,UAAU,MAEzEyN,GAAe9N,EAAS8N,GAAapE,MAAMhI,IAAI,SAAC4G,EAAMW,GAAP,OAC7C,4BAAQrH,IAAK0G,EAAK7H,GAAIyD,MAAO+E,EAAQ,GAAKA,EAAQ,EAAKX,EAAK7H,KAAOwE,GAAiB,gBAItF6I,GACMA,IAAgBhO,GACjB,4BAAQoE,MAAOlE,EAAS8N,GAAapE,MAAM/G,OAAS,GAAK3C,EAAS8N,GAAapE,MAAM/G,OAAS,KAIzG,yBAAKtC,UAAU,kBAAkBE,QApCtB,WACboQ,EAAS7Q,EAAgBmF,EAAe6I,EAAa4C,GACrDjI,EAAgB,SAkCd,UCrBSmI,GAvCQ,WAAO,IAAD,EACgCjR,qBAAWL,GAA9DQ,EADmB,EACnBA,eAAgBmF,EADG,EACHA,cAAewD,EADZ,EACYA,gBADZ,EAES9I,qBAAWH,GAAvCgN,EAFmB,EAEnBA,QAASqE,EAFU,EAEVA,eACT5O,EAAatC,qBAAWkC,GAAxBI,SAwBR,OACE,6BACE,yBAAK5B,UAAU,KAAf,yDACwD,2BAAKmM,EAAQ1M,EAAgBmF,GAAe7D,OADpG,KAGA,yBAAKf,UAAU,gCAAgCE,QA3BnC,WACdkI,EAAgB,OAC2C,IAAxD+D,EAAQ1M,EAAgBmF,GAAesC,MAAM5E,QAC9CV,EAAS,2BAA4B,QACrC4O,EAAe/Q,EAAgBmF,KAE/BhD,EAAS,qBAAsB,UAAW,MAC1C6F,WAAW,WACT7F,EAAS,wBAAyB,QAAS,MAC3C6F,WAAW,WACT7F,EAAS,2BAA4B,UAAW,MAChD6F,WAAW,WACT7F,EAAS,kBAAmB,SAAU,MACtC6F,WAAW,WACT7F,EAAS,mCAAoC,SAAU,OACtD,OACF,OACF,OACF,SASH,sBCHS6O,GA9BM,WAAO,IAAD,EACkCnR,qBAAWL,GAA9DQ,EADiB,EACjBA,eAAgBmF,EADC,EACDA,cAAewD,EADd,EACcA,gBADd,EAEU9I,qBAAWH,GAAtCQ,EAFiB,EAEjBA,SAAU+Q,EAFO,EAEPA,aASlB,OACE,yBAAK1Q,UAAU,mBAAmBE,QARpB,SAAC4B,GACXA,EAAEC,OAAOC,UAAUC,SAAS,cAC9ByO,EAAajR,EAAgBmF,EAAe9C,EAAEC,OAAO3B,IACrDgI,EAAgB,UAOdzI,EAASF,GAAgB4J,MAAMhI,IAAI,SAAA4G,GACjC,OAAGA,EAAK7H,KAAOwE,EACN,yBAAKrD,IAAK0G,EAAK7H,GAAIA,GAAI6H,EAAK7H,GAAIJ,UAAU,0CACrCiI,EAAKlH,OAGV,yBAAKQ,IAAK0G,EAAK7H,GAAIA,GAAI6H,EAAK7H,GAAIJ,UAAU,oBACrCiI,EAAKlH,WCsHd4P,GA7HM,WACnB,IAAMC,EAAYxK,iBAAO,MAEnB/G,EAAcC,qBAAWL,GAG7B4R,EAMuBxR,EANvBwR,mBACAC,EAKuBzR,EALvByR,iBACAC,EAIuB1R,EAJvB0R,uBACAC,EAGuB3R,EAHvB2R,qBACAC,EAEuB5R,EAFvB4R,SACA7I,EACuB/I,EADvB+I,gBACA0G,EAAuBzP,EAAvByP,oBAZuB,EAcStO,mBAAS,OAdlB,mBAclBuM,EAdkB,KAcPC,EAdO,OAeHxM,mBAAS,IAfN,mBAelB0Q,EAfkB,KAebC,EAfa,KAiBzB5N,oBAAU,WACRyJ,EAAa6D,GACbO,KAEC,CAACP,EAAoBI,IAExB,IAWMhE,EAAa,WACjB7E,EAAgB,QAGZgJ,EAAgB,WACpB3J,WAAW,WAEP,IAAI4J,EADHJ,IAEDI,EAAOT,EAAUpK,QAAQE,wBAEtB8C,OAAOC,WAAawH,EAASK,EAAI,GAAKD,EAAKzK,OAAS4C,OAAO+H,YAAcN,EAASO,EAAIH,EAAKI,OAC5FN,EAAO,CACLO,MAAO,GACPjL,IAAKwK,EAASO,EAAI,GAAK,OAEjBhI,OAAO+H,YAAcN,EAASO,EAAI,GAAKH,EAAKI,QAAUjI,OAAOC,WAAawH,EAASK,EAAID,EAAKzK,MACpGuK,EAAO,CACLxK,KAAMsK,EAASK,EAAI,GAAK,KACxBK,OAAQ,KAEFnI,OAAO+H,YAAcN,EAASO,EAAI,GAAKH,EAAKI,QAAUjI,OAAOC,WAAawH,EAASK,EAAI,GAAKD,EAAKzK,MACvGuK,EAAO,CACPO,MAAO,GACPC,OAAQ,KAGVR,EAAO,CACLxK,KAAMsK,EAASK,EAAI,GAAK,KACxB7K,IAAKwK,EAASO,EAAI,GAAK,SAI5B,IAGCtE,EAAe,CACnBrH,QAAuB,OAAdkH,EAAqB,QAAU,QAG1C,OACE,yBACE9M,MAAOiN,EACP9M,GAAG,gBACHF,QAtDY,SAAC4B,GACI,kBAAhBA,EAAEC,OAAO3B,IACV6M,MAqDE,yBAAK3F,IAAKsJ,EAAW5Q,UAAU,0BAA0BC,MAAOiR,GAC9D,yBAAKlR,UAAU,wBAEgB,OAA3B+Q,GACK,yBAAK/Q,UAAU,yDAAyDE,QArD1E,WACbkI,EAAgB,KAAM4I,GACtBlC,EAAoB,SAoDF,uBAAG9O,UAAU,uBAGvB,yBAAKA,UAAU,QAAQE,QAAS+M,GAAhC,QAGuB,mBAArB6D,GAAyC,SACpB,cAArBA,GAAoC,aACf,aAArBA,GAAmC,YACd,aAArBA,GAAmC,YACd,YAArBA,GAAkC,UACb,iBAArBA,GAAuC,eAClB,oBAArBA,GAA0C,mBACrB,yBAArBA,GAA+C,eAC1B,eAArBA,GAAqC,eAChB,gBAArBA,GAAsC,eACjB,eAArBA,GAAqC,eAChB,aAArBA,GAAmC,YACd,aAArBA,GAAmC,YACd,mBAArBA,GAAyC,kBACpB,iBAArBA,GAAuC,gBAE3C,yBAAK9Q,UAAU,sBACU,mBAArB8Q,GAAyC,kBAAC,GAAD,MACpB,aAArBA,GAAmC,kBAAC,EAAD,MACd,iBAArBA,GAAuC,kBAAC,EAAD,MAClB,oBAArBA,GAA0C,kBAAC,GAAD,MACrB,yBAArBA,GAA+C,kBAAC,GAAD,MAC1B,eAArBA,GAAqC,kBAAC,EAAD,MAChB,cAArBA,GAAoC,kBAAC,GAAD,MACf,gBAArBA,GAAsC,kBAAC,GAAD,MACjB,eAArBA,GAAqC,kBAAC,GAAD,MAChB,aAArBA,GAAmC,kBAAC,GAAD,MACd,aAArBA,GAAmC,kBAAC,GAAD,MACd,mBAArBA,GAAyC,kBAAC,GAAD,MACpB,iBAArBA,GAAuC,kBAAC,GAAD,UCxHtCc,GAfG,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAI1B,OACE,yBACE5R,QALY,WACd4R,EAAYD,EAAMzR,KAKhBJ,UAAS,mDAA8C6R,EAAM1R,OAC3D,yBAAKH,UAAU,yBACX6R,EAAME,IAAI/Q,OAAO,GAAGC,cAAgB4Q,EAAME,IAAI7Q,MAAM,MCWjD8Q,GAjBA,WAAO,IAAD,EACa1S,qBAAWkC,GAAnCyQ,EADW,EACXA,OAAQH,EADG,EACHA,YAEhB,OACE,yBAAK9R,UAAU,yBAEXiS,EAAO5Q,IAAI,SAAA6Q,GAAC,OACV,kBAAC,GAAD,CACE3Q,IAAK2Q,EAAE9R,GACPyR,MAAOK,EACPJ,YAAaA,QCgDVK,I,YAlDH,WACV,IAAM9S,EAAcC,qBAAWL,GAG7BsB,EAGuBlB,EAHvBkB,kBACAd,EAEuBJ,EAFvBI,eACA2S,EACuB/S,EADvB+S,YACAvB,EAAuBxR,EAAvBwR,mBAGFtN,oBAAU,WACRhD,EAAkB,MAClBuH,QAAQC,IAAI,mBACZD,QAAQC,IAAI,uDACZD,QAAQC,IAAI,kDACZD,QAAQC,IAAI,qCACZD,QAAQC,IAAI,yHACZD,QAAQC,IAAI,+NACZD,QAAQC,IAAI,iBACZD,QAAQC,IAAI,+CACZD,QAAQC,IAAI,oBACZD,QAAQC,IAAI,2BACZD,QAAQuK,QACRvK,QAAQC,IAAI,yCAEX,IAQH,OACE,oCACA,yBAAK7H,QARS,SAAC4B,GACW,QAAvB+O,GACDuB,EAAYtQ,EAAEwQ,QAASxQ,EAAEyQ,UAMJnS,GAAG,eACxB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACGX,EAEG,kBAAC,EAAD,MADA,kBAAC,EAAD,U,ujBC/BG,gBAAC+S,EAAOC,GACrB,OAAQA,EAAOtS,MACb,ICxBqB,YDyBnB,OAAO,MACFqS,EADL,CAEEpR,OAAO,GAAD,mBAAMoR,EAAMpR,QAAZ,CAAoBqR,EAAOC,YAErC,IC3BqB,YD4BnB,OAAO,MACFF,EADL,CAEEG,OAAQH,EAAMpR,OAAOC,IAAI,SAAAC,GAIvB,OAHGA,EAAElB,KAAOqS,EAAOC,QAAQtS,KACzBkB,EAAEP,MAAQ0R,EAAOC,QAAQzP,MAEpB3B,MAGb,ICpCoB,WDqClB,OAAO,MACFkR,EADL,CAEEpR,OAAQoR,EAAMpR,OAAOC,IAAI,SAAAC,GAIvB,OAHGA,EAAElB,KAAOqS,EAAOC,QAAQtS,KACzBkB,EAAEY,SAAWZ,EAAEY,SAEVZ,IAETsR,uBAAwBH,EAAOC,QAAQG,4BAE3C,IC9CwB,eD+CtB,OAAO,MACFL,EADL,CAEEpR,OAAQoR,EAAMpR,OAAOC,IAAI,SAAAC,GASvB,OARGA,EAAElB,KAAOqS,EAAOC,QAAQ3P,SACzBzB,EAAE+H,MAAMhI,IAAI,SAAA+D,GAIV,OAHGA,EAAEhF,KAAOqS,EAAOC,QAAQhO,SACzBU,EAAEyC,UAAYzC,EAAEyC,UAEXzC,IAGJ9D,MAGb,IC5D2B,kBD6DzB,OAAO,MACFkR,EADL,CAEEpR,OAAQoR,EAAMpR,OAAOC,IAAI,SAAAC,GAIvB,OAHGA,EAAElB,KAAOqS,EAAOC,QAAQtS,KACzBkB,EAAEkD,YAAciO,EAAOC,QAAQzP,MAE1B3B,MAGb,ICrEoB,WDsElB,OAAO,MACFkR,EADL,CAEEpR,OAAQoR,EAAMpR,OAAOC,IAAI,SAAAC,GAIvB,OAHGA,EAAElB,KAAOqS,EAAOC,QAAQtS,IACzBkB,EAAE+H,MAAMyJ,KAAKL,EAAOC,QAAQK,SAEvBzR,MAGb,IC1EqB,YD2EnB,OAAO,MACFkR,EADL,CAEEpR,OAAQoR,EAAMpR,OAAOC,IAAI,SAAAC,GAIvB,OAHGA,EAAElB,KAAOqS,EAAOC,QAAQ3P,SACzBzB,EAAE+H,MAAM2J,OAAO1R,EAAE+H,MAAM2E,UAAU,SAAA5I,GAAC,OAAIA,EAAEhF,KAAOqS,EAAOC,QAAQhO,SAAU,EAAG,EAAG+N,EAAOC,QAAQK,SAExFzR,MAGb,ICnFqB,YDoFpB,OAAO,MACFkR,EADL,CAEEpR,OAAQoR,EAAMpR,OAAOC,IAAI,SAAAC,GASvB,OARGA,EAAElB,KAAOqS,EAAOC,QAAQ3P,UACzBzB,EAAE+H,MAAQ/H,EAAE+H,MAAMhI,IAAI,SAAA+D,GAIrB,OAHGA,EAAEhF,KAAOqS,EAAOC,QAAQhO,SACzBU,EAAE8B,MAAQuL,EAAOC,QAAQO,UAEpB7N,KAGH9D,MAGZ,ICjGqB,YDkGnB,OAAO,MACFkR,EADL,CAEEpR,OAAQoR,EAAMpR,OAAOC,IAAI,SAAAf,GAOvB,OANGA,EAAMF,KAAOqS,EAAOC,QAAQQ,cAC7B5S,EAAM+I,MAAM2J,OAAOP,EAAOC,QAAQS,WAAY,GAE7C7S,EAAMF,KAAOqS,EAAOC,QAAQjF,aAC7BnN,EAAM+I,MAAM2J,OAAOP,EAAOC,QAAQU,UAAW,EAAGX,EAAOC,QAAQzK,MAE1D3H,MAGb,ICpHuB,cDqHrB,OAAO,MACFkS,EADL,CAEEpR,OAAQoR,EAAMpR,OAAOC,IAAI,SAAAf,GAIvB,OAHGA,EAAMF,KAAOqS,EAAOC,QAAQ3P,UAC7BzC,EAAM+I,MAAQ/I,EAAM+I,MAAMlE,OAAO,SAAA8C,GAAI,OAAIA,EAAK7H,KAAOqS,EAAOC,QAAQhO,UAE/DpE,MAGb,IC7H4B,mBD8H1B,OAAO,MACFkS,EADL,CAEEpR,OAAQoR,EAAMpR,OAAOC,IAAI,SAAAC,GASvB,OARGA,EAAElB,KAAOqS,EAAOC,QAAQ3P,SACzBzB,EAAE+H,MAAMhI,IAAI,SAAA+D,GAIV,OAHGA,EAAEhF,KAAOqS,EAAOC,QAAQhO,SACzBU,EAAE8B,MAAQ,IAEL9B,IAGJ9D,MAGb,IC3I0B,iBD4IxB,OAAO,MACFkR,EADL,CAEEpR,OAAQoR,EAAMpR,OAAOC,IAAI,SAAAC,GAYvB,OAXGA,EAAElB,KAAOqS,EAAOC,QAAQ3P,UACzBzB,EAAE+H,MAAQ/H,EAAE+H,MAAMhI,IAAI,SAAA+D,GAOpB,OANGA,EAAEhF,KAAOqS,EAAOC,QAAQW,cACzBjO,EAAE8B,MAAQ,IAET9B,EAAEhF,KAAOqS,EAAOC,QAAQ/E,aACzBvI,EAAE8B,MAAQ9B,EAAE8B,MAAMoM,OAAOb,EAAOC,QAAQO,WAEnC7N,KAGJ9D,MAGb,ICxJoB,WDyJlB,OAAO,MACFkR,EADL,CAEEpR,OAAQoR,EAAMpR,OAAOC,IAAI,SAAAC,GASvB,OARGA,EAAElB,KAAOqS,EAAOC,QAAQ3P,UACzBzB,EAAE+H,MAAQ/H,EAAE+H,MAAMhI,IAAI,SAAA+D,GAIpB,OAHGA,EAAEhF,KAAOqS,EAAOC,QAAQhO,QACzBU,EAAE8B,MAAM4L,KAAKL,EAAOC,QAAQ3H,SAEvB3F,KAGJ9D,MAIb,IC5K0B,iBD6KxB,OAAO,MACFkR,EADL,CAEEpR,OAAQoR,EAAMpR,OAAOC,IAAI,SAAAf,GASvB,OARGA,EAAMF,KAAOqS,EAAOC,QAAQ3P,UAC7BzC,EAAM+I,MAAQ/I,EAAM+I,MAAMhI,IAAI,SAAA4G,GAI5B,OAHGA,EAAK7H,KAAOqS,EAAOC,QAAQhO,SAC5BuD,EAAKlH,MAAQ0R,EAAOC,QAAQa,UAEvBtL,KAGJ3H,MAGb,ICtLuB,cDuLrB,OAAO,MACFkS,EADL,CAEEpR,OAAQoR,EAAMpR,OAAOC,IAAI,SAAAf,GAWvB,OAVGA,EAAMF,KAAOqS,EAAOC,QAAQ3P,UAC7BzC,EAAM+I,MAAQ/I,EAAM+I,MAAMhI,IAAI,SAAA4G,GAM5B,OALGA,EAAK7H,KAAOqS,EAAOC,QAAQhO,SAC5BuD,EAAKf,MAAQe,EAAKf,MAAM7F,IAAI,SAAA6E,GAAI,OAC9BA,EAAK9F,KAAOqS,EAAOC,QAAQc,OAASf,EAAOC,QAAQ3H,QAAU7E,KAG1D+B,KAGJ3H,MAGb,ICtMuB,cDuMrB,OAAO,MACFkS,EADL,CAEEpR,OAAQoR,EAAMpR,OAAOC,IAAI,SAAAC,GASvB,OARGA,EAAElB,KAAOqS,EAAOC,QAAQ3P,UACzBzB,EAAE+H,MAAQ/H,EAAE+H,MAAMhI,IAAI,SAAA+D,GAIpB,OAHGA,EAAEhF,KAAOqS,EAAOC,QAAQhO,SACzBU,EAAE8B,MAAQ9B,EAAE8B,MAAM/B,OAAO,SAAAgC,GAAC,OAAIA,EAAE/G,KAAOqS,EAAOC,QAAQc,UAEjDpO,KAGJ9D,MAGb,ICpNqB,YDqNnB,OAAO,MACFkR,EADL,CAEEpR,OAAQoR,EAAMpR,OAAOC,IAAI,SAAAC,GASvB,OARGA,EAAElB,KAAOqS,EAAOC,QAAQjF,cACzBnM,EAAE+H,MAAQ/H,EAAE+H,MAAMhI,IAAI,SAAA+D,GAIpB,OAHGA,EAAEhF,KAAOqS,EAAOC,QAAQ/E,YACzBvI,EAAE8B,MAAM8L,OAAOP,EAAOC,QAAQU,UAAW,EAAGX,EAAOC,QAAQe,MAEtDrO,KAGJ9D,MAGb,IClOqB,YDmOnB,OAAO,MACFkR,EADL,CAEEtN,OAAO,GAAD,mBAAMsN,EAAMtN,QAAZ,CAAoBuN,EAAOC,YAErC,ICtOwB,eDuOtB,OAAO,MACFF,EADL,CAEEtN,OAAQsN,EAAMtN,OAAO7D,IAAI,SAAA0D,GAMvB,OALGA,EAAM3E,KAAOqS,EAAOC,QAAQtS,KAC7B2E,EAAMO,KAAOmN,EAAOC,QAAQpN,KAC5BP,EAAMjF,MAAQ2S,EAAOC,QAAQ5S,MAC7BiF,EAAMM,UAAYoN,EAAOC,QAAQrN,WAE5BN,MAGb,ICjPwB,eDkPtB,OAAO,MACFyN,EADL,CAEEpR,OAAQoR,EAAMpR,OAAOC,IAAI,SAAAC,GAQvB,OAPAA,EAAE+H,MAAQ/H,EAAE+H,MAAMhI,IAAI,SAAA+D,GAKpB,OAJAA,EAAE8B,MAAQ9B,EAAE8B,MAAM7F,IAAI,SAAA8F,GAEpB,OADAA,EAAEjC,OAASiC,EAAEjC,OAAOC,OAAO,SAAAC,GAAC,OAAIA,IAAMqN,EAAOC,UACtCvL,IAEF/B,IAEF9D,IAET4D,OAAQsN,EAAMtN,OAAOC,OAAO,SAAAC,GAAC,OAAIA,EAAEhF,KAAOqS,EAAOC,YAErD,QACE,OAAOF,I,ujBE3Pb,IA2nBekB,GA3nBI,SAAAC,GACjB,IAAMC,EAAe,CACnBxS,OAAQ,CACN,CACEL,MAAO,gBACPX,GAAI,KACJN,MAAO,UACPoC,SAAS,EACTsC,YAAa,8BACb6E,MAAO,CACL,CACEtI,MAAO,QACPX,GAAIoC,MACJqF,UAAU,EACVX,MAAO,CACL,CACEjE,KAAM,SACN2E,KAAM,kBACNxH,GAAIoC,MACJqF,UAAU,EACV3C,OAAQ,CACN,EACA,EACA,GAEF6B,WAAY,CACV,CACEhG,MAAO,eACPX,GAAIoC,MACJ0I,UAAU,EACVhE,MAAO,CACL,CACEjE,KAAM,OACN7C,GAAIoC,MACJ6E,MAAM,GAER,CACEpE,KAAM,OACN7C,GAAIoC,MACJ6E,MAAM,OAMhB,CACEpE,KAAM,SACN4E,UAAU,EACVzH,GAAIoC,MACJ0C,OAAQ,CACN,GAEF6B,WAAY,CACV,CACEhG,MAAO,eACPX,GAAIoC,MACJ0I,UAAU,EACVhE,MAAO,CACL,CACEjE,KAAM,OACN7C,GAAIoC,MACJ6E,MAAM,GAER,CACEpE,KAAM,OACN7C,GAAIoC,MACJ6E,MAAM,OAMhB,CACEpE,KAAM,SACN7C,GAAIoC,MACJuE,WAAY,GACZ7B,OAAQ,CACN,IAGJ,CACEjC,KAAM,SACN7C,GAAIoC,MACJuE,WAAY,GACZ7B,OAAQ,CACN,IAGJ,CACEjC,KAAM,SACN7C,GAAIoC,MACJuE,WAAY,GACZ7B,OAAQ,CACN,IAGJ,CACEjC,KAAM,SACN7C,GAAIoC,MACJuE,WAAY,GACZ7B,OAAQ,CACN,MAKR,CACEnE,MAAO,QACPX,GAAIoC,MACJqF,UAAU,EACVX,MAAO,CACL,CACEjE,KAAM,UACN7C,GAAIoC,MACJuE,WAAY,GACZ7B,OAAQ,CACN,EACA,IAGJ,CACEjC,KAAM,UACN7C,GAAIoC,MACJuE,WAAY,GACZ7B,OAAQ,CACN,EACA,EACA,EACA,EACA,EACA,IAGJ,CACEjC,KAAM,UACN7C,GAAIoC,MACJuE,WAAY,GACZ7B,OAAQ,CACN,EACA,MAKR,CACEnE,MAAO,WACPX,GAAIoC,MACJ0E,MAAO,MAMb,CACEnG,MAAO,aACPX,GAAIoC,MACJN,SAAS,EACTpC,MAAO,UACP0E,YAAa,GACb6E,MAAO,CACL,CACEtI,MAAO,eACPX,GAAIoC,MACJ0E,MAAO,OAOfhC,OAAQ,CACN,CACE9E,GAAI,EACJN,MAAO,UACPuF,UAAW,QACXC,KAAM,cAER,CACElF,GAAI,EACJN,MAAO,UACPuF,UAAW,SACXC,KAAM,IAER,CACElF,GAAI,EACJN,MAAO,UACPuF,UAAW,SACXC,KAAM,IAER,CACElF,GAAI,EACJN,MAAO,UACPuF,UAAW,MACXC,KAAM,IAER,CACElF,GAAI,EACJN,MAAO,UACPuF,UAAW,SACXC,KAAM,IAER,CACElF,GAAI,EACJN,MAAO,UACPuF,UAAW,OACXC,KAAM,KAGV6J,OAAQ,CACN,CACE7J,KAAM,QACNxF,MAAO,WAET,CACEwF,KAAM,SACNxF,MAAO,WAET,CACEwF,KAAM,SACNxF,MAAO,WAET,CACEwF,KAAM,MACNxF,MAAO,WAET,CACEwF,KAAM,SACNxF,MAAO,WAET,CACEwF,KAAM,OACNxF,MAAO,WAET,CACEwF,KAAM,MACNxF,MAAO,WAET,CACEwF,KAAM,OACNxF,MAAO,WAET,CACEwF,KAAM,OACNxF,MAAO,WAET,CACEwF,KAAM,QACNxF,MAAO,YAGX8S,uBAAwB,IA1PA,EA6PAiB,qBAAWC,GAAcF,GA7PzB,mBA6PnBpB,EA7PmB,KA6PZuB,EA7PY,KAuSpBpU,EAAW,SAACS,GAGhB,OAFcoS,EAAMpR,OAAO+D,OAAO,SAAA7D,GAAC,OAAIA,EAAElB,KAAOA,IAEnC,IAGT+L,EAAU,SAACpJ,EAASiR,GAKxB,OAJcxB,EAAMpR,OAAO+D,OAAO,SAAA7D,GAAC,OAAIA,EAAElB,KAAO2C,IAAS,GAEtCsG,MAAMlE,OAAO,SAAAC,GAAC,OAAIA,EAAEhF,KAAO4T,IAAQ,IA2NlD5G,EAAa,SAACrK,EAAS2B,EAAQ8O,GACnCO,EAAS,CACP5T,KDvhBqB,cCwhBrBuS,QAAS,CACP3P,UACA2B,SACA8O,aAoEN,OACE,kBAAC,EAAaS,SAAd,CACEpQ,MAAO,CACLzC,OAAQoR,EAAMpR,OACd8D,OAAQsN,EAAMtN,OACdiK,OAAQqD,EAAMrD,OACdpF,SArVW,SAAChJ,EAAOjB,GACvB,IAAMoU,EAAW,CACfnT,QACAX,GAAIoC,MACJ1C,QACAoC,SAAS,EACTsC,YAAa,GACb6E,MAAO,IAET0K,EAAS,CACP5T,KD1SmB,YC2SnBuS,QAASwB,KA2UPC,eA5ViB,WAGrB,OAFa3B,EAAMpR,OAAOC,IAAI,SAAAC,GAAC,OAAIA,EAAEP,SA4VjCqB,gBAvUkB,SAACgS,GACvB,IAAMnM,EAAO,GAIb,OAFAmM,GAAOA,EAAIpN,QAAQ,SAAA5G,GAAE,OAAI6H,EAAK6K,KAAKnT,EAASS,MAErC6H,GAmUHvF,iBA/TmB,WACvB,IAAMuF,EAAO,GAGb,OAFAuK,EAAMI,uBAAuB5L,QAAQ,SAAA5G,GAAE,OAAI6H,EAAK6K,KAAKnT,EAASS,MAEvD6H,GA4THtI,WACAwM,UACAnJ,SA3SW,SAACC,EAAM7C,GACtB2T,EAAS,CACP5T,KDhVmB,YCiVnBuS,QAAS,CACPtS,KACA6C,WAuSAtB,QAjSU,SAACvB,GACf,IAAIyS,EAA4BL,EAAMI,wBACW,IAA9CJ,EAAMI,uBAAuBhE,QAAQxO,GACtCyS,EAA0BG,OAAOR,EAAMI,uBAAuBhE,QAAQxO,GAAK,GAE3EyS,EAA0BC,KAAK1S,GAEjC2T,EAAS,CACP5T,KDhWkB,WCiWlBuS,QAAS,CACPtS,KACAyS,gCAuRAjD,YAlRc,SAAC7M,EAAS2B,GAC5BqP,EAAS,CACP5T,KDzWsB,eC0WtBuS,QAAS,CACP3P,UACA2B,aA8QAR,eAxQiB,SAACjB,EAAM7C,GAC5B2T,EAAS,CACP5T,KDnXyB,kBCoXzBuS,QAAS,CACPtS,KACA6C,WAoQA+F,QA9PU,SAAC/F,EAAM7C,GACrB,IAAM2S,EAAU,CACdhS,MAAOkC,EACP7C,GAAIoC,MACJ0E,MAAO,IAET6M,EAAS,CACP5T,KDlYkB,WCmYlBuS,QAAS,CACPtS,KACA2S,cAqPAhD,WAhPa,SAAChN,EAAS2B,GAC3BqP,EAAS,CACP5T,KD3YqB,cC4YrBuS,QAAS,CACP3P,UACA2B,aA4OA8L,eAvOiB,SAACzN,EAAS2B,GAC/BqP,EAAS,CACP5T,KDpZ0B,mBCqZ1BuS,QAAS,CACP3P,UACA2B,aAmOAgM,aA9Ne,SAAC3N,EAASsQ,EAAa1F,GAC1C,IAAIsF,EAAW,GAEf9G,EAAQpJ,EAASsQ,GAAanM,MAAMF,QAAQ,SAAAd,GAC1C+M,EAASH,KAAK5M,KAGhB+M,EAAWA,EAAS5R,IAAI,SAAA8F,GACtB,OAAO,MACFA,EADL,CAEE/G,GAAIoC,UAMRuR,EAAS,CACP5T,KD5awB,iBC6axBuS,QAAS,CACP3P,UACAsQ,cACA1F,aACAsF,eAyMAtO,aApMe,SAAC5B,EAAS2B,EAAQ6O,GACrCQ,EAAS,CACP5T,KDvbwB,iBCwbxBuS,QAAS,CACP3P,UACA2B,SACA6O,eA+LArD,SA1LW,SAACnN,EAAS2B,EAAQY,GACjC,IAAI+O,EAEJ7B,EAAMpR,OAAO4F,QAAQ,SAAA1F,GAAC,OAAIA,EAAElB,KAAO2C,GAAWzB,EAAE+H,MAAMrC,QAAQ,SAAA5B,GACzDA,EAAEhF,KAAOsE,IACV2P,EAAUjP,OAId,IAAM2N,EAAO,MACRsB,EADQ,CAEXtT,MAAOuE,EACPlF,GAAIoC,QAGNuR,EAAS,CACP5T,KD/cmB,YCgdnBuS,QAAS,CACP3P,UACA2B,SACAqO,cAuKAlD,SAlKW,SAAC9M,EAAS2B,GACzB,IAAMuO,EAAW9G,EAAQpJ,EAAS2B,GAAQwC,MAE1C+L,EAASqB,KAAK,SAACpC,EAAG5Q,GAAJ,OAAU4Q,EAAEjP,KAAO3B,EAAE2B,MAAQ,EAAIiP,EAAEjP,KAAO3B,EAAE2B,KAAO,EAAI,IAErE8Q,EAAS,CACP5T,KD7dmB,YC8dnBuS,QAAS,CACP3P,UACA2B,SACAuO,eAyJA3C,SAnJW,SAAC4C,EAAcG,EAAa5F,EAAa2F,GACxD,IAAMD,EAAaxT,EAASuT,GAAc7J,MAAM2E,UAAU,SAAA5I,GAAC,OAAIA,EAAEhF,KAAOiT,IAElEpL,EAAOkE,EAAQ+G,EAAcG,GAEnCU,EAAS,CACP5T,KD5emB,YC6enBuS,QAAS,CACPQ,eACAC,aACA1F,cACA2F,YACAnL,WAwIAS,QAlIU,SAACzF,EAAMyB,EAAQ3B,GAC7B,IAAMgI,EAAU,CACd9H,OACA2E,KAAM,GACNxH,GAAIoC,MACJqF,UAAU,EACV3C,OAAQ,GACR6B,WAAY,IAEdgN,EAAS,CACP5T,KDjgBkB,WCkgBlBuS,QAAS,CACP3H,UACArG,SACA3B,cAqHA4H,WA/Ga,SAAC5H,EAAS2B,EAAQ8O,EAAQzI,GAC3CgJ,EAAS,CACP5T,KD5gBqB,cC6gBrBuS,QAAS,CACP3P,UACA2B,SACA8O,SACAzI,cAyGAqC,aACAW,SA1FW,SAACmF,EAAaG,EAAYG,EAAO/F,EAAYE,EAAWyF,EAAUK,GACjFrG,EAAW8F,EAAcG,EAAaG,GAEtC,IAAMe,EAAa,MACdd,EADc,CAEjBrT,GAAIoC,QAGNuR,EAAS,CACP5T,KDxiBmB,YCyiBnBuS,QAAS,CACPjF,cACAE,aACAyF,YACAK,KAAMc,MA6ENnF,SAxEW,SAAC9J,EAAMD,EAAWjF,GACjC,IAAIoP,GAAK,EACHgF,EAAW,CACfpU,KACAiF,YACAC,OACAxF,MAAO0S,EAAMrD,OAAOhK,OAAO,SAAA8B,GAAC,OAAIA,EAAE3B,OAASD,IAAW,GAAGvF,OAG3D0S,EAAMtN,OAAO8B,QAAQ,SAAAjC,GAChBA,EAAMM,YAAcA,GAClBN,EAAMO,OAASA,IAChBkK,GAAK,KAKPA,GACFuE,EAAS,CACP5T,KDpkBiB,YCqkBjBuS,QAAS8B,KAqDTnF,YAhDc,SAAC/J,EAAMD,EAAWjF,GACpC2T,EAAS,CACP5T,KD3kBsB,eC4kBtBuS,QAAS,CACPpN,OACAD,YACAvF,MAAO0S,EAAMrD,OAAOhK,OAAO,SAAA8B,GAAC,OAAIA,EAAE3B,OAASD,IAAW,GAAGvF,MACzDM,SA0CAkP,YArCc,SAAClP,GACnB2T,EAAS,CACP5T,KDtlBsB,eCulBtBuS,QAAStS,OAqCRuT,EAAMc,W,ujBC5oBE,gBAACjC,EAAOC,GACrB,OAAQA,EAAOtS,MACb,IFiBqB,YEhBnB,OAAO,MACFqS,EADL,CAEEP,OAAQ,CAACQ,EAAOC,WAEpB,IFawB,eEZtB,OAAO,MACFF,EADL,CAEEP,OAAQO,EAAMP,OAAO9M,OAAO,SAAA+M,GAAC,OAAIA,EAAE9R,KAAOqS,EAAOC,YAErD,QACE,OAAOF,ICuCEkC,GAhDI,SAAAf,GACjB,IAD0B,EAKAE,qBAAWc,GAJhB,CACnB1C,OAAQ,KAFgB,mBAKnBO,EALmB,KAKZuB,EALY,KA4BpBjC,EAAc,SAAC1R,GACnB2T,EAAS,CACP5T,KHdsB,eGetBuS,QAAStS,KAIb,OACE,kBAAC,EAAa6T,SAAd,CACEpQ,MAAO,CACLoO,OAAQO,EAAMP,OACdrQ,SA/BW,SAACmQ,EAAK5R,EAAMyU,GAE3B,IAAgC,IADbpC,EAAMP,OAAO5Q,IAAI,SAAA6Q,GAAC,OAAIA,EAAEH,MAC7BnD,QAAQmD,GAAa,CACjC,IAAM8C,EAAW,CACf9C,MACA3R,GAAIoC,MACJrC,QAGF4T,EAAS,CACP5T,KHHiB,YGIjBuS,QAASmC,IAGXpN,WAAW,WACTqK,EAAY+C,EAASzU,KACpBwU,GAAc,OAgBf9C,gBAGD6B,EAAMc,W,ujBC/BE,gBAACjC,EAAOC,GACrB,OAAQA,EAAOtS,MACb,IJKgC,uBIJ/B,OAAO,MACFqS,EADL,CAEE/S,eAAgBgT,EAAOC,UAE1B,IJCkC,yBIAhC,OAAO,MACFF,EADL,CAEE/S,eAAgB,OAEpB,IJH+B,sBII7B,OAAO,MACF+S,EADL,CAEE5N,cAAe6N,EAAOC,UAE1B,IJPiC,wBIQ/B,OAAO,MACFF,EADL,CAEE5N,cAAe,OAEnB,IJL4B,mBIM1B,OAAO,MACF4N,EADL,CAEE9H,YAAa+H,EAAOC,UAExB,IJT8B,qBIU5B,OAAO,MACFF,EADL,CAEE9H,YAAa,OAEjB,IJrB0B,iBIsBxB,OAAO,MACF8H,EADL,CAEEnQ,UAAWoQ,EAAOC,UAEtB,IJzBqB,YI0BnB,OAAO,MACFF,EADL,CAEE3F,YAAa4F,EAAOC,UAExB,IJ7B0B,iBI8BxB,OAAO,MACFF,EADL,CAEE1F,UAAW2F,EAAOC,UAEtB,IJjC6B,oBIkC3B,OAAO,MACFF,EADL,CAEE3B,mBAAoB4B,EAAOC,UAE/B,IJrCkC,yBIsChC,OAAO,MACFF,EADL,CAEE1B,iBAAkB2B,EAAOC,UAE7B,IJpCkC,yBIqChC,OAAO,MACFF,EADL,CAEEzB,uBAAwB0B,EAAOC,UAEnC,IJxCuC,8BIyCrC,OAAO,MACFF,EADL,CAEExB,qBAAsByB,EAAOC,UAEjC,IJ5CuC,8BI6CrC,OAAO,MACFF,EADL,CAEEtD,qBAAsBuD,EAAOC,UAEjC,IJxDmC,0BIyDjC,OAAO,MACFF,EADL,CAEElG,iBAAkBmG,EAAOC,UAE7B,IJ1DyB,gBI2DvB,OAAO,MACFF,EADL,CAEEvB,SAAUwB,EAAOC,UAErB,IJ9D6B,oBI+D3B,OAAO,MACFF,EADL,CAEExN,WAAYwN,EAAMxN,YAEtB,IAAK,4BACH,OAAO,MACFwN,EADL,CAEEnK,uBAAwBoK,EAAOC,UAEnC,IJpEoB,WIqElB,OAAO,MACFF,EADL,CAEEnE,KAAMoE,EAAOC,UAEjB,QACE,OAAOF,ICoKEsC,GAnQG,SAAAnB,GAChB,IADyB,EAoBCE,qBAAWkB,GAnBhB,CACnBtV,eAAgB,KAChBmF,cAAe,KACf8F,YAAa,KACbrI,UAAW,GACX2S,YAAa,MACblI,UAAW,KACX+D,mBAAoB,MACpBoE,iBAAkB,KAClBlE,uBAAwB,MACxBC,qBAAsB,KACtB9B,qBAAsB,KACtB5C,iBAAkB,KAClB4I,SAAU,GACVlQ,WAAW,EACXqD,uBAAwB,KACxBgG,KAAM,OAjBiB,mBAoBlBmE,EApBkB,KAoBXuB,EApBW,KA+BnBoB,EAAiB,SAAC/U,GACtB,IAAMgV,EAAe5C,EAAMnQ,UACA,IAAxB+S,EAAa9S,QAAuB,OAAPlC,GAC9BgV,EAAaC,QACbD,EAAatC,KAAK1S,IACH,OAAPA,GACRgV,EAAatC,KAAK1S,GAEpB2T,EAAS,CACP5T,KLhCwB,iBKiCxBuS,QAAS0C,KAiDPE,EAAe,SAACnV,GACpB4T,EAAS,CACP5T,KLlFwB,iBKmFxBuS,QAASvS,KAIPoV,EAAiB,WACrBxB,EAAS,CACP5T,KLzFwB,iBK0FxBuS,QAAS,QAiBP8C,EAAsB,SAACrV,GAC3B4T,EAAS,CACP5T,KL3GgC,yBK4GhCuS,QAASvS,KAIPsV,EAAwB,WAC5B1B,EAAS,CACP5T,KLlHgC,yBKmHhCuS,QAAS,QAKP5D,EAAsB,SAAC4G,EAAQC,EAAMtH,GACzC0F,EAAS,CACP5T,KLpHgC,yBKqHhCuS,QAASgD,IAEG,QAAXA,EACDE,IACmB,OAAXF,GACRG,EAAwBF,GAEvBtH,EACDyH,EAAwBzH,GAExB0H,KAIED,EAA0B,SAACzH,GAC/B0F,EAAS,CACP5T,KLnIqC,8BKoIrCuS,QAASrE,KAIP0H,EAA4B,WAChChC,EAAS,CACP5T,KL1IqC,8BK2IrCuS,QAAS,QAIPmD,EAA0B,SAACF,GAC/B5B,EAAS,CACP5T,KLlJqC,8BKmJrCuS,QAASiD,KAIPC,EAA4B,WAChC7B,EAAS,CACP5T,KLzJqC,8BK0JrCuS,QAAS,QA8Cb,OACE,kBAAC,EAAYuB,SAAb,CACEpQ,MAAO,CACLpE,eAAgB+S,EAAM/S,eACtBmF,cAAe4N,EAAM5N,cACrB8F,YAAa8H,EAAM9H,YACnBrI,UAAWmQ,EAAMnQ,UACjBwK,YAAa2F,EAAM3F,YACnBC,UAAW0F,EAAM1F,UACjB+D,mBAAoB2B,EAAM3B,mBAC1BC,iBAAkB0B,EAAM1B,iBACxBC,uBAAwByB,EAAMzB,uBAC9BC,qBAAsBwB,EAAMxB,qBAC5B9B,qBAAsBsD,EAAMtD,qBAC5B5C,iBAAkBkG,EAAMlG,iBACxB2E,SAAUuB,EAAMvB,SAChBjM,UAAWwN,EAAMxN,UACjBqD,uBAAwBmK,EAAMnK,uBAC9BgG,KAAMmE,EAAMnE,KACZ9N,kBAxNoB,SAACH,GACzB2T,EAAS,CACP5T,KLpB8B,uBKqB9BuS,QAAStS,IAEX+U,EAAe/U,IAoNXZ,oBAjMsB,WAC1BuU,EAAS,CACP5T,KL3CgC,4BK2O9BgI,iBA5LmB,SAAC/H,GACxB2T,EAAS,CACP5T,KLhD6B,sBKiD7BuS,QAAStS,KA0LP4V,mBAtLqB,WACzBjC,EAAS,CACP5T,KLtD+B,2BK2O7BkG,eAjLiB,SAACoN,GACtBM,EAAS,CACP5T,KLrD0B,mBKsD1BuS,QAASe,KA+KPlH,iBA3KmB,WACvBwH,EAAS,CACP5T,KL3D4B,wBKqO1BT,SAtKW,SAACgW,EAAQvV,GACxB4T,EAAS,CACP5T,KLvEmB,YKwEnBuS,QAASgD,IAEG,QAAXA,EACDH,IACmB,OAAXG,GACRJ,EAAanV,IA+JXiI,gBA7IkB,SAACsN,EAAQvV,GAC/B4T,EAAS,CACP5T,KL/F2B,oBKgG3BuS,QAASgD,IAEG,QAAXA,GACDD,IACA3G,EAAoB,QACD,OAAX4G,GACRF,EAAoBrV,IAqIlB2O,sBACAxI,oBAtEsB,SAAC4K,GAC3B6C,EAAS,CACP5T,KLtKiC,0BKuKjCuS,QAASxB,KAoEPkB,YAhEc,SAACd,EAAGE,GACtBuC,EAAS,CACP5T,KL1KuB,gBK2KvBuS,QAAS,CAACpB,IAAGE,QA8DXhM,gBA1DkB,WACtBuO,EAAS,CACP5T,KLhL2B,uBKyOzBwP,0BApD4B,SAACvP,GACjC2T,EAAS,CACP5T,KAAM,4BACNuS,QAAStS,KAkDP+K,QA9CU,SAACkD,GAEb0F,EADC1F,EACQ,CACPlO,KL3LgB,WK4LhBuS,QAASrE,GAGF,CACPlO,KLhMgB,WKiMhBuS,QAAS,UAwCViB,EAAMc,WClQbwB,IAASC,OAAO,kBAZO,WACrB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,UAOM,MAAoB1S,SAAS2S,eAAe,W","file":"static/js/main.f017da14.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;","import { createContext } from 'react';\r\n\r\nconst BoardContext = createContext();\r\n\r\nexport default BoardContext;\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst Navbar = () => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { clearCurrentBoardId, currentBoardId, setModal } = userContext;\r\n  const { getBoard } = boardContext;\r\n\r\n  const homeClicked =() => {\r\n    clearCurrentBoardId();\r\n  }\r\n\r\n  const addClicked = () => {\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  const navbarStyle = {\r\n    background: getBoard(currentBoardId) && getBoard(currentBoardId).color\r\n  }\r\n\r\n  const titleTextStyle = {\r\n    color: getBoard(currentBoardId) ? getBoard(currentBoardId).color : '#388d6a'\r\n  }\r\n\r\n  return (\r\n    <div className='trello-navbar' style={navbarStyle}>\r\n      <div>\r\n        <div className='btn btn-square btn-transparent rounded' onClick={homeClicked}>\r\n          <i className='fa fa-home'></i>\r\n        </div>\r\n        <div className='btn btn-narrow btn-transparent rounded'>\r\n          <i className='mr-1 fa fa-notes-medical'></i>\r\n          boards\r\n        </div>\r\n        <div className='d-i-b rounded'>\r\n          <input type='text' className='m-0 bg-light op-8 border-0 rounded' id='search-input'/>\r\n        </div>\r\n      </div>\r\n      <div className='mr-5'>\r\n        <div className='text-white text-bold cursor-p border border-white border-bottom-0'>\r\n          <div className='mr'>\r\n            trello\r\n          </div>\r\n          <div \r\n            className='bg-white d-i-b border-0 pl'\r\n            style={titleTextStyle}>\r\n            clone\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className='btn btn-square btn-transparent rounded' onClick={addClicked}>\r\n          <i className='fa fa-plus'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst SideListItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n\r\n  const [isHover, setIsHover] = useState(false);\r\n\r\n  const hoverStyle = isHover ? {\r\n    background: board.color,\r\n    color: '#f4f4f4',\r\n    opacity: '0.7'\r\n  } : {\r\n    opacity: '1'\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    setIsHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setIsHover(false);\r\n  }\r\n\r\n  const onClick = () => {\r\n    setCurrentBoardId(board.id)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      onClick={onClick}\r\n      className=\"card pl-1 cursor-p p border-0 rounded-lg text-dark transition text-bold\"\r\n      style={hoverStyle}\r\n      >\r\n      { board.title.charAt(0).toUpperCase() + board.title.slice(1) }\r\n      { <i className=\"fa fa-check m-0 float-right\"></i> }\r\n    </div> \r\n  );\r\n};\r\n\r\nexport default SideListItem","import React, { useContext } from 'react';\r\nimport SideListItem from './SideListItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst HomeSideList = () => {\r\n  const { boards } = useContext(BoardContext);\r\n\r\n  return (\r\n    <aside>\r\n      <button className=\"btn btn-block btn-primary text-left rounded-lg\">\r\n        <i className=\"fa fa-notes-medical mr-1\"></i>\r\n        <div className=\"text-bold d-i-b\">Boards</div>\r\n      </button>\r\n      { boards.map(b => (\r\n        <SideListItem key={b.id} board={b} />\r\n      )) }\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default HomeSideList\r\n","import { createContext } from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext;","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst HomeMainItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n  const { setStar } = boardContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const itemStyle = {\r\n    background: board.color\r\n  }\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('fa-star')) {\r\n      setCurrentBoardId(board.id);\r\n    }\r\n  }\r\n\r\n  const onStarClicked = () => {\r\n    setStar(board.id);\r\n    setAlert(`${board.starred ? 'board added to favorites' : 'board removed from favorites'}`, `${board.starred ? 'success' : 'dark'}`, 2500);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='trello-home-main-item mt-1 mr-1'\r\n      style={itemStyle}\r\n      onClick={onClick}>\r\n        <div className='text-white func-title'>\r\n          { board.title.charAt(0).toUpperCase() + board.title.slice(1) }\r\n        </div>\r\n        <div\r\n          className='trello-home-main-item-star'\r\n          onClick={onStarClicked}>\r\n          <i className={`fa-star ${board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeMainItem\r\n","import React, { Fragment, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst Recent = () => {\r\n  const boardContext = useContext(BoardContext);\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { getRecentBoards } = boardContext;\r\n  const { recentIds } = userContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      { getRecentBoards(recentIds).length !== 0\r\n        &&  <div className=\"card border-top-0 border-right-0 border-left-0 pb-2\">\r\n              <i className=\"fa fa-clock mr-1\"></i>\r\n              Recent borads\r\n              <div className=\"\">\r\n                { getRecentBoards(recentIds).map(r => (\r\n                      <HomeMainItem key={uniqid()} board={r} />\r\n                    ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Recent\r\n","import React, { Fragment, useContext } from 'react';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Starred = () => {\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { getStarredBoards } = boardContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      { getStarredBoards().length !== 0\r\n        &&  <div className=\"card border-top-0 border-right-0 border-left-0 pb-2\">\r\n              <i className=\"fa fa-star mr-1\"></i>\r\n              favorite borads\r\n              <div className=\"\">\r\n                { getStarredBoards().map(s => (\r\n                      <HomeMainItem key={s.id} board={s} />\r\n                    ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Starred\r\n","import React, { useContext } from 'react';\r\nimport Recent from './Recent';\r\nimport Starred from './Starred';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst HomeMain = () => {\r\n  const { setModal } = useContext(UserContext);\r\n\r\n  const onAdd = () => {\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  return (\r\n    <main className='text-bold'>\r\n      <Starred />\r\n      <Recent />\r\n      <div className='card border-0'>\r\n        <div className='trello-home-main-item hover' onClick={onAdd}>\r\n          Add Board\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default HomeMain\r\n","import React from 'react';\r\nimport HomeSideList from './HomeSideList';\r\nimport HomeMain from './HomeMain';\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container grid-1-3 mt-3\">\r\n      <HomeSideList />\r\n      <HomeMain />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardTitle = ({ boardId, title, setTitle }) => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [text, setText] = useState('');\r\n  const [isSettingTitle, setIsSettingTitle] = useState(false);\r\n  const [textHasChanged, setTextHasChanged] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setText(title);\r\n    document.querySelector(`#board-title-${boardId}`).focus()\r\n    // eslint-disable-next-line\r\n  }, [isSettingTitle])\r\n\r\n  const onClick = () => {\r\n    setIsSettingTitle(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n    setTextHasChanged(true);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    onSetTitle();\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetTitle();\r\n    }\r\n  }\r\n\r\n  const onSetTitle = () => {\r\n    if(textHasChanged) {\r\n      if(text !== '') {\r\n        setTitle(text, currentBoardId);\r\n        setAlert('board title changed', 'success');\r\n        setIsSettingTitle(false);\r\n      } else {\r\n        setIsSettingTitle(false);\r\n        setAlert('board title can not be empty', 'danger');\r\n      }\r\n    } else {\r\n      setIsSettingTitle(false);\r\n      setTextHasChanged(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='d-i-b'>\r\n      <div\r\n        className={`text-white m-0 ml-1 ${isSettingTitle && 'd-n'}`}\r\n        onClick={onClick}>\r\n        { title.charAt(0).toUpperCase() + title.slice(1) }\r\n      </div>\r\n      <input\r\n        type='text'\r\n        id={`board-title-${boardId}`}\r\n        className={`m-0 rounded ${!isSettingTitle && 'd-n'}`}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        value={text}\r\n        onKeyUp={onKeyUp}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardTitle\r\n","import React, { useState, useContext } from 'react';\r\nimport BoardTitle from './BoardTitle';\r\n\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardNavbar = ({ board, setStar, setDescribtion, setTitle }) => {\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const [descText, setDescText] = useState('');\r\n  const [isSettingDesc, setIsSettingDesc] = useState(false);\r\n  \r\n  const onStarClick = () => {\r\n    setStar(board.id);\r\n    setAlert(`${board.starred ? 'board added to favorites' : 'board removed from favorites'}`, `${board.starred ? 'success' : 'dark'}`, 2000);\r\n  }\r\n\r\n  const onDescClick =() => {\r\n    setIsSettingDesc(true);\r\n    setDescText(board.describtion);\r\n    document.querySelector('#describtion-input').focus();\r\n  }\r\n\r\n  const onDescTextChange = (e) => {\r\n    e.target.value.length < 51\r\n      ? setDescText(e.target.value)\r\n      : setAlert('describtion can not be longer than 50 chars!!!', 'warning', 4000)\r\n  }\r\n\r\n  const onSetDesc = () => {\r\n    setDescribtion(descText, board.id);\r\n    setAlert('board describtion changed successfully', 'success');\r\n    setIsSettingDesc(false);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetDesc();\r\n    }\r\n  }\r\n\r\n  const navbarStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-navbar trello-navbar lighten-20' style={navbarStyle}>\r\n      <div className='card border-0 m-0 p-0'>\r\n        { board && <BoardTitle boardId={board.id} title={board.title} setTitle={setTitle} /> }\r\n        <div className='btn btn-transparent btn-square rounded ml-1' onClick={onStarClick}>\r\n          <i className={`fa-star ${board && board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n        <div className='ml-1 d-i-b text-white'>\r\n          { \r\n            board\r\n            && !isSettingDesc\r\n              && (board.describtion ? board.describtion : 'no describtion')\r\n          }\r\n        <input\r\n          type='text'\r\n          id='describtion-input'\r\n          className={`m-0 rounded ${!isSettingDesc && 'd-n'}`}\r\n          value={descText}\r\n          onChange={onDescTextChange}\r\n          onBlur={onSetDesc}\r\n          onKeyUp={onKeyUp} />\r\n        </div>\r\n        <div className='btn btn-transparent btn-square rounded ml-1' onClick={onDescClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n      </div>\r\n      <div className='btn text-sm btn-narrow btn-transparent'>\r\n        <i className=\"fas fa-ellipsis-h mr\"></i>\r\n        Show Menu\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardNavbar\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst ListTitle = ({ listId, title, setListTitle }) => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { currentBoardId, currentListId } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [text, setText] = useState('');\r\n  const [isSettingTitle, setIsSettingTitle] = useState(false);\r\n  const [textHasChanged, setTextHasChanged] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setText(title);\r\n    document.querySelector(`#list-title-${listId}`).focus()\r\n    // eslint-disable-next-line\r\n  }, [isSettingTitle])\r\n\r\n  const onClick = () => {\r\n    setIsSettingTitle(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n    setTextHasChanged(true);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    onSetListTitle();\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetListTitle();\r\n    }\r\n  }\r\n\r\n  const onSetListTitle = () => {\r\n    if(textHasChanged) {\r\n      if(text !== '') {\r\n        setListTitle(currentBoardId, currentListId, text);\r\n        setAlert('list title changed', 'success');\r\n        setIsSettingTitle(false);\r\n      } else {\r\n        setIsSettingTitle(false);\r\n        setAlert('list title can not be empty', 'warning');\r\n      }\r\n    } else {\r\n      setIsSettingTitle(false);\r\n      setTextHasChanged(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='d-i-b m-0'>\r\n      <div\r\n        className={`pt-1 mb pl m-0 ${isSettingTitle && 'd-n'}`}\r\n        onClick={onClick}>\r\n        { title }\r\n      </div>\r\n      <input\r\n        type='text'\r\n        id={`list-title-${listId}`}\r\n        value={text}\r\n        className={`m-0 mt p-0 pt pb pl text-bold text-80 border-0 rounded ${!isSettingTitle && 'd-n'}`}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        onKeyUp={onKeyUp}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListTitle\r\n","import React, { useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst CardLabel = ({ label, onClick, onMouseEnter, onMouseLeave, bigLabels }) => {\r\n  const { labels } = useContext(BoardContext);\r\n\r\n  const thisLabel = labels.filter(l => l.id === label)[0];\r\n\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      className={`func-card-label d-i-b label label-color-${thisLabel.colorName} ${bigLabels ? 'label-lg' : 'label-sm'}`}>\r\n      <div className='label-text m-0'>{ bigLabels && thisLabel.name }</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardLabel\r\n","import React, { useState } from 'react';\r\nimport CardLabel from './CardLabel';\r\n\r\nconst ListItemLabels = ({ labels, toggleBigLabels, bigLabels, father }) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const onClick = () => {\r\n    father === 'boardListItem' && toggleBigLabels();\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    father === 'boardListItem' && setHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setHover(false);\r\n  }\r\n\r\n  const makeLabelsGrid = {\r\n    display: 'grid',\r\n    gridGap: `.2rem`,\r\n    gridTemplateColumns: `repeat(${labels.length}, 1fr)`\r\n  }\r\n\r\n  return (\r\n    <div style={makeLabelsGrid} className={`trello-board-list-item-labels-container m-0 p-0 ${hover && 'darken-30'}`}>\r\n      {\r\n        labels.map(l => <CardLabel key={l} label={l} onClick={onClick} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave} bigLabels={bigLabels} />)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListItemLabels\r\n","import React, { useRef, useContext } from 'react';\r\n\r\nimport ListItemLabels from './ListItemLabels';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst BoardListItem = ({ item }) => {\r\n  const listItem = useRef(null);\r\n\r\n  const { setCurrentCard, setModal, setFastEditModalPos, toggleBigLabels, bigLabels } = useContext(UserContext);\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('func-e-btn') && !e.target.parentElement.classList.contains('func-e-btn') && !e.target.classList.contains('func-card-label')) {\r\n      setModal('on', 'detailsModal');\r\n    }\r\n    setCurrentCard(item);\r\n  }\r\n\r\n  const onEBtnClick = (e) => {\r\n    console.log('use useRef here for setFastEditModalPos')\r\n    if(e.target.classList.contains('func-e-btn')) {\r\n      setFastEditModalPos({\r\n        top: e.target.parentElement.getBoundingClientRect().top,\r\n        left: e.target.parentElement.getBoundingClientRect().left,\r\n        width: e.target.parentElement.getBoundingClientRect().width\r\n      });\r\n    } else {\r\n      setFastEditModalPos({\r\n        top: e.target.parentElement.parentElement.getBoundingClientRect().top,\r\n        left: e.target.parentElement.parentElement.getBoundingClientRect().left,\r\n        width: e.target.parentElement.parentElement.getBoundingClientRect().width\r\n      });\r\n    }\r\n    setModal('on', 'fastEditModal');\r\n  }\r\n\r\n  let timer;\r\n  const touchduration = 500;\r\n\r\n  const onTouchStart = () => {\r\n    timer = setTimeout(onlongtouch, touchduration);\r\n    setCurrentCard(item);\r\n  }\r\n\r\n  const onTouchEnd = () => {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n    }\r\n  }\r\n\r\n  const onlongtouch = () => {\r\n    if(listItem.current !== null) {\r\n      setFastEditModalPos({\r\n        top: listItem.current.getBoundingClientRect().top,\r\n        left: listItem.current.getBoundingClientRect().left,\r\n        width: listItem.current.getBoundingClientRect().width\r\n      });\r\n      setModal('on', 'fastEditModal');\r\n    }\r\n  }\r\n\r\n  const getNumberOfChecklistItems = () => {\r\n    let num = 0;\r\n    item.checklists.forEach(c => {\r\n      c.items.forEach(i => {\r\n        num++\r\n      })\r\n    })\r\n\r\n    return num\r\n  }\r\n\r\n  const getNumberOfDoneChecklistItems = () => {\r\n    let num = 0;\r\n    item.checklists.forEach(c => {\r\n      c.items.forEach(i => {\r\n        i.done && num++\r\n      })\r\n    })\r\n\r\n    return num\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='trello-board-list-item'\r\n      ref={listItem}\r\n      onClick={onClick}\r\n      onTouchStart={onTouchStart}\r\n      onTouchEnd={onTouchEnd}>\r\n        <ListItemLabels father='boardListItem' labels={item.labels} bigLabels={bigLabels} toggleBigLabels={toggleBigLabels} />\r\n        <div>\r\n          { item.text }\r\n        </div>\r\n        <div className='text-sm mt'>\r\n          {\r\n            item.desc &&\r\n              <i className='fas fa-align-left mr'></i>\r\n          }\r\n          {\r\n            item.watching &&\r\n              <i className='fas fa-eye mr'></i>\r\n          }\r\n          {\r\n            item.checklists.length > 0 &&\r\n              getNumberOfChecklistItems() !== 0 &&\r\n                <div className={`checklist-btn ${getNumberOfDoneChecklistItems() === getNumberOfChecklistItems() && getNumberOfChecklistItems() !== 0 ? 'btn-success' : 'btn-dark'}`}>\r\n                  <i className='fas fa-check-square'></i>\r\n                  {\r\n                    getNumberOfDoneChecklistItems()\r\n                  }\r\n                  /\r\n                  {\r\n                    getNumberOfChecklistItems()\r\n                  }\r\n                </div>\r\n          }\r\n        </div>\r\n        <div className='func-e-btn trello-board-list-item-edit-btn' onClick={onEBtnClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardListItem\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport ListTitle from './ListTitle';\r\nimport BoardListItem from './BoardListItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardList = ({ list, boardFuncs /* all of board context */ }) => {\r\n\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { setCurrentListId, currentBoardId, setOptionsModal, addCardFromListActions } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [wantToAddCard, setWantToAddCard] = useState(false);\r\n  const [newCardText, setNewCardText] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(addCardFromListActions === list.id) {\r\n      setWantToAddCard(true);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [addCardFromListActions]);\r\n\r\n  const onAddCardClick = () => {\r\n    !wantToAddCard && setWantToAddCard(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    if(e.keyCode !== 13) {\r\n      setNewCardText(e.target.value);\r\n    }\r\n  }\r\n\r\n  const onTextareaBlur = () => {\r\n    if(newCardText !== '') {\r\n      addCard();\r\n    } else {\r\n      cancelAddCard();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13 && newCardText.length > 1) {\r\n      addCard();\r\n    } else if(e.keyCode === 13 && newCardText.length === 1) {\r\n      setNewCardText('');\r\n    }\r\n  }\r\n\r\n  const addCard = () => {\r\n    if(newCardText !== '') {\r\n      // three parameters: 1.text 2.list id 3.board id\r\n      boardFuncs.addCard(newCardText, list.id, currentBoardId);\r\n      setAlert('card added', 'success');\r\n      setNewCardText('');\r\n    }\r\n  }\r\n\r\n  const cancelAddCard = () => {\r\n    setWantToAddCard(false);\r\n    setNewCardText('');\r\n  }\r\n\r\n  const onListCLick = () => {\r\n    setCurrentListId(list.id);\r\n  }\r\n\r\n  const onlistOptionsClick = () => {\r\n    setOptionsModal('on', 'listActions');\r\n  }\r\n\r\n  const onNewCardOptionsClick = () => {\r\n    setOptionsModal('on', 'newCardActions');\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-list' onClick={onListCLick}>\r\n      <div className='trello-board-list-header'>\r\n        <ListTitle listId={list.id} title={list.title} setListTitle={boardFuncs.setListTitle} />\r\n        <div className='btn bg-transparent-with-hover btn-square float-right mt' onClick={onlistOptionsClick}>\r\n          <i className='fas fa-ellipsis-h'></i>\r\n        </div>\r\n        {\r\n          list.watching &&\r\n          <div className='text-85 bg-transparent btn-square float-right mt'>\r\n            <i className='fas fa-eye'></i>\r\n          </div>\r\n        }\r\n      </div>\r\n      <div className='trello-board-list-items'>\r\n        { list.items.map((i, index) => (\r\n          <BoardListItem key={i.id} item={i} />\r\n        )) }\r\n        <div className={`trello-board-list-item trello-board-card-compose  ${!wantToAddCard && 'd-n'}`}>\r\n          <textarea\r\n            className='trello-board-card-compose-textarea'\r\n            placeholder='Enter a title for this card'\r\n            onBlur={onTextareaBlur}\r\n            onKeyUp={onKeyUp}\r\n            onChange={onChange}\r\n            value={newCardText}>\r\n\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`trello-board-footer ${!wantToAddCard && 'hover cursor-p'}`}\r\n        onClick={onAddCardClick}>\r\n        { !wantToAddCard\r\n          ?  (<div>\r\n                {list.items.length === 0 ? '+ Add a card' : '+ Add another card'}\r\n              </div>) \r\n          : (\r\n            <Fragment>\r\n              <div className='btn btn-success' onClick={addCard}>\r\n                Add Card\r\n              </div>\r\n              <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddCard}>\r\n                &times;\r\n              </div>\r\n              <div className='btn bg-transparent-with-hover btn-square float-right'          onClick={onNewCardOptionsClick}>\r\n                  <i className='fas fa-ellipsis-h'></i>\r\n              </div>\r\n            </Fragment>\r\n          )  \r\n        }      \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardList\r\n","import React, { Fragment, useState, useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst AddList = ({ board, setScrollIflonger }) => {\r\n  const boardContext = useContext(BoardContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { addList } = boardContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [text, setText] = useState('')\r\n\r\n  const onClick = () => {\r\n    setIsAdding(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    if(text !== '') {\r\n      onAddList();\r\n    } else {\r\n      cancelAddList();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAddList();\r\n    }\r\n  }\r\n\r\n  const onAddList = () => {\r\n    if(text !== '') {\r\n      addList(text, board.id);\r\n      setAlert(`list ${text} added`, 'success');\r\n      setText('');\r\n      setScrollIflonger();\r\n    } else {\r\n      setAlert(`list title can not be empty`, 'warning');\r\n    }\r\n  }\r\n\r\n  const cancelAddList = () => {\r\n    setIsAdding(false);\r\n    setText('');\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`trello-board-add-list-btn btn-light op-8 darken-20 text-dark ${isAdding && 'd-n'}`}\r\n        onClick={onClick}>\r\n          { board && board.lists.length === 0 ? '+ Add a list' : '+ Add another list' }\r\n      </div>\r\n      <div\r\n        className={`trello-board-add-list-form btn-light op-9 darken-20 text-dark ${!isAdding && 'd-n'}`}>\r\n          <input\r\n            type='text'\r\n            className='m-0 rounded-lg mb-1'\r\n            placeholder='Enter list name'\r\n            value={text}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            onKeyUp={onKeyUp}/>\r\n          <div className='btn btn-success' onClick={onAddList}>\r\n            Add List\r\n          </div>\r\n          <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddList}>\r\n            &times;\r\n          </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddList\r\n","import React, { useState, useEffect } from 'react';\r\nimport BoardList from './BoardList';\r\nimport AddList from './AddList';\r\n\r\nconst BoardMain = ({ board, boardFuncs /* contains all of board context  */ }) => {\r\n  const [style, setStyle] = useState({});\r\n\r\n  useEffect(() => {\r\n    setScrollIflonger();\r\n    // eslint-disable-next-line\r\n  }, [board]);\r\n\r\n  const setScrollIflonger = () => {\r\n    const boardWidth = (board.lists.length + 1) * 270;\r\n\r\n    if(16 + boardWidth > window.innerWidth) {\r\n      setStyle({\r\n        display: 'grid',\r\n        gridTemplateRows: '1fr',\r\n        gridTemplateColumns: `repeat(${board && board.lists.length + 1}, 1fr)`\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-main' style={style}>\r\n      { board.lists.map(l => (\r\n          <div key={l.id} className='trello-board-list-wrapper'>\r\n            <BoardList list={l} boardFuncs={boardFuncs} />\r\n          </div>\r\n        )) }\r\n      <div className='trello-board-list-wrapper'>\r\n        <AddList board={board} setScrollIflonger={setScrollIflonger} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardMain\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport BoardNavbar from './BoardNavbar';\r\nimport BoardMain from './BoardMain';\r\n\r\n// context\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\n// css\r\nimport './board.css';\r\n\r\nconst Board = () => {\r\n  const [board, setBoard] = useState(null);\r\n\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { getBoard, setStar, setDescribtion, setTitle } = boardContext;\r\n\r\n  useEffect(() => {\r\n    setBoard(getBoard(currentBoardId));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const boardStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <BoardNavbar\r\n        board={board}\r\n        setStar={setStar}\r\n        setDescribtion={setDescribtion}\r\n        setTitle={setTitle} />\r\n      <div className='trello-board-main-wrapper lighten-20 p' style={boardStyle}>\r\n        {board && <BoardMain boardFuncs={boardContext} board={board} />}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nimport './modals.css';\r\n\r\nconst AddBoardModal = () => {\r\n  const { setModal, clearCurrentBoardId } = useContext(UserContext);\r\n  const { addBoard } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const [bg, setBg] = useState('#ee3a59');\r\n  const [text, setText] = useState('');\r\n\r\n  const onBgClicked = (e) => {\r\n    if(!e.target.classList.contains('func-no-click') && !e.target.classList.contains('func-colors')) {\r\n      setBg(e.target.id);\r\n    }\r\n  }\r\n\r\n  const onClose = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAdd();\r\n    }\r\n  }\r\n\r\n  const onAdd = () => {\r\n    if(text !== '') {\r\n      addBoard(text, bg);\r\n      onClose();\r\n      setAlert(`board ${text.charAt(0).toUpperCase() + text.slice(1)} was created`, 'success', 4000);\r\n      clearCurrentBoardId();\r\n    }\r\n  }\r\n\r\n  const bgColor = {\r\n    backgroundColor: bg\r\n  }\r\n\r\n  return (\r\n    <div className='modal-content add-board-modal-content'>\r\n      <div className='grid-3-1'>\r\n        <div className='p-1 grid-3-1 rounded-lg' style={bgColor}>\r\n          <div>\r\n            <input\r\n              type='text'\r\n              placeholder='Add board title'\r\n              value={text}\r\n              onChange={onChange}\r\n              onKeyUp={onKeyUp}\r\n              className='m-0 border-0 text-bold text-light pl-1 rounded'/>\r\n          </div>\r\n          <div>\r\n            <div className='close' onClick={onClose}>\r\n              &times;\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='func-colors grid-3 gap-half' onClick={onBgClicked}>\r\n          <div id='#ee3a59' className='rounded-lg p-1 background-red cursor-p'></div>\r\n          <div id='#e27b47' className='rounded-lg p-1 background-orange cursor-p'></div>\r\n          <div id='#efca58' className='rounded-lg p-1 background-yellow cursor-p'></div>\r\n          <div id='#46b29e' className='rounded-lg p-1 background-blue-l cursor-p'></div>\r\n          <div id='#344e5c' className='rounded-lg p-1 background-blue-d cursor-p'></div>\r\n          <div className='func-no-click'></div>\r\n          <div id='custom' className='rounded-lg p-1 bg-light cursor-p'></div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        onClick={onAdd}\r\n        className={`btn btn-narrow m text-bold ${text !== '' ? 'btn-success' : 'cursor-not-allowed'}`}>\r\n          Create Board\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddBoardModal\r\n","import React, { useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Labelitem = ({ label, onClick }) => {\r\n  const { labels } = useContext(BoardContext);\r\n\r\n  const thisLabel = labels.filter(l => l.id === label)[0];\r\n\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      className={`d-i-b details-label hover label-color-${thisLabel.colorName}`}>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Labelitem\r\n","import React, { useContext } from 'react';\r\nimport LabelItem from './LabelItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst Labels = ({ labels }) => {\r\n  const { setOptionsModal } = useContext(UserContext);\r\n\r\n  const onClick = () => {\r\n    setOptionsModal('on', 'editCardLabels');\r\n  }\r\n\r\n  return (\r\n    <div className={`mb-2 pos-rel ${labels.length === 0 && 'd-n'}`}>\r\n      <i className='fas fa-tag top-0'></i>\r\n      <div className='ml-2'>\r\n        <div className='text-85 mb text-bold'>\r\n          labels\r\n        </div>\r\n        {\r\n          labels.map(l => (\r\n            <LabelItem key={l} label={l} onClick={onClick} />\r\n          ))\r\n        }\r\n        <div className='d-i-b hover details-label bg-light text-center' onClick={onClick}>\r\n          <i className='fas fa-plus text-lg'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Labels\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Description = () => {\r\n  const { currentBoardId, currentListId, currentCard } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const [text, setText] = useState('');\r\n  const [isEditing, setIsEditing] = useState(false)\r\n\r\n  useEffect(() => {\r\n    currentCard.desc && setText(currentCard.desc);\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const startEdit = () => {\r\n    setIsEditing(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    onSave();\r\n  }\r\n\r\n  const onCancel = () => {\r\n    setIsEditing(false);\r\n  }\r\n\r\n  const onSave = () => {\r\n    if(text !== currentCard.desc) {\r\n      const newCard = {\r\n        ...currentCard,\r\n        desc: text\r\n      }\r\n      updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    }\r\n\r\n    setIsEditing(false);\r\n  }\r\n\r\n  return (\r\n    <div className='pos-rel mb-2'>\r\n      <i className='fas fa-align-left top-0'></i>\r\n      <div className=\"ml-2\">\r\n        <div className='text-85 mb text-bold'>\r\n          Description\r\n        </div>\r\n        <div className={`details-desc ${isEditing && 'd-n'}`} onClick={startEdit}>\r\n          { text ? text : 'add more detailed description' }\r\n        </div>\r\n        <div className={`details-desc-compose-area ${!isEditing && 'd-n'}`}>\r\n          <textarea\r\n            placeholder='enter description'\r\n            className='widht-100 border-0'\r\n            value={text}\r\n            onChange={onChange}\r\n            onBlur={onBlur}>\r\n          </textarea>\r\n          <div className='btn btn-success m' onClick={onSave}>\r\n            Save\r\n          </div>\r\n          <div className='d-i-b text-lg cursor-p m' onClick={onCancel}>\r\n            &times;\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Description\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst CheckListItem = ({ item, clId, hideDone }) => {\r\n  const { currentBoardId, currentListId, currentCard, setOptionsModal, setData } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const onChange = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      checklists: currentCard.checklists.map(c => {\r\n        if(c.id === clId) {\r\n          c.items = c.items.map(i => {\r\n            if(i.id === item.id) {\r\n              item.done = !item.done\r\n            }\r\n            return i\r\n          })\r\n        }\r\n        return c\r\n      })\r\n    }\r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard)\r\n  }\r\n\r\n  const onOptionsClicked = () => {\r\n    setOptionsModal('on', 'checklistItemActions');\r\n    setData({\r\n      item,\r\n      checklistId: clId\r\n    });\r\n  }\r\n\r\n  const  ifDone = {\r\n    textDecoration: item.done ? 'line-through' : 'none'\r\n  }\r\n  \r\n  return (\r\n    <div className={`checklist-item ${(hideDone && item.done) && 'd-n'}`}>\r\n      <input type='checkbox' defaultChecked={item.done} onChange={onChange} className='mt-0 mb-0'/>\r\n      <div style={ifDone} className='d-i-b text-85'>\r\n        { item.text }\r\n      </div>\r\n      <div className='btn btn-narrow text-sm mt-0' onClick={onOptionsClicked}>\r\n        <i className='fas fa-ellipsis-h'></i>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckListItem\r\n","import React, { useState, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport CheckListItem from './CheckListItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Checklist = ({ checklist }) => {\r\n  const { updateCard } = useContext(BoardContext);\r\n  const { currentBoardId, currentListId, currentCard, setCurrentCard, setOptionsModal, setData } = useContext(UserContext);\r\n\r\n  const [text, setText] = useState('')\r\n  const [isAdding, setIsAdding] = useState(false)\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAddItem(); \r\n    }\r\n  }\r\n\r\n  const onDeleteList = () => {\r\n    setOptionsModal('on', 'deleteChecklist');\r\n    setData(checklist.id);\r\n  }\r\n\r\n  const onToggleHideDone = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      checklists: currentCard.checklists.map(c => {\r\n        if(c.id === checklist.id) {\r\n          c.hideDone = !c.hideDone\r\n        }\r\n        return c\r\n      })\r\n    }\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n  }\r\n\r\n  const onStartAdd = () => {\r\n    setIsAdding(true);\r\n  }\r\n\r\n  const onCancelAdd = () => {\r\n    setIsAdding(false);\r\n  }\r\n\r\n  const onAddItem = () => {\r\n    if(text !== '') {\r\n      const newItem = {\r\n        text,\r\n        id: uniqid(),\r\n        done: false\r\n      }\r\n\r\n      const newCard = {\r\n        ...currentCard,\r\n        checklists: currentCard.checklists.map(c => {\r\n          if(c.id === checklist.id) {\r\n            c.items = [...c.items, newItem]\r\n          }\r\n          return c\r\n        })\r\n      }\r\n\r\n      updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n      setCurrentCard(newCard);\r\n      setText('');\r\n    }\r\n  }\r\n\r\n  const getNumberOfDones = () => {\r\n    let num = 0;\r\n\r\n    checklist.items.forEach(i => {\r\n      if(i.done) {\r\n        num++\r\n      }\r\n    })\r\n\r\n    return num\r\n  }\r\n\r\n  const progress = {\r\n    width: `${Math.floor(getNumberOfDones() / checklist.items.length * 100)}%`\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='text-85 mb mt-1'>\r\n        <b>{ checklist.title }</b>\r\n        <div className='float-right'>\r\n          <div\r\n            className={`btn btn-narrow text-85 mr ${getNumberOfDones() === 0 && 'd-n'}`}\r\n            onClick={onToggleHideDone}>\r\n              { checklist.hideDone\r\n                  ? `show checked items (${getNumberOfDones()})`\r\n                  : 'hide compelted items' }\r\n          </div>\r\n          <div className='btn btn-narrow text-85 mr-0' onClick={onDeleteList}>\r\n            Delete\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={`grid-1-10 width-100 ${checklist.items.length === 0 && 'd-n'}`}>\r\n        <div className='text-85 mt'>\r\n          { `${Math.floor(getNumberOfDones() / checklist.items.length * 100)}%` }\r\n        </div>\r\n        <div className='progress-bar'>\r\n          <div style={progress} className='progress'></div>\r\n        </div>\r\n      </div>\r\n      <div className={`mt ml text-85 ${!(checklist.hideDone && getNumberOfDones() === checklist.items.length) && 'd-n'}`}>\r\n        Everything in this checklist is complete!\r\n      </div>\r\n      <div className='mt'>\r\n        {\r\n          checklist.items.map(i => (\r\n            <CheckListItem key={i.id} item={i} clId={checklist.id} hideDone={checklist.hideDone} />\r\n          ))\r\n        }\r\n      </div>\r\n      <div className={`${!isAdding && 'd-n'}`}>\r\n        <input\r\n          type='text'\r\n          className='text-85 p m-0 mt-1 mb'\r\n          placeholder='Add an item'\r\n          value={text}\r\n          onKeyUp={onKeyUp}\r\n          onChange={onChange}/>\r\n        <div className='btn btn-success' onClick={onAddItem}>\r\n          Add\r\n        </div>\r\n        <div className='d-i-b cursor-p text-lg' onClick={onCancelAdd}>\r\n          &times;\r\n        </div>\r\n      </div>\r\n      <div className={`btn mt text-85 ${isAdding && 'd-n'}`} onClick={onStartAdd}>\r\n        Add an item\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Checklist\r\n","import React from 'react';\r\n\r\nimport Checklist from './Checklist';\r\n\r\nconst Checklists = ({ checklists }) => {\r\n  return (\r\n    <div className={`pos-rel mb-2 ${checklists.length === 0 && 'd-n'}`}>\r\n      <i className='fas fa-check-square top-0'></i>\r\n      <div className=\"ml-2\">\r\n        {\r\n          checklists.map(c => (\r\n            <Checklist key={c.id} checklist={c} />\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Checklists\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\n\r\nconst DetailsRightPanel = () => {\r\n  const { currentBoardId, currentListId, currentCard,setCurrentCard, setOptionsModal } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const onLabelClick = () => {\r\n    setOptionsModal('on', 'editCardLabels');\r\n  }\r\n\r\n  const onMemberClick = () => {\r\n    setOptionsModal('on', 'members');\r\n  }\r\n\r\n  const onChecklistClick = () => {\r\n    setOptionsModal('on', 'addChecklist');\r\n  }\r\n\r\n  const onMoveClick = () => {\r\n    setOptionsModal('on', 'moveCard');\r\n  }\r\n\r\n  const onCopyClick = () => {\r\n    setOptionsModal('on', 'copyCard');\r\n  }\r\n\r\n  const onWatchClick = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      watching: !currentCard.watching\r\n    }\r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    setCurrentCard(newCard);\r\n  }\r\n\r\n  const onDeleteClick = () => {\r\n     setOptionsModal('on', 'deleteCard');\r\n  }\r\n\r\n  return (\r\n    <div className='details-right-panel'>\r\n      <section>\r\n        <h5>\r\n          ADD TO CARD\r\n        </h5>\r\n        <div onClick={onLabelClick}>\r\n          <i className='fas fa-tag'></i>\r\n          Label\r\n        </div>\r\n        <div onClick={onMemberClick}>\r\n          <i className='fas fa-user'></i>\r\n          Memeber\r\n        </div>\r\n        <div onClick={onChecklistClick}>\r\n          <i className='fas fa-check-square'></i>\r\n          checkList\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <h5>\r\n          ACTIONS\r\n        </h5>\r\n        <div onClick={onMoveClick}>\r\n          <i className='fas fa-arrow-right'></i>\r\n          move\r\n        </div>\r\n        <div onClick={onCopyClick}>\r\n          <i className='fas fa-clone'></i>\r\n          copy\r\n        </div>\r\n        <div onClick={onWatchClick} className='pos-rel'>\r\n          <i className='fas fa-eye'></i>\r\n          watch\r\n          <i className={`fas fa-check ${!currentCard.watching && 'd-n'} btn btn-success text-50 watching-check btn-square`}></i>\r\n        </div>\r\n        <div onClick={onDeleteClick} className='text-danger'>\r\n          <i className='fas fa-trash'></i>\r\n          delete\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailsRightPanel\r\n","import React, { useContext } from 'react';\r\nimport Labels from './details/Labels'\r\nimport Description from './details/Description'\r\nimport Checklists from './details/Checklists'\r\nimport DetailsRightPanel from './details/DetailsRightPanel'\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst DetailsModal = () => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { currentBoardId, currentListId, currentCard, setModal, setOptionsModal } = userContext;\r\n  const { getList } = boardContext;\r\n\r\n  const onClose = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const onListClick  = () => {\r\n    setOptionsModal('on', 'moveCard');\r\n  }\r\n\r\n  return (\r\n    <div className='details-modal-container'>\r\n      <div className='details-modal-header'>\r\n        <div className='close text-lg' onClick={onClose}>\r\n          &times;\r\n        </div>\r\n        <i className='fas fa-th-list mr-1'></i>\r\n        { currentCard.text }\r\n        <div className='ml-2 mt text-85'>\r\n          in the List <div onClick={onListClick} className='d-i-b mr test cursor-p text-underline'>{ getList(currentBoardId, currentListId).title }</div>\r\n          <i className={`fas fa-eye ${!currentCard.watching && 'd-n'}`}></i>\r\n        </div>\r\n      </div>\r\n      <div className='details-modal-body grid-4-1'>\r\n        {/* left column */}\r\n        <div>\r\n          <Labels labels={currentCard.labels} />\r\n          {/* <Members /> */}\r\n          <Description />\r\n          <Checklists checklists={currentCard.checklists} />\r\n        </div>\r\n        {/* right column */}\r\n        <DetailsRightPanel />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailsModal\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\n\r\nimport ListItemLabels from '../pages/board/ListItemLabels';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst FastEditModal = () => {\r\n  const theTextarea = useRef(null);\r\n\r\n  const {\r\n    currentBoardId,\r\n    currentListId,\r\n    fastEditModalPos,\r\n    currentCard,\r\n    clearCurrentCard,\r\n    setOptionsModal,\r\n    setModal,\r\n    bigLabels } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  useEffect(() => {\r\n    setText(currentCard.text);\r\n    theTextarea.current.focus();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const modalPos = {\r\n    position: 'absolute',\r\n    top: fastEditModalPos.top + 'px',\r\n    left: fastEditModalPos.left + 'px'\r\n  }\r\n\r\n  const rightWidth = {\r\n    width: fastEditModalPos.width + 'px'\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onUpdate();\r\n    }\r\n  }\r\n\r\n  const onUpdate = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      text\r\n    }\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    clearCurrentCard();\r\n    setModal('off');\r\n  }\r\n\r\n  const onAtionsClick = (e) => {\r\n    if(e.target.classList.contains('fas')) {\r\n      setOptionsModal('on', e.target.parentElement.id);\r\n    } else if(e.target.classList.contains('func-action-btn')) {\r\n      setOptionsModal('on', e.target.id);\r\n    } else {\r\n      setModal('off');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={modalPos} className='modal-content grid-2 gap-half'>\r\n      <div style={rightWidth} className='fast-edit-modal-right-container'>\r\n        <div className='fast-edit-modal-right'>\r\n          <ListItemLabels father='fastEditModal' bigLabels={bigLabels} labels={currentCard.labels} />\r\n          <textarea\r\n            ref={theTextarea}\r\n            className='m-0 border-0 p-0'\r\n            value={text}\r\n            onChange={onChange}\r\n            onKeyUp={onKeyUp}>\r\n          </textarea>\r\n        </div>\r\n        <div className='btn btn-success mt' onClick={onUpdate}>\r\n          Save\r\n        </div>\r\n      </div>\r\n      <div className='fast-edit-modal-action-container' onClick={onAtionsClick}>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='editCardLabels'>\r\n            <i className='fas fa-tag mr'></i>\r\n            Edit labels\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='members'>\r\n            <i className='fas fa-user mr'></i>\r\n            Change members\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='moveCard'>\r\n            <i className='fas fa-arrow-right mr'></i>\r\n            Move\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='copyCard'>\r\n            <i className='fas fa-clone mr'></i>\r\n            copy\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='deleteCard'>\r\n            <i className='fas fa-trash mr'></i>\r\n            Delete card\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FastEditModal\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport AddBoardModal from './AddBoardModal';\r\nimport DetailsModal from './DetailsModal';\r\nimport FastEditModal from './FastEditModal';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nimport './modals.css';\r\n\r\nconst Modal = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { modalStatus, modalType, setModal } = userContext;\r\n\r\n  const [showModal, setShowModal] = useState('off');\r\n  \r\n  useEffect(() => {\r\n    setShowModal(modalStatus/* from useState */);\r\n    // eslint-disable-next-line\r\n  }, [modalStatus])\r\n\r\n  const onClick = (e) => {\r\n    if(e.target.classList.contains('modal')) {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const modalDisplay = {\r\n    display: showModal === 'on' ? 'block' : 'none'\r\n  }\r\n\r\n  return (\r\n    <div \r\n      style={modalDisplay}\r\n      className='modal'\r\n      onClick={onClick}>\r\n      {\r\n        modalType === 'addBoardModal' && <AddBoardModal />\r\n      }\r\n      {\r\n        modalType === 'detailsModal' && <DetailsModal />\r\n      }\r\n      {\r\n        modalType === 'fastEditModal' && <FastEditModal />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useContext } from 'react'\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst DeleteCard = () => {\r\n  const { currentBoardId, currentListId, currentCard, setModal, setOptionsModal } = useContext(UserContext);\r\n  const { deleteCard } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const onClick = () => {\r\n    deleteCard(currentBoardId, currentListId, currentCard.id);\r\n    setModal('off');\r\n    setOptionsModal('off');\r\n    setAlert('card deleted', 'dark');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='text-85 m mb-1'>\r\n        are you sure you want to delete this card?\r\n        its permanent\r\n      </div>\r\n      <div className='btn btn-danger btn-block hover-op-10 hover-lighten' onClick={onClick}>\r\n        Delete\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteCard\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst MoveCard = () => {\r\n  const boardsSelect = useRef(null);\r\n  const listSelect = useRef(null);\r\n  const posSelect = useRef(null);\r\n  \r\n  const [destBoardId, setDestBoardId] = useState('');\r\n  const [destListId, setDestListId] = useState('');\r\n  const [destPos, setDestPos] = useState(0);\r\n\r\n  const { currentBoardId, currentListId, currentCard, modalType, setModal, setOptionsModal } = useContext(UserContext);\r\n  const { boards, getBoard, getList, moveCard } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    setDestBoardId(currentBoardId);\r\n    setDestListId(currentListId);\r\n    setDestPos(getList(currentBoardId, currentListId).items.findIndex(i => i.id === currentCard.id) + 1);\r\n    // eslint-disable-next-line\r\n  }, [currentBoardId, currentListId]);\r\n\r\n  const onBoardDestChange = (e) => {\r\n    setDestBoardId(e.target.value);\r\n    setDestListId(getBoard(e.target.value).lists[0].id)\r\n  }\r\n\r\n  const onListDestChange = (e) => {\r\n    setDestListId(e.target.value);\r\n  }\r\n\r\n  const onPosDestChange = (e) => {\r\n    setDestPos(Number(e.target.value) - 1);\r\n  }\r\n\r\n  const onMove = () => {\r\n    moveCard(currentBoardId, currentListId, currentCard.id, destBoardId, destListId, destPos, currentCard);\r\n    setOptionsModal('off');\r\n    if(modalType === 'fastEditModal') {\r\n      setModal('off');\r\n    }\r\n    setAlert('card was moved', 'success');\r\n  }\r\n\r\n  return (\r\n    <div className='move-card-modal text-85'>\r\n      {/* board selectList */}\r\n      <section>\r\n        <div className='p'>\r\n          board\r\n        </div>\r\n        <select ref={boardsSelect} value={destBoardId} onChange={onBoardDestChange} className='mb'>\r\n          {\r\n            boards.map(board => (\r\n              board.lists.length !== 0 &&\r\n              <option key={board.id} value={board.id}>{ board.title }{ board.id === currentBoardId && ' (current)' }</option>\r\n            ))\r\n          }\r\n        </select>\r\n      </section>\r\n      {/* list selectList */}\r\n      <section>\r\n        <div className='p'>\r\n          list\r\n        </div>\r\n        <select ref={listSelect} value={destListId} onChange={onListDestChange} className='mb'>\r\n          {\r\n            destBoardId && getBoard(destBoardId).lists.map((list, index) => (\r\n              <option key={list.id} value={list.id}>{ list.title }{ list.id === currentListId && '(current)' }</option>\r\n            ))\r\n          }\r\n        </select>\r\n      </section>\r\n      {/* posotion selectList */}\r\n      <section>\r\n        <div className='p'>\r\n          position\r\n        </div>\r\n        <select ref={posSelect} value={destPos} onChange={onPosDestChange} className='mb'>\r\n          {\r\n            destBoardId\r\n              && destListId\r\n                && getList(destBoardId, destListId).items.map((item, index) => (\r\n                    <option key={item.id} value={index + 1}>{ index + 1 }{ item.id === currentCard.id && ' (current)' }</option>\r\n                  ))\r\n          }\r\n          {\r\n            destBoardId\r\n              && destListId\r\n                && (destListId !== currentListId)\r\n                  &&  <option value={getList(destBoardId, destListId).items.length + 1}>{ getList(destBoardId, destListId).items.length + 1 }</option>\r\n          }\r\n        </select>\r\n      </section>\r\n      <div className='btn btn-success' onClick={onMove}>\r\n        Move\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoveCard","import React, { useState, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst AddChecklist = () => {\r\n  const { currentBoardId, currentListId, currentCard, setCurrentCard, setOptionsModal } = useContext(UserContext)\r\n  const { updateCard } = useContext(BoardContext)\r\n\r\n  const [text, setText] = useState('checklist');\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onAdd = () => {\r\n    const newChecklist = {\r\n      title: text,\r\n      id: uniqid(),\r\n      hideDone: false,\r\n      items: []\r\n    }\r\n\r\n    const newCard = {\r\n      ...currentCard,\r\n      checklists: [...currentCard.checklists, newChecklist]\r\n    }\r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n\r\n    setCurrentCard(newCard);\r\n\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input value={text} onChange={onChange} type='text' className='m-0 text-85 p'/>\r\n      <div className='btn mt-1 btn-success' onClick={onAdd}>\r\n        Add\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddChecklist\r\n","import React, { useContext } from 'react'\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst DeleteChecklist = () => {\r\n  const { currentBoardId, currentListId, currentCard, setCurrentCard, setOptionsModal, data } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const onClick = () => {\r\n    const newListOfChecklists = currentCard.checklists.filter(l => l.id !== data)\r\n\r\n    const newCard = {\r\n      ...currentCard,\r\n      checklists: newListOfChecklists\r\n    }    \r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    setCurrentCard(newCard);\r\n\r\n    setOptionsModal('off');\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div className='p text-85'>\r\n        are you sure you want to delete this checklist?\r\n      </div>\r\n      <div className='btn btn-block btn-danger mt' onClick={onClick}>\r\n        Delete Checklist\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteChecklist\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst ChecklistItemActions = () => {\r\n  const { currentBoardId, currentListId, currentCard, setOptionsModal,  data } = useContext(UserContext)\r\n  const { addCard, updateCard } = useContext(BoardContext)\r\n\r\n  const onDelete = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      checklists: currentCard.checklists.map(c => {\r\n        if(c.id === data.checklistId) {\r\n          c.items = c.items.filter(i => i.id !== data.item.id)\r\n        }\r\n        return c\r\n      })\r\n    }\r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const onConvertToCard = () => {\r\n    onDelete();\r\n    addCard(data.item.text, currentListId, currentBoardId);\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='list-action-item' onClick={onConvertToCard}>\r\n        convert to card\r\n      </div>\r\n      <div className='list-action-item' onClick={onDelete}>\r\n        delete\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChecklistItemActions\r\n","import React, { useState } from 'react';\r\n\r\nconst EditCardLabelItem = ({ label, setLabelId, goToEditLabel, currentCard }) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const onClick = () => {\r\n    setLabelId(label.id);\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    setHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setHover(false);\r\n  }\r\n\r\n  const onPenClick = () => {\r\n    goToEditLabel(label);\r\n  }\r\n\r\n  return (\r\n    <div className='label-item mb width-100'>\r\n      <div\r\n        className={`rounded-lg d-i-b text-sm label-color label-color-${label.colorName} ${hover && `label-color-${label.colorName}-hover`}`}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n        onClick={onClick}>\r\n        {\r\n          currentCard.labels.indexOf(label.id) !== -1\r\n            && <i className='label-color-check fas fa-check text-white float-right'></i>\r\n        }\r\n        <div className='label-color-text text-85 ml text-white'>\r\n          { label.name !== '' && label.name }\r\n        </div>\r\n      </div>\r\n      <div className='btn btn-no-bg rounded-lg d-i-b float-right p' onClick={onPenClick}>\r\n        <i className='fas fa-pen text-sm'></i>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditCardLabelItem\r\n","import React, { useContext } from 'react';\r\n\r\nimport EditCardLabelItem from './EditCardLabelItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst EditCardLabels = () => {\r\n  const { currentBoardId, currentListId, currentCard, setCurrentCard, setOptionsModal, setOptionsModalStep } = useContext(UserContext);\r\n  const { updateCard, labels } = useContext(BoardContext);\r\n\r\n\r\n  const setLabel = (id) => {\r\n    let newCard;\r\n    if(currentCard.labels.indexOf(id) === -1) {\r\n      // card hasnt this id / add the id\r\n      newCard = {\r\n        ...currentCard,\r\n        labels: [...currentCard.labels, id]\r\n      }\r\n    } else {\r\n      // card has this id / remove the id\r\n      newCard = {\r\n        ...currentCard,\r\n        labels: currentCard.labels.filter(l => l !== id)\r\n      }\r\n    }\r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    setCurrentCard(newCard);\r\n  }\r\n\r\n  const goToEditLabel = (label) => {\r\n    setOptionsModalStep('on', 'editCardLabels', {label, type: 'edit'});\r\n    setOptionsModal('on', 'editLabel');\r\n  }\r\n\r\n  const onCreateClick = () => {\r\n    setOptionsModalStep('on', 'editCardLabels', {type: 'create'});\r\n    setOptionsModal('on', 'editLabel');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input type='text' placeholder='search labels...' className='mt mb-1 text-85 p'/>\r\n      <div className='text-85 mb'>\r\n        Labels\r\n      </div>\r\n      {\r\n        labels.map(l => (\r\n          <EditCardLabelItem key={l.id} label={l} goToEditLabel={goToEditLabel} setLabelId={setLabel} currentCard={currentCard} />\r\n        ))\r\n      }\r\n      <div className='btn btn-block mt-1 text-85 mt mb' onClick={onCreateClick}>\r\n        create new label\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditCardLabels\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst EditLabel = () => {\r\n  const [text, setText] = useState('');\r\n  const [colorName, setColorName] = useState(null);\r\n\r\n  const {\r\n    setOptionsModal,\r\n    setOptionsModalStep,\r\n    currentCard,\r\n    currentBoardId,\r\n    currentListId,\r\n    setCurrentCard,\r\n    optionsModalStepData: data } = useContext(UserContext);\r\n  const { labels, colors, updateCard, addLabel, updateLabel, deleteLabel } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    data.type === 'edit' && setText(data.label.name);\r\n    data.type === 'edit' ? setColorName(data.label.colorName) : setColorName('green');\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onColorClick = (e) => {\r\n    setColorName(e.target.id);\r\n  }\r\n\r\n  const onSave = () => {\r\n    if(data.type === 'edit') {\r\n      updateLabel(text, colorName, data.label.id);\r\n      setOptionsModal('on', 'editCardLabels');\r\n      setOptionsModalStep('off');\r\n      setAlert('Label updated', 'success');\r\n    } else if(data.type === 'create') {\r\n      let is = false;\r\n      \r\n      labels.forEach(label => {\r\n        if(label.colorName === colorName) {\r\n          if(label.name === text) {\r\n            is = true\r\n          }\r\n        }\r\n      });\r\n\r\n      if(!is) {\r\n        const newId = uniqid();\r\n        // add to list of labels in board state\r\n        addLabel(text, colorName, newId);\r\n        const newCard = {\r\n          ...currentCard,\r\n          labels: [...currentCard.labels, newId]\r\n        }\r\n        // add label to current board\r\n        updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n        setCurrentCard(newCard);\r\n        setAlert('Label created', 'success');\r\n      } else {\r\n        setAlert('Label already exits', 'light');\r\n      }\r\n\r\n      setOptionsModal('on', 'editCardLabels');\r\n      setOptionsModalStep('off');\r\n    }\r\n  }\r\n\r\n  const onDelete = () => {\r\n    deleteLabel(data.label.id);\r\n    setOptionsModal('on', 'editCardLabels');\r\n    setOptionsModalStep('off');\r\n    setAlert('Label deleted', 'dark');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input type='text' className='m-0 text-85 p' value={text} placeholder='enter label name' onChange={onChange}/>\r\n      <div className='text-85 mt mb'>\r\n        pick a color\r\n      </div>\r\n      <div className='mb'>\r\n        {\r\n          colors.map(color => (\r\n            <div key={color.name} style={{ background: color.color }} className='color-for-select hover-lighten' id={color.name} onClick={onColorClick}>\r\n              { \r\n                color.name === colorName\r\n                  && <i className='fas fa-check text-85 text-white m-0'></i> \r\n              }\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n      <div>\r\n        <div className='btn btn-success' onClick={onSave}>\r\n          {\r\n            data.type === 'edit'\r\n              ? 'Save'\r\n              : 'Create'\r\n          }\r\n        </div>\r\n        {\r\n          data.type === 'edit'\r\n            &&  <div className='btn btn-danger float-right' onClick={onDelete}>\r\n                  Delete\r\n                </div>\r\n        }\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditLabel\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst ListActions = () => {\r\n  const {\r\n    currentBoardId,\r\n    currentListId,\r\n    setOptionsModal,\r\n    setOptionsModalStep,\r\n    setAddCardFromListActions\r\n  } = useContext(UserContext);\r\n  const { getList, setWatching, sortList } = useContext(BoardContext);\r\n\r\n  const onAddCardClicked = () => {\r\n    setAddCardFromListActions(currentListId);\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const onCopyClicked = () => {\r\n    setOptionsModal('on', 'copyList');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  const onMoveClicked = () => {\r\n    setOptionsModal('on', 'moveList');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  const onWatchClicked = () => {\r\n    setWatching(currentBoardId, currentListId);\r\n  }\r\n\r\n  const onMoveAllCardsClicked = () => {\r\n    setOptionsModal('on', 'moveAllCards');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  const onSortClicked = () => {\r\n    sortList(currentBoardId, currentListId);\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const onDeleteAllCardsClicked = () => {\r\n    setOptionsModal('on', 'deleteAllCards');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  const onDeleteClicked = () => {\r\n    setOptionsModal('on', 'deleteList');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='list-action-item' onClick={onAddCardClicked}>\r\n        add card...\r\n      </div>\r\n      <div className='list-action-item' onClick={onCopyClicked}>\r\n        copy list\r\n      </div>\r\n      <div className='list-action-item' onClick={onMoveClicked}>\r\n        move list\r\n      </div>\r\n      <div className='list-action-item' onClick={onWatchClicked}>\r\n        watch\r\n        {\r\n          getList(currentBoardId, currentListId).watching\r\n            && <i className='fas fa-check ml text-85'></i>\r\n        }\r\n      </div>\r\n      <hr />\r\n      <div className='list-action-item' onClick={onMoveAllCardsClicked}>\r\n        move all cards in this list\r\n      </div>\r\n      <div className='list-action-item' onClick={onSortClicked}>\r\n        sort...\r\n      </div>\r\n      <hr />\r\n      <div className='list-action-item delete-list' onClick={onDeleteAllCardsClicked}>\r\n        delete all cards in this list\r\n      </div>\r\n      <div className='list-action-item delete-list' onClick={onDeleteClicked}>\r\n        delete this list\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListActions\r\n","import React, { useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst DeleteList = () => {\r\n  const { deleteList } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n\r\n  const onClick = () => {\r\n    deleteList(currentBoardId, currentListId);\r\n    setOptionsModal('off');\r\n    setAlert('list deleted', 'dark');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-1 mt p-1\">\r\n        delete this list ?\r\n        its permanent\r\n      </div>\r\n      <div className=\"btn btn-block btn-danger\" onClick={onClick}>\r\n        Delete\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteList\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst CopyList = () => {\r\n  const [name, setName] = useState('');\r\n  \r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n  const { getList, copyList } = useContext(BoardContext);\r\n\r\n  useEffect(() => {\r\n    setName(getList(currentBoardId, currentListId).title);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onCLick = () => {\r\n    copyList(currentBoardId, currentListId, name);\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setName(e.target.value);\r\n    // console.log(e.trgte.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"text-85\">\r\n        name\r\n      </div>\r\n      <input type=\"text\" className=\"m-0 mb mt pl-1\" value={name} onChange={onChange} />\r\n      <div className=\"btn btn-success mt-1\" onClick={onCLick}>\r\n        Copy List\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CopyList\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst MoveList = () => {\r\n  const boardsSelect = useRef(null);\r\n  const PosSelect = useRef(null);\r\n  \r\n  const [destBoardId, setDestBoardId] = useState(null);\r\n  const [desPos, setDestPos] = useState(0);\r\n\r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n  const { boards, getBoard, moveList } = useContext(BoardContext);\r\n\r\n  useEffect(() => {\r\n    setDestBoardId(currentBoardId);\r\n    setDestPos(getBoard(currentBoardId).lists.findIndex(l => l.id === currentListId) + 1);\r\n    boardsSelect.current.value = currentBoardId;\r\n    // eslint-disable-next-line\r\n  }, [currentBoardId, currentListId]);\r\n\r\n  const onBoardDestChange = (e) => {\r\n    setDestBoardId(e.target.value);\r\n  }\r\n\r\n  const onListDestChange = (e) => {\r\n    setDestPos(Number(e.target.value) - 1);\r\n  }\r\n\r\n  const onMove = () => {\r\n    moveList(currentBoardId, currentListId, destBoardId, desPos);\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  return (\r\n    <div className='move-list-modal text-85'>\r\n      <section>\r\n        <div className=\"p\">\r\n          board\r\n        </div>\r\n        <select ref={boardsSelect} onChange={onBoardDestChange} className='mb'>\r\n          {\r\n            boards.map(board => (\r\n              <option key={board.id} value={board.id}>{ board.title }{ board.id === currentBoardId && ' (current)' }</option>\r\n            ))\r\n          }\r\n        </select>\r\n      </section>\r\n      <section>\r\n        <div className=\"p\">\r\n          position\r\n        </div>\r\n        <select ref={PosSelect} value={desPos} onChange={onListDestChange} className='mb'>\r\n          {\r\n            destBoardId && getBoard(destBoardId).lists.map((list, index) => (\r\n              <option key={list.id} value={index + 1}>{ index + 1 }{ list.id === currentListId && ' (current)' }</option>\r\n            ))\r\n          }\r\n          {\r\n            destBoardId\r\n              && (destBoardId !== currentBoardId)\r\n              && <option value={getBoard(destBoardId).lists.length + 1}>{ getBoard(destBoardId).lists.length + 1 }</option>\r\n          }\r\n        </select>\r\n      </section>\r\n      <div className='btn btn-success' onClick={onMove}>\r\n        Move\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoveList\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst DeleteAllCards = () => {\r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n  const { getList, deleteAllCards } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const onClick = () => {\r\n    setOptionsModal('off');\r\n    if(getList(currentBoardId, currentListId).items.length !== 0) {\r\n      setAlert('all cards were deleted!!', 'dark');\r\n      deleteAllCards(currentBoardId, currentListId);\r\n    } else {\r\n      setAlert('no card to delete!', 'warning', 2500);\r\n      setTimeout(() => {\r\n        setAlert('enter some Card first', 'light', 2500);\r\n        setTimeout(() => {\r\n          setAlert('then try to delete cards', 'primary', 2500);\r\n          setTimeout(() => {\r\n            setAlert('you undrestand?', 'danger', 2500);\r\n            setTimeout(() => {\r\n              setAlert('what card you want me to delete?', 'danger', 2500);\r\n            }, 2500);\r\n          }, 2500);\r\n        }, 2500);\r\n      }, 2500);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='p'>\r\n        are you sure you want to delete all cards in the list <b>{ getList(currentBoardId, currentListId).title }</b>?\r\n      </div>\r\n      <div className='btn btn-block btn-danger mt-1' onClick={onClick}>\r\n        Delete All Cards\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteAllCards\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst MoveAllCards = () => {\r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n  const { getBoard, moveAllCards } = useContext(BoardContext);\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('func-not')) {\r\n      moveAllCards(currentBoardId, currentListId, e.target.id);\r\n      setOptionsModal('off');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='func-not text-85' onClick={onClick}>\r\n      {\r\n        getBoard(currentBoardId).lists.map(list => {\r\n          if(list.id === currentListId) {\r\n            return <div key={list.id} id={list.id} className=\"func-not list-action-item item-choosen\">\r\n                      { list.title }\r\n                   </div>\r\n          } else {\r\n            return <div key={list.id} id={list.id} className=\"list-action-item\">\r\n                      { list.title }\r\n                   </div>\r\n          }\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoveAllCards\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport DeleteCard from './options/DeleteCard';\r\nimport MoveCard from './options/MoveCard';\r\nimport AddChecklist from './options/AddChecklist';\r\nimport DeleteChecklist from './options/DeleteChecklist';\r\nimport ChecklistItemActions from './options/ChecklistItemActions';\r\nimport EditCardLabels from './options/EditCardLabels';\r\nimport EditLabel from './options/EditLabel';\r\nimport ListActions from './options/ListActions';\r\nimport DeleteList from './options/DeleteList';\r\nimport CopyList from './options/CopyList';\r\nimport MoveList from './options/MoveList';\r\nimport DeleteAllCards from './options/DeleteAllCards';\r\nimport MoveAllCards from './options/MoveAllCards';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nimport './modals.css';\r\n\r\nconst OptionsModal = () => {\r\n  const container = useRef(null);\r\n\r\n  const userContext = useContext(UserContext);\r\n\r\n  const {\r\n    optionsModalStatus,\r\n    optionsModalType,\r\n    optionsModalStepStatus,\r\n    optionsModalStepType,\r\n    mousePos,\r\n    setOptionsModal,\r\n    setOptionsModalStep} = userContext;\r\n\r\n  const [showModal, setShowModal] = useState('off');\r\n  const [pos, setPos] = useState({});\r\n  \r\n  useEffect(() => {\r\n    setShowModal(optionsModalStatus/* from useState */);\r\n    setOptionsPos();\r\n    // eslint-disable-next-line\r\n  }, [optionsModalStatus, mousePos])\r\n\r\n  const onClick = (e) => {\r\n    if(e.target.id === 'options-modal') {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  const onBack = () => {\r\n    setOptionsModal('on', optionsModalStepType);\r\n    setOptionsModalStep('off');\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const setOptionsPos = () => {\r\n    setTimeout(() => {\r\n      if(mousePos) {\r\n        let rect;\r\n        rect = container.current.getBoundingClientRect();\r\n\r\n        if(window.innerWidth - mousePos.x - 10 < rect.width && window.innerHeight - mousePos.y > rect.height) {\r\n          setPos({\r\n            right: 10,\r\n            top: mousePos.y + 10 + 'px'\r\n          });\r\n        } else if(window.innerHeight - mousePos.y - 10 < rect.height && window.innerWidth - mousePos.x > rect.width) {\r\n          setPos({\r\n            left: mousePos.x + 10 + 'px',\r\n            bottom: 10\r\n          })\r\n        } else if(window.innerHeight - mousePos.y - 10 < rect.height && window.innerWidth - mousePos.x - 10 < rect.width) {\r\n            setPos({\r\n            right: 10,\r\n            bottom: 10\r\n          })\r\n        } else {\r\n          setPos({\r\n            left: mousePos.x + 10 + 'px',\r\n            top: mousePos.y + 10 + 'px'\r\n          })\r\n        }\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  const modalDisplay = {\r\n    display: showModal === 'on' ? 'block' : 'none'\r\n  }\r\n\r\n  return (\r\n    <div \r\n      style={modalDisplay}\r\n      id='options-modal'\r\n      onClick={onClick}>\r\n        <div ref={container} className='options-modal-container' style={pos}>\r\n          <div className='options-modal-header'>\r\n            {\r\n              optionsModalStepStatus === 'on'\r\n                && <div className='back d-i-b float-left cursor-p lighten-30 hover-darken' onClick={onBack}>\r\n                      <i className='fas fa-angle-left'></i>\r\n                    </div>\r\n            }\r\n            <div className=\"close\" onClick={closeModal}>\r\n              &times;\r\n            </div>\r\n            { optionsModalType === 'editCardLabels' && 'Labels' }\r\n            { optionsModalType === 'editLabel' && 'Edit Label' }\r\n            { optionsModalType === 'moveCard' && 'Move card' }\r\n            { optionsModalType === 'copyCard' && 'Copy card' }\r\n            { optionsModalType === 'members' && 'Members' }\r\n            { optionsModalType === 'addChecklist' && 'Add Cheklist' }\r\n            { optionsModalType === 'deleteChecklist' && 'Delete Cheklist?' }\r\n            { optionsModalType === 'checklistItemActions' && 'Item Actions' }\r\n            { optionsModalType === 'deleteCard' && 'Delete Card?' }\r\n            { optionsModalType === 'listActions' && 'List Actions' }\r\n            { optionsModalType === 'deleteList' && 'Delete List?' }\r\n            { optionsModalType === 'copyList' && 'Copy List' }\r\n            { optionsModalType === 'moveList' && 'Move List' }\r\n            { optionsModalType === 'deleteAllCards' && 'Empty the List?' }\r\n            { optionsModalType === 'moveAllCards' && 'select board' }\r\n          </div>\r\n          <div className='options-modal-body'>\r\n            { optionsModalType === 'editCardLabels' && <EditCardLabels /> }\r\n            { optionsModalType === 'moveCard' && <MoveCard /> }\r\n            { optionsModalType === 'addChecklist' && <AddChecklist /> }\r\n            { optionsModalType === 'deleteChecklist' && <DeleteChecklist /> }\r\n            { optionsModalType === 'checklistItemActions' && <ChecklistItemActions /> }\r\n            { optionsModalType === 'deleteCard' && <DeleteCard /> }\r\n            { optionsModalType === 'editLabel' && <EditLabel /> }\r\n            { optionsModalType === 'listActions' && <ListActions /> }\r\n            { optionsModalType === 'deleteList' && <DeleteList /> }\r\n            { optionsModalType === 'copyList' && <CopyList /> }\r\n            { optionsModalType === 'moveList' && <MoveList /> }\r\n            { optionsModalType === 'deleteAllCards' && <DeleteAllCards /> }\r\n            { optionsModalType === 'moveAllCards' && <MoveAllCards /> }\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OptionsModal\r\n","import React from 'react'\r\n\r\nconst AlertItem = ({ alert, deleteAlert }) => {\r\n  const onClick = () => {\r\n    deleteAlert(alert.id);\r\n  }\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      className={`trello-alert-item alert rounded-lg alert-${alert.type}`}>\r\n        <div className='trello-alert-item-msg'>\r\n          { alert.msg.charAt(0).toUpperCase() + alert.msg.slice(1) }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertItem\r\n","import React, { useContext } from 'react';\r\nimport AlertItem from './AlertItem';\r\n\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alerts = () => {\r\n  const { alerts, deleteAlert } = useContext(AlertContext);\r\n\r\n  return (\r\n    <div className='trello-alerts-wrapper'>\r\n      {\r\n        alerts.map(a => (\r\n          <AlertItem\r\n            key={a.id}\r\n            alert={a}\r\n            deleteAlert={deleteAlert} />\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alerts\r\n","import React, { useEffect, useContext } from 'react';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Home from './components/pages/home/Home';\r\nimport Board from './components/pages/board/Board';\r\nimport Modal from './components/modal/Modal';\r\nimport OptionsModal from './components/modal/OptionsModal';\r\nimport Alerts from './components/alert/Alerts';\r\n\r\nimport UserContext from './context/user/userContext';\r\n\r\nimport './trello-clone.css';\r\nimport './trello-clone-keyframes.css';\r\n\r\nconst App = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const {\r\n    setCurrentBoardId,\r\n    currentBoardId,\r\n    setMousePos,\r\n    optionsModalStatus } = userContext\r\n\r\n  // to display board page for development purposes\r\n  useEffect(() => {\r\n    setCurrentBoardId('b1');\r\n    console.log('focus on inputs')\r\n    console.log('change the word \"item\" to card in context and stuff')\r\n    console.log('sort the list actions ( put them in [dasteh] )')\r\n    console.log('setScrollIfLonger if board copied')\r\n    console.log('newCardActions in boardList does nothing yet ( add card must be editted to send an object to the context not a text )')\r\n    console.log('in final deploy, must change the add functions, ex. => i have prop on cards, but in addCard func, there is no \"whatchin: false\" so it must be changed as the other, add label (probalbely not), addList, add Board, and ...')\r\n    console.log('search labels')\r\n    console.log('add members to details modal next to labels')\r\n    console.log('style checkboxes')\r\n    console.log('scroll of details modal')\r\n    console.clear()\r\n    console.log('there are alot notes above this line')\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onClick = (e) => {\r\n    if(optionsModalStatus === 'off') {\r\n      setMousePos(e.clientX, e.clientY)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div onClick={onClick} id='all-wrapper'>\r\n      <Navbar />\r\n      <Modal />\r\n      <OptionsModal />\r\n      <Alerts />\r\n      { !currentBoardId\r\n          ? <Home />\r\n          : <Board />\r\n      }\r\n      {/* <Home /> */}\r\n      {/* <Board /> */}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\nexport default App","import {\r\n  ADD_BOARD,\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_WATCHING,\r\n  SET_DESCRIBTION,\r\n  ADD_LIST,\r\n  DELETE_LIST,\r\n  DELETE_ALL_CARDS,\r\n  MOVE_ALL_CARDS,\r\n  SET_LIST_TITLE,\r\n  COPY_LIST,\r\n  SORT_LIST,\r\n  MOVE_LIST,\r\n  ADD_CARD,\r\n  UPDATE_CARD,\r\n  DELETE_CARD,\r\n  MOVE_CARD,\r\n  ADD_LABEL,\r\n  UPDATE_LABEL,\r\n  DELETE_LABEL\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_BOARD:\r\n      return {\r\n        ...state,\r\n        boards: [...state.boards, action.payload]\r\n      }\r\n    case SET_TITLE:\r\n      return {\r\n        ...state,\r\n        baords: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.title = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_STAR:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.starred = !b.starred\r\n          }\r\n          return b\r\n        }),\r\n        listOfStarredBoardsIds: action.payload.newListOfStarredBoardsIds\r\n      }\r\n    case SET_WATCHING:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.watching = !l.watching\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_DESCRIBTION:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.describtion = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.lists.push(action.payload.newList)\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case COPY_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists.splice(b.lists.findIndex(l => l.id === action.payload.listId) + 1, 0, action.payload.newList)\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SORT_LIST:\r\n     return {\r\n       ...state,\r\n       boards: state.boards.map(b => {\r\n         if(b.id === action.payload.boardId) {\r\n           b.lists = b.lists.map(l => {\r\n            if(l.id === action.payload.listId) {\r\n              l.items = action.payload.newItems\r\n            }\r\n            return l\r\n           })\r\n         }\r\n         return b\r\n       })\r\n     }\r\n    case MOVE_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.firstBoardId) {\r\n            board.lists.splice(action.payload.firstIndex, 1)\r\n          }\r\n          if(board.id === action.payload.destBoardId) {\r\n            board.lists.splice(action.payload.destIndex, 0, action.payload.list)\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.boardId) {\r\n            board.lists = board.lists.filter(list => list.id !== action.payload.listId);\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case DELETE_ALL_CARDS:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items = []\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case MOVE_ALL_CARDS:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.firstListId) {\r\n                l.items = []\r\n              }\r\n              if(l.id === action.payload.destListId) {\r\n                l.items = l.items.concat(action.payload.newItems)\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items.push(action.payload.newCard);\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    \r\n    case SET_LIST_TITLE:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.boardId) {\r\n            board.lists = board.lists.map(list => {\r\n              if(list.id === action.payload.listId) {\r\n                list.title = action.payload.newTitle\r\n              }\r\n              return list\r\n            })\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case UPDATE_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.boardId) {\r\n            board.lists = board.lists.map(list => {\r\n              if(list.id === action.payload.listId) {\r\n                list.items = list.items.map(item => (\r\n                  item.id === action.payload.cardId ? action.payload.newCard : item\r\n                ))\r\n              }\r\n              return list\r\n            })\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case DELETE_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items = l.items.filter(i => i.id !== action.payload.cardId)\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case MOVE_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.destBoardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.destListId) {\r\n                l.items.splice(action.payload.destIndex, 0, action.payload.card)\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_LABEL:\r\n      return {\r\n        ...state,\r\n        labels: [...state.labels, action.payload]\r\n      }\r\n    case UPDATE_LABEL:\r\n      return {\r\n        ...state,\r\n        labels: state.labels.map(label => {\r\n          if(label.id === action.payload.id) {\r\n            label.name = action.payload.name\r\n            label.color = action.payload.color\r\n            label.colorName = action.payload.colorName\r\n          }\r\n          return label\r\n        })\r\n      }\r\n    case DELETE_LABEL:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          b.lists = b.lists.map(l => {\r\n            l.items = l.items.map(i => {\r\n              i.labels = i.labels.filter(l => l !== action.payload)\r\n              return i\r\n            })\r\n            return l\r\n          })\r\n          return b\r\n        }),\r\n        labels: state.labels.filter(l => l.id !== action.payload)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// board state\r\nexport const ADD_BOARD = 'ADD_BOARD';\r\nexport const GET_BOARDS_NAMES = 'GET_BOARDS_NAMES';\r\nexport const SET_TITLE = 'SET_TITLE';\r\nexport const SET_STAR = 'SET_STAR';\r\nexport const SET_WATCHING = 'SET_WATCHING';\r\nexport const SET_DESCRIBTION = 'SET_DESCRIBTION';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const DELETE_LIST = 'DELETE_LIST';\r\nexport const DELETE_ALL_CARDS = 'DELETE_ALL_CARDS';\r\nexport const MOVE_ALL_CARDS = 'MOVE_ALL_CARDS';\r\nexport const SET_LIST_TITLE = 'SET_LIST_TITLE';\r\nexport const COPY_LIST = 'COPY_LIST';\r\nexport const SORT_LIST = 'SORT_LIST';\r\nexport const MOVE_LIST = 'MOVE_LIST';\r\nexport const ADD_CARD = 'ADD_CARD';\r\nexport const UPDATE_CARD = 'UPDATE_CARD';\r\nexport const DELETE_CARD = 'DELETE_CARD';\r\nexport const MOVE_CARD = 'MOVE_CARD';\r\nexport const ADD_LABEL = 'ADD_LABEL';\r\nexport const UPDATE_LABEL = 'UPDATE_LABEL';\r\nexport const DELETE_LABEL = 'DELETE_LABEL';\r\n\r\n// alert state\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const DELETE_ALERT = 'DELETE_ALERT';\r\n\r\n// user state\r\nexport const SET_CURRENT_BOARD_ID = 'SET_CURRENT_BOARD_ID';\r\nexport const CLEAR_CURRENT_BOARD_ID = 'CLEAR_CURRENT_BOARD_ID';\r\nexport const SET_CURRENT_LIST_ID = 'SET_CURRENT_LIST_ID';\r\nexport const CLEAR_CURRENT_LIST_ID = 'CLEAR_CURRENT_LIST_ID';\r\nexport const SET_RECENT_IDS = 'SET_RECENT_IDS';\r\nexport const SET_MODAL = 'SET_MODAL';\r\nexport const SET_MODAL_TYPE = 'SET_MODAL_TYPE';\r\nexport const SET_OPTIONS_MODAL = 'SET_OPTIONS_MODAL';\r\nexport const SET_OPTIONS_MODAL_TYPE = 'SET_OPTIONS_MODAL_TYPE';\r\nexport const SET_FAST_EDIT_MODAL_POS = 'SET_FAST_EDIT_MODAL_POS';\r\nexport const SET_CURRENT_CARD = 'SET_CURRENT_CARD';\r\nexport const CLEAR_CURRENT_CARD = 'CLEAR_CURRENT_CARD';\r\nexport const SET_MOUSE_POS = 'SET_MOUSE_POS';\r\nexport const TOGGLE_BIG_LABELS = 'TOGGLE_BIG_LABELS';\r\nexport const SET_OPTIONS_MODAL_STEP = 'SET_OPTIONS_MODAL_STEP';\r\nexport const SET_OPTIONS_MODAL_STEP_TYPE = 'SET_OPTIONS_MODAL_STEP_TYPE';\r\nexport const SET_OPTIONS_MODAL_STEP_DATA = 'SET_OPTIONS_MODAL_STEP_DATA';\r\nexport const SET_DATA = 'SET_DATA';\r\n\r\n// \r\nexport const TEST = 'TEST';\r\n","import React, { useReducer } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport BoardContext from './boardContext';\r\nimport boardReducer from './boardReducer';\r\nimport {\r\n  ADD_BOARD,\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_WATCHING,\r\n  SET_DESCRIBTION,\r\n  ADD_LIST,\r\n  DELETE_LIST,\r\n  DELETE_ALL_CARDS,\r\n  MOVE_ALL_CARDS,\r\n  SET_LIST_TITLE,\r\n  COPY_LIST,\r\n  SORT_LIST,\r\n  MOVE_LIST,\r\n  ADD_CARD,\r\n  UPDATE_CARD,\r\n  DELETE_CARD,\r\n  MOVE_CARD,\r\n  ADD_LABEL,\r\n  UPDATE_LABEL,\r\n  DELETE_LABEL\r\n} from '../types';\r\n\r\nconst BoardState = props => {\r\n  const initialState = {\r\n    boards: [\r\n      {\r\n        title: 'my nice board',\r\n        id: 'b1',\r\n        color: '#344e5c',\r\n        starred: false,\r\n        describtion: 'board describtion goes here',\r\n        lists: [\r\n          {\r\n            title: 'todos',\r\n            id: uniqid(),\r\n            watching: false,\r\n            items: [\r\n              {\r\n                text: 'codo 1',\r\n                desc: 'one describtion',\r\n                id: uniqid(),\r\n                watching: false,\r\n                labels: [\r\n                  1,\r\n                  3,\r\n                  6\r\n                ],\r\n                checklists: [\r\n                  {\r\n                    title: 'my checklist',\r\n                    id: uniqid(),\r\n                    hideDone: false,\r\n                    items: [\r\n                      {\r\n                        text: 'Do 1',\r\n                        id: uniqid(),\r\n                        done: false\r\n                      },\r\n                      {\r\n                        text: 'Do 2',\r\n                        id: uniqid(),\r\n                        done: true\r\n                      }\r\n                    ]\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                text: 'aodo 2',\r\n                watching: true,\r\n                id: uniqid(),\r\n                labels: [\r\n                  3\r\n                ],\r\n                checklists: [\r\n                  {\r\n                    title: 'my checklist',\r\n                    id: uniqid(),\r\n                    hideDone: false,\r\n                    items: [\r\n                      {\r\n                        text: 'Do 1',\r\n                        id: uniqid(),\r\n                        done: false\r\n                      },\r\n                      {\r\n                        text: 'Do 2',\r\n                        id: uniqid(),\r\n                        done: true\r\n                      }\r\n                    ]\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                text: 'dodo 2',\r\n                id: uniqid(),\r\n                checklists: [],\r\n                labels: [\r\n                  2\r\n                ]\r\n              },\r\n              {\r\n                text: 'codo 2',\r\n                id: uniqid(),\r\n                checklists: [],\r\n                labels: [\r\n                  2\r\n                ]\r\n              },\r\n              {\r\n                text: 'bodo 2',\r\n                id: uniqid(),\r\n                checklists: [],\r\n                labels: [\r\n                  2\r\n                ]\r\n              },\r\n              {\r\n                text: 'eodo 2',\r\n                id: uniqid(),\r\n                checklists: [],\r\n                labels: [\r\n                  2\r\n                ]\r\n              },\r\n            ]\r\n          },\r\n          {\r\n            title: 'doing',\r\n            id: uniqid(),\r\n            watching: true,\r\n            items: [\r\n              {\r\n                text: 'doing 1',\r\n                id: uniqid(),\r\n                checklists: [],\r\n                labels: [\r\n                  5,\r\n                  3\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 2',\r\n                id: uniqid(),\r\n                checklists: [],\r\n                labels: [\r\n                  4,\r\n                  5,\r\n                  6,\r\n                  1,\r\n                  3,\r\n                  2 \r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 3',\r\n                id: uniqid(),\r\n                checklists: [],\r\n                labels: [\r\n                  6,\r\n                  4\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            title: 'new list',\r\n            id: uniqid(),\r\n            items: [\r\n\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        title: 'test empty',\r\n        id: uniqid(),\r\n        starred: false,\r\n        color: '#4759a3',\r\n        describtion: '',\r\n        lists: [\r\n          {\r\n            title: 'test for one',\r\n            id: uniqid(),\r\n            items: [\r\n              \r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    labels: [\r\n      {\r\n        id: 1,\r\n        color: '#61bd4f',\r\n        colorName: 'green',\r\n        name: 'label name'\r\n      },\r\n      {\r\n        id: 2,\r\n        color: '#f2d600',\r\n        colorName: 'yellow',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 3,\r\n        color: '#ff9f1a',\r\n        colorName: 'orange',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 4,\r\n        color: '#eb5a46',\r\n        colorName: 'red',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 5,\r\n        color: '#c377e0',\r\n        colorName: 'purple',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 6,\r\n        color: '#0079bf',\r\n        colorName: 'blue',\r\n        name: ''\r\n      }\r\n    ],\r\n    colors: [\r\n      {\r\n        name: 'green',\r\n        color: '#61bd4f'\r\n      },\r\n      {\r\n        name: 'yellow',\r\n        color: '#f2d600'\r\n      },\r\n      {\r\n        name: 'orange',\r\n        color: '#ff9f1a'\r\n      },\r\n      {\r\n        name: 'red',\r\n        color: '#eb5a46'\r\n      },\r\n      {\r\n        name: 'purple',\r\n        color: '#c377e0'\r\n      },\r\n      {\r\n        name: 'blue',\r\n        color: '#0079bf'\r\n      },\r\n      {\r\n        name: 'sky',\r\n        color: '#00c2e0'\r\n      },\r\n      {\r\n        name: 'lime',\r\n        color: '#51e898'\r\n      },\r\n      {\r\n        name: 'pink',\r\n        color: '#ff78cb'\r\n      },\r\n      {\r\n        name: 'black',\r\n        color: '#344563'\r\n      }\r\n    ],\r\n    listOfStarredBoardsIds: []\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(boardReducer, initialState);\r\n\r\n  // Get data\r\n  const getBoardsNames = () => {\r\n    const list = state.boards.map(b => b.title);\r\n    \r\n    return list\r\n  };\r\n\r\n  const addBoard = (title, color) => {\r\n    const newBaord = {\r\n      title,\r\n      id: uniqid(),\r\n      color,\r\n      starred: false,\r\n      describtion: '',\r\n      lists: []\r\n    }\r\n    dispatch({\r\n      type: ADD_BOARD,\r\n      payload: newBaord\r\n    });\r\n  }\r\n\r\n  // get  recent used boards based on user state\r\n  const getRecentBoards = (ids) => {\r\n    const list = [];\r\n\r\n    ids && ids.forEach(id => list.push(getBoard(id)));\r\n\r\n    return list\r\n  }\r\n\r\n  // get boards with starred = true\r\n  const getStarredBoards = () => {\r\n    const list = [];\r\n    state.listOfStarredBoardsIds.forEach(id => list.push(getBoard(id)));\r\n\r\n    return list;\r\n  }\r\n\r\n  // send a single board to board page (returns an array with one object)\r\n  const getBoard = (id) => {\r\n    const board = state.boards.filter(b => b.id === id);\r\n\r\n    return board[0]\r\n  }\r\n\r\n  const getList = (boardId, ListId) => {\r\n    const board = state.boards.filter(b => b.id === boardId)[0];\r\n\r\n    const list = board.lists.filter(l => l.id === ListId)[0];\r\n\r\n    return list\r\n  }\r\n\r\n  // set board title\r\n  const setTitle = (text, id) => {\r\n    dispatch({\r\n      type: SET_TITLE,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board starred or unstarred\r\n  const setStar = (id) => {\r\n    let newListOfStarredBoardsIds = state.listOfStarredBoardsIds;\r\n    if(state.listOfStarredBoardsIds.indexOf(id) !== -1) {\r\n      newListOfStarredBoardsIds.splice(state.listOfStarredBoardsIds.indexOf(id), 1);\r\n    } else {\r\n      newListOfStarredBoardsIds.push(id);\r\n    }\r\n    dispatch({\r\n      type: SET_STAR,\r\n      payload: {\r\n        id,\r\n        newListOfStarredBoardsIds\r\n      }\r\n    });\r\n  }\r\n\r\n  const setWatching = (boardId, listId) => {\r\n    dispatch({\r\n      type: SET_WATCHING,\r\n      payload: {\r\n        boardId,\r\n        listId\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board describtion\r\n  const setDescribtion = (text, id) => {\r\n    dispatch({\r\n      type: SET_DESCRIBTION,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // add List to board\r\n  const addList = (text, id) => {\r\n    const newList = {\r\n      title: text,\r\n      id: uniqid(),\r\n      items: []\r\n    }\r\n    dispatch({\r\n      type: ADD_LIST,\r\n      payload: {\r\n        id,\r\n        newList\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteList = (boardId, listId) => {\r\n    dispatch({\r\n      type: DELETE_LIST,\r\n      payload: {\r\n        boardId,\r\n        listId\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteAllCards = (boardId, listId) => {\r\n    dispatch({\r\n      type: DELETE_ALL_CARDS,\r\n      payload: {\r\n        boardId,\r\n        listId\r\n      }\r\n    });\r\n  }\r\n\r\n  const moveAllCards = (boardId, firstListId, destListId) => {\r\n    let newItems = [];\r\n\r\n    getList(boardId, firstListId).items.forEach(item => {\r\n      newItems.push(item);\r\n    });\r\n\r\n    newItems = newItems.map(i => {\r\n      return {\r\n        ...i,\r\n        id: uniqid()\r\n      }\r\n    })\r\n\r\n    // now newItems is equal to an array of items with new ids\r\n\r\n    dispatch({\r\n      type: MOVE_ALL_CARDS,\r\n      payload: {\r\n        boardId,\r\n        firstListId,\r\n        destListId,\r\n        newItems\r\n      }\r\n    });\r\n  }\r\n\r\n  const setListTitle = (boardId, listId, newTitle) => {\r\n    dispatch({\r\n      type: SET_LIST_TITLE,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        newTitle\r\n      }\r\n    });\r\n  }\r\n\r\n  const copyList = (boardId, listId, name) => {\r\n    let theList;\r\n\r\n    state.boards.forEach(b => b.id === boardId && b.lists.forEach(l => {\r\n      if(l.id === listId) {\r\n        theList = l\r\n      }\r\n    }))\r\n    \r\n    const newList = {\r\n      ...theList,\r\n      title: name,\r\n      id: uniqid()\r\n    }\r\n\r\n    dispatch({\r\n      type: COPY_LIST,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        newList\r\n      }\r\n    });\r\n  }\r\n\r\n  const sortList = (boardId, listId) => {\r\n    const newItems = getList(boardId, listId).items;\r\n\r\n    newItems.sort((a, b) => a.text < b.text ? -1 : a.text > b.text ? 1 : 0);\r\n\r\n    dispatch({\r\n      type: SORT_LIST,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        newItems\r\n      }\r\n    });\r\n  }\r\n\r\n  // takes in four prams: (first board id, first list id, destination board id, destionation index)\r\n  const moveList = (firstBoardId, firstListId, destBoardId, destIndex) => {\r\n    const firstIndex = getBoard(firstBoardId).lists.findIndex(l => l.id === firstListId);\r\n\r\n    const list = getList(firstBoardId, firstListId);\r\n\r\n    dispatch({\r\n      type: MOVE_LIST,\r\n      payload: {\r\n        firstBoardId,\r\n        firstIndex,\r\n        destBoardId,\r\n        destIndex,\r\n        list\r\n      }\r\n    });\r\n  }\r\n\r\n  // add card to list\r\n  const addCard = (text, listId, boardId) => {\r\n    const newCard = {\r\n      text,\r\n      desc: '',\r\n      id: uniqid(),\r\n      watching: false,\r\n      labels: [],\r\n      checklists: []\r\n    }\r\n    dispatch({\r\n      type: ADD_CARD,\r\n      payload: {\r\n        newCard,\r\n        listId,\r\n        boardId\r\n      }\r\n    });\r\n  }\r\n\r\n  // update card\r\n  const updateCard = (boardId, listId, cardId, newCard) => {\r\n    dispatch({\r\n      type: UPDATE_CARD,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        cardId,\r\n        newCard\r\n      }\r\n    })\r\n  }\r\n\r\n  const deleteCard = (boardId, listId, cardId) => {\r\n    dispatch({\r\n      type: DELETE_CARD,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        cardId\r\n      }\r\n    });\r\n  }\r\n\r\n  const moveCard = (firstBoardId,firstListId,cardId,destBoardId,destListId,destIndex,card) => {\r\n    deleteCard(firstBoardId, firstListId, cardId);\r\n\r\n    const cardWithNewId = {\r\n      ...card,\r\n      id: uniqid()\r\n    }\r\n\r\n    dispatch({\r\n      type: MOVE_CARD,\r\n      payload: {\r\n        destBoardId,\r\n        destListId,\r\n        destIndex,\r\n        card: cardWithNewId\r\n      }\r\n    });\r\n  }\r\n\r\n  const addLabel = (name, colorName, id) => {\r\n    let is = false;\r\n    const newLabel = {\r\n      id,\r\n      colorName,\r\n      name,\r\n      color: state.colors.filter(c => c.name === colorName)[0].color\r\n    };\r\n\r\n    state.labels.forEach(label => {\r\n      if(label.colorName === colorName) {\r\n        if(label.name === name) {\r\n          is = true\r\n        }\r\n      }\r\n    });\r\n\r\n    if(!is) {\r\n      dispatch({\r\n        type : ADD_LABEL,\r\n        payload: newLabel\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateLabel = (name, colorName, id) => {\r\n    dispatch({\r\n      type: UPDATE_LABEL,\r\n      payload: {\r\n        name,\r\n        colorName,\r\n        color: state.colors.filter(c => c.name === colorName)[0].color,\r\n        id\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteLabel = (id) => {\r\n    dispatch({\r\n      type: DELETE_LABEL,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <BoardContext.Provider\r\n      value={{\r\n        boards: state.boards,\r\n        labels: state.labels,\r\n        colors: state.colors,\r\n        addBoard,\r\n        getBoardsNames,\r\n        getRecentBoards,\r\n        getStarredBoards,\r\n        getBoard,\r\n        getList,\r\n        setTitle,\r\n        setStar,\r\n        setWatching,\r\n        setDescribtion,\r\n        addList,\r\n        deleteList,\r\n        deleteAllCards,\r\n        moveAllCards,\r\n        setListTitle,\r\n        copyList,\r\n        sortList,\r\n        moveList,\r\n        addCard,\r\n        updateCard,\r\n        deleteCard,\r\n        moveCard,\r\n        addLabel,\r\n        updateLabel,\r\n        deleteLabel,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BoardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BoardState;","import { \r\n  SET_ALERT,\r\n  DELETE_ALERT\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: [action.payload]\r\n      }\r\n    case DELETE_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: state.alerts.filter(a => a.id !== action.payload)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport AlertContext from './alertContext';\r\nimport alertReducer from './alertReducer';\r\nimport { \r\n  SET_ALERT,\r\n  DELETE_ALERT\r\n} from '../types';\r\n\r\nconst AlertState = props => {\r\n  const initialState = {\r\n    alerts: []\r\n    };\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n  // Get data\r\n  const setAlert = (msg, type, time) => {\r\n    const listOfMsgs = state.alerts.map(a => a.msg);\r\n    if(listOfMsgs.indexOf(msg) === -1) {\r\n      const newAlert = {\r\n        msg,\r\n        id: uniqid(),\r\n        type,\r\n      }\r\n\r\n      dispatch({\r\n        type: SET_ALERT,\r\n        payload: newAlert\r\n      });\r\n\r\n      setTimeout(() => {\r\n        deleteAlert(newAlert.id);\r\n      }, time ? time : 3000);\r\n    }\r\n  };\r\n\r\n  const deleteAlert = (id) => {\r\n    dispatch({\r\n      type: DELETE_ALERT,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alerts: state.alerts,\r\n        setAlert,\r\n        deleteAlert\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;","import { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_CURRENT_LIST_ID,\r\n  CLEAR_CURRENT_LIST_ID,\r\n  SET_CURRENT_CARD,\r\n  CLEAR_CURRENT_CARD,\r\n  SET_RECENT_IDS,\r\n  SET_MODAL,\r\n  SET_MODAL_TYPE,\r\n  SET_OPTIONS_MODAL,\r\n  SET_OPTIONS_MODAL_TYPE,\r\n  SET_FAST_EDIT_MODAL_POS,\r\n  SET_MOUSE_POS,\r\n  TOGGLE_BIG_LABELS,\r\n  SET_OPTIONS_MODAL_STEP,\r\n  SET_OPTIONS_MODAL_STEP_TYPE,\r\n  SET_OPTIONS_MODAL_STEP_DATA,\r\n  SET_DATA,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_BOARD_ID:\r\n     return {\r\n       ...state,\r\n       currentBoardId: action.payload\r\n     }\r\n    case CLEAR_CURRENT_BOARD_ID:\r\n      return {\r\n        ...state,\r\n        currentBoardId: null\r\n      }\r\n    case SET_CURRENT_LIST_ID:\r\n      return {\r\n        ...state,\r\n        currentListId: action.payload\r\n      }\r\n    case CLEAR_CURRENT_LIST_ID:\r\n      return {\r\n        ...state,\r\n        currentListId: null\r\n      }\r\n    case SET_CURRENT_CARD:\r\n      return {\r\n        ...state,\r\n        currentCard: action.payload\r\n      }\r\n    case CLEAR_CURRENT_CARD:\r\n      return {\r\n        ...state,\r\n        currentCard: null\r\n      }\r\n    case SET_RECENT_IDS:\r\n      return {\r\n        ...state,\r\n        recentIds: action.payload\r\n      }\r\n    case SET_MODAL:\r\n      return {\r\n        ...state,\r\n        modalStatus: action.payload\r\n      }\r\n    case SET_MODAL_TYPE:\r\n      return {\r\n        ...state,\r\n        modalType: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL:\r\n      return {\r\n        ...state,\r\n        optionsModalStatus: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_TYPE:\r\n      return {\r\n        ...state,\r\n        optionsModalType: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_STEP:\r\n      return {\r\n        ...state,\r\n        optionsModalStepStatus: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_STEP_TYPE:\r\n      return {\r\n        ...state,\r\n        optionsModalStepType: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_STEP_DATA:\r\n      return {\r\n        ...state,\r\n        optionsModalStepData: action.payload\r\n      }\r\n    case SET_FAST_EDIT_MODAL_POS:\r\n      return {\r\n        ...state,\r\n        fastEditModalPos: action.payload\r\n      }\r\n    case SET_MOUSE_POS:\r\n      return {\r\n        ...state,\r\n        mousePos: action.payload  \r\n      }\r\n    case TOGGLE_BIG_LABELS:\r\n      return {\r\n        ...state,\r\n        bigLabels: !state.bigLabels\r\n      }\r\n    case 'setAddCardFromListActions':\r\n      return {\r\n        ...state,\r\n        addCardFromListActions: action.payload\r\n      }\r\n    case SET_DATA:\r\n      return {\r\n        ...state,\r\n        data: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer } from 'react';\r\nimport UserContext from './userContext';\r\nimport userReducer from './userReducer';\r\nimport { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_CURRENT_LIST_ID,\r\n  CLEAR_CURRENT_LIST_ID,\r\n  SET_CURRENT_CARD,\r\n  CLEAR_CURRENT_CARD,\r\n  SET_RECENT_IDS,\r\n  SET_MODAL,\r\n  SET_MODAL_TYPE,\r\n  SET_OPTIONS_MODAL,\r\n  SET_OPTIONS_MODAL_TYPE,\r\n  SET_OPTIONS_MODAL_STEP,\r\n  SET_OPTIONS_MODAL_STEP_TYPE,\r\n  SET_OPTIONS_MODAL_STEP_DATA,\r\n  SET_FAST_EDIT_MODAL_POS,\r\n  SET_MOUSE_POS,\r\n  TOGGLE_BIG_LABELS,\r\n  SET_DATA,\r\n} from '../types';\r\n\r\nconst UserState = props => {\r\n  const initialState = {\r\n    currentBoardId: null,\r\n    currentListId: null,\r\n    currentCard: null,\r\n    recentIds: [],\r\n    ModalStatus: 'off',\r\n    modalType: null,\r\n    optionsModalStatus: 'off',\r\n    optionsModaltype: null,\r\n    optionsModalStepStatus: 'off',\r\n    optionsModalStepType: null,\r\n    optionsModalStepData: null,\r\n    fastEditModalPos: null,\r\n    mosuePos: {},\r\n    bigLabels: false,\r\n    addCardFromListActions: null,\r\n    data: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(userReducer, initialState);\r\n\r\n  const setCurrentBoardId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_BOARD_ID,\r\n      payload: id\r\n    });\r\n    setRecentBaord(id);\r\n  }\r\n\r\n  // set new board to recent\r\n  const setRecentBaord = (id) => {\r\n    const newRecentIds = state.recentIds;\r\n    if(newRecentIds.length === 3 && id !== null) {\r\n      newRecentIds.shift();\r\n      newRecentIds.push(id);\r\n    } else if(id !== null) {\r\n      newRecentIds.push(id);\r\n    }\r\n    dispatch({\r\n      type: SET_RECENT_IDS,\r\n      payload: newRecentIds\r\n    });\r\n  }\r\n\r\n  // also can be done with \"setCurrentBoardId(null)\"\r\n  const clearCurrentBoardId = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_BOARD_ID\r\n    });\r\n  }\r\n\r\n  const setCurrentListId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_LIST_ID,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  const clearCurrentListId = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_LIST_ID\r\n    });\r\n  }\r\n\r\n  const setCurrentCard = (card) => {\r\n    dispatch({\r\n      type: SET_CURRENT_CARD,\r\n      payload: card\r\n    });\r\n  }\r\n\r\n  const clearCurrentCard = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_CARD\r\n    });\r\n  }\r\n\r\n  const setModal = (status, type) => {\r\n    dispatch({\r\n      type: SET_MODAL,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearModalType();\r\n    } else if(status === 'on') {\r\n      setModalType(type);\r\n    }\r\n  }\r\n\r\n  const setModalType = (type) => {\r\n    dispatch({\r\n      type: SET_MODAL_TYPE,\r\n      payload: type\r\n    });\r\n  }\r\n\r\n  const clearModalType = () => {\r\n    dispatch({\r\n      type: SET_MODAL_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setOptionsModal = (status, type) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearOptionsModalType();\r\n      setOptionsModalStep('off');\r\n    } else if(status === 'on') {\r\n      setOptionsModalType(type);\r\n    }\r\n  }\r\n\r\n  const setOptionsModalType = (type) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_TYPE,\r\n      payload: type\r\n    });\r\n  }\r\n\r\n  const clearOptionsModalType = () => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  // two prams 1. has step or not (on or off) 2. the last step\r\n  const setOptionsModalStep = (status, step, data) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearOptionsModalStepType();\r\n    } else if(status === 'on') {\r\n      setOptionsModalStepType(step);\r\n    }\r\n    if(data) {\r\n      setOptionsModalStepData(data);\r\n    } else {\r\n      clearOptionsModalStepData();\r\n    }\r\n  }\r\n\r\n  const setOptionsModalStepData = (data) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_DATA,\r\n      payload: data\r\n    });\r\n  }\r\n\r\n  const clearOptionsModalStepData = () => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_DATA,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setOptionsModalStepType = (step) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_TYPE,\r\n      payload: step\r\n    });\r\n  }\r\n\r\n  const clearOptionsModalStepType = () => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setFastEditModalPos = (pos) => {\r\n    dispatch({\r\n      type: SET_FAST_EDIT_MODAL_POS,\r\n      payload: pos\r\n    });\r\n  }\r\n\r\n  const setMousePos = (x, y) => {\r\n    dispatch({\r\n      type: SET_MOUSE_POS,\r\n      payload: {x, y}\r\n    });\r\n  }\r\n\r\n  const toggleBigLabels = () => {\r\n    dispatch({\r\n      type: TOGGLE_BIG_LABELS\r\n    });\r\n  }\r\n\r\n  //  add card will be addeed to the list with the id that its passed in\r\n  const setAddCardFromListActions = (id) => {\r\n    dispatch({\r\n      type: 'setAddCardFromListActions',\r\n      payload: id\r\n    });\r\n  }\r\n  \r\n  const setData = (data) => {\r\n    if(data) {\r\n      dispatch({\r\n        type: SET_DATA,\r\n        payload: data\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_DATA,\r\n        payload: null\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        currentBoardId: state.currentBoardId,\r\n        currentListId: state.currentListId,\r\n        currentCard: state.currentCard,\r\n        recentIds: state.recentIds,\r\n        modalStatus: state.modalStatus,\r\n        modalType: state.modalType,\r\n        optionsModalStatus: state.optionsModalStatus,\r\n        optionsModalType: state.optionsModalType,\r\n        optionsModalStepStatus: state.optionsModalStepStatus,\r\n        optionsModalStepType: state.optionsModalStepType,\r\n        optionsModalStepData: state.optionsModalStepData,\r\n        fastEditModalPos: state.fastEditModalPos,\r\n        mousePos: state.mousePos,\r\n        bigLabels: state.bigLabels,\r\n        addCardFromListActions: state.addCardFromListActions,\r\n        data: state.data,\r\n        setCurrentBoardId,\r\n        clearCurrentBoardId,\r\n        setCurrentListId,\r\n        clearCurrentListId,\r\n        setCurrentCard,\r\n        clearCurrentCard,\r\n        setModal,\r\n        setOptionsModal,\r\n        setOptionsModalStep,\r\n        setFastEditModalPos,\r\n        setMousePos,\r\n        toggleBigLabels,\r\n        setAddCardFromListActions,\r\n        setData,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport BoardState from './context/board/BoardState';\nimport AlertState from './context/alert/AlertState';\nimport UserState from './context/user/UserState';\n\nconst StateContainer = () => {\n  return (\n    <BoardState>\n      <AlertState>\n        <UserState>\n          <App />\n        </UserState>\n      </AlertState>\n    </BoardState>\n  );\n}\n\nReactDOM.render(<StateContainer />, document.getElementById('root'));"],"sourceRoot":""}