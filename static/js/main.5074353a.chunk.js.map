{"version":3,"sources":["context/user/userContext.js","context/board/boardContext.js","components/layout/Navbar.js","components/pages/home/SideListItem.js","components/pages/home/HomeSideList.js","context/alert/alertContext.js","components/pages/home/HomeMainItem.js","components/pages/home/Recent.js","components/pages/home/Starred.js","components/pages/home/HomeMain.js","components/pages/home/Home.js","components/pages/board/BoardTitle.js","components/pages/board/BoardNavbar.js","components/pages/board/BoardListItem.js","components/pages/board/BoardList.js","components/pages/board/AddList.js","components/pages/board/BoardMain.js","components/pages/board/Board.js","components/modal/AddBoardModal.js","components/modal/DetailsModal.js","components/modal/FastEditModal.js","components/modal/OptionsModal.js","components/modal/Modal.js","components/alert/AlertItem.js","components/alert/Alerts.js","App.js","context/board/boardReducer.js","context/types.js","context/board/BoardState.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/user/userReducer.js","context/user/UserState.js","index.js"],"names":["UserContext","createContext","BoardContext","Navbar","userContext","useContext","boardContext","clearCurrentBoardId","currentBoardId","setModal","getBoard","navbarStyle","background","color","titleTextStyle","className","style","onClick","type","id","SideListItem","board","setCurrentBoardId","useState","isHover","setIsHover","hoverStyle","opacity","onMouseEnter","onMouseLeave","title","charAt","toUpperCase","slice","HomeSideList","boards","map","b","key","AlertContext","HomeMainItem","alertContext","setStar","setAlert","itemStyle","e","target","classList","contains","starred","Recent","getRecentBoards","recentIds","length","r","uuid","v4","Starred","getStarredBoards","s","HomeMain","Home","BoardTitle","setTitle","text","setText","isSettingTitle","setIsSettingTitle","onBlur","console","log","onChange","value","onKeyUp","keyCode","BoardNavbar","setDescribtion","descText","setDescText","isSettingDesc","setIsSettingDesc","onSetDesc","describtion","document","querySelector","focus","BoardListItem","item","setCurrentCard","setFastEditModalPos","desc","top","parentElement","getBoundingClientRect","left","width","BoardList","list","boardFuncs","setCurrentListId","wantToAddCard","setWantToAddCard","newCardText","setNewCardText","addCard","cancelAddCard","items","i","index","placeholder","AddList","addList","isAdding","setIsAdding","onAddList","cancelAddList","lists","BoardMain","mainStyle","l","Board","setBoard","useEffect","boardStyle","AddBoardModal","addBoard","bg","setBg","onClose","onAdd","bgColor","backgroundColor","DetailsModal","FastEditModal","currentListId","fastEditModalPos","currentCard","clearCurrentCard","updateCard","modalPos","position","rightWidth","onUpdate","newCard","animation","padding","display","OptionsModal","Modal","modalStatus","modalType","showModal","setShowModal","closeModal","modalDisplay","AlertItem","alert","deleteAlert","msg","Alerts","alerts","a","App","state","action","payload","baords","listOfStarredBoardsIds","newListOfStarredBoardsIds","push","newList","boardId","listId","BoardState","props","initialState","labels","useReducer","boardReducer","dispatch","filter","Provider","newBaord","getBoardsNames","ids","forEach","indexOf","splice","cardId","children","AlertState","alertReducer","time","newAlert","setTimeout","UserState","userReducer","ModalStatus","setRecentBaord","newRecentIds","shift","setModalType","clearModalType","clearCurrentListId","card","status","pos","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5074353a.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;","import { createContext } from 'react';\r\n\r\nconst BoardContext = createContext();\r\n\r\nexport default BoardContext;\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst Navbar = () => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { clearCurrentBoardId, currentBoardId, setModal } = userContext;\r\n  const { getBoard } = boardContext;\r\n\r\n  const homeClicked =() => {\r\n    clearCurrentBoardId();\r\n  }\r\n\r\n  const addClicked = () => {\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  const navbarStyle = {\r\n    background: getBoard(currentBoardId) && getBoard(currentBoardId).color\r\n  }\r\n\r\n  const titleTextStyle = {\r\n    color: getBoard(currentBoardId) ? getBoard(currentBoardId).color : '#388d6a'\r\n  }\r\n\r\n  return (\r\n    <div className='trello-navbar' style={navbarStyle}>\r\n      <div>\r\n        <div className='btn btn-square btn-light op-8 rounded' onClick={homeClicked}>\r\n          <i className='fa fa-home'></i>\r\n        </div>\r\n        <div className='btn btn-narrow btn-light op-8 rounded'>\r\n          <i className='mr-1 fa fa-notes-medical'></i>\r\n          boards\r\n        </div>\r\n        <div className='d-i-b rounded'>\r\n          <input type='text' className='m-0 bg-light op-8 border-0 rounded' id='search-input'/>\r\n        </div>\r\n      </div>\r\n      <div className='mr-5'>\r\n        <div className='text-white text-bold cursor-p border border-white border-bottom-0'>\r\n          <div className='m mt-0 ml-0 mb-0'>\r\n            trello\r\n          </div>\r\n          <div \r\n            className='bg-white d-i-b border-0 p pt-0 pb-0 pr-0'\r\n            style={titleTextStyle}>\r\n            clone\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className='btn btn-square btn-light op-8 rounded' onClick={addClicked}>\r\n          <i className='fa fa-plus'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst SideListItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n\r\n  const [isHover, setIsHover] = useState(false);\r\n\r\n  const hoverStyle = isHover ? {\r\n    background: board.color,\r\n    color: '#f4f4f4',\r\n    opacity: '0.7'\r\n  } : {\r\n    opacity: '1'\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    setIsHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setIsHover(false);\r\n  }\r\n\r\n  const onClick = () => {\r\n    setCurrentBoardId(board.id)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      onClick={onClick}\r\n      className=\"card pl-1 cursor-p p border-0 rounded-lg text-dark transition text-bold\"\r\n      style={hoverStyle}\r\n      >\r\n      { board.title.charAt(0).toUpperCase() + board.title.slice(1) }\r\n      { <i className=\"fa fa-check m-0 float-right\"></i> }\r\n    </div> \r\n  );\r\n};\r\n\r\nexport default SideListItem","import React, { useContext } from 'react';\r\nimport SideListItem from './SideListItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst HomeSideList = () => {\r\n  const { boards } = useContext(BoardContext);\r\n\r\n  return (\r\n    <aside>\r\n      <button className=\"btn btn-block btn-primary text-left rounded-lg\">\r\n        <i className=\"fa fa-notes-medical mr-1\"></i>\r\n        <div className=\"text-bold d-i-b\">Boards</div>\r\n      </button>\r\n      { boards.map(b => (\r\n        <SideListItem key={b.id} board={b} />\r\n      )) }\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default HomeSideList\r\n","import { createContext } from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext;","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst HomeMainItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n  const { setStar } = boardContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const itemStyle = {\r\n    background: board.color,\r\n  }\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('fa-star')) {\r\n      setCurrentBoardId(board.id);\r\n    }\r\n  }\r\n\r\n  const onStarClicked = () => {\r\n    setStar(board.id);\r\n    setAlert(`${board.starred ? 'board added to favorites' : 'board removed from favorites'}`, `${board.starred ? 'success' : 'dark'}`, 2500);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='trello-home-main-item mt-1 mr-1'\r\n      style={itemStyle}\r\n      onClick={onClick}>\r\n        <div className='text-white func-title'>\r\n          { board.title.charAt(0).toUpperCase() + board.title.slice(1) }\r\n        </div>\r\n        <div\r\n          className='trello-home-main-item-star'\r\n          onClick={onStarClicked}>\r\n          <i className={`fa-star ${board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeMainItem\r\n","import React, { Fragment, useContext } from 'react';\r\nimport uuid from 'uuid';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst Recent = () => {\r\n  const boardContext = useContext(BoardContext);\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { getRecentBoards } = boardContext;\r\n  const { recentIds } = userContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      { getRecentBoards(recentIds).length !== 0\r\n        &&  <div className=\"card border-top-0 border-right-0 border-left-0 pb-2\">\r\n              <i className=\"fa fa-clock mr-1\"></i>\r\n              Recent borads\r\n              <div className=\"\">\r\n                { getRecentBoards(recentIds).map(r => (\r\n                      <HomeMainItem key={uuid.v4()} board={r} />\r\n                    ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Recent\r\n","import React, { Fragment, useContext } from 'react';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Starred = () => {\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { getStarredBoards } = boardContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      { getStarredBoards().length !== 0\r\n        &&  <div className=\"card border-top-0 border-right-0 border-left-0 pb-2\">\r\n              <i className=\"fa fa-star mr-1\"></i>\r\n              favorite borads\r\n              <div className=\"\">\r\n                { getStarredBoards().map(s => (\r\n                      <HomeMainItem key={s.id} board={s} />\r\n                    ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Starred\r\n","import React, { useContext } from 'react';\r\nimport Recent from './Recent';\r\nimport Starred from './Starred';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst HomeMain = () => {\r\n  const { setModal } = useContext(UserContext);\r\n\r\n  const onAdd = () => {\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  return (\r\n    <main className='text-bold'>\r\n      <Starred />\r\n      <Recent />\r\n      <div className='card border-0'>\r\n        <div className='trello-home-main-item hover' onClick={onAdd}>\r\n          Add Board\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default HomeMain\r\n","import React from 'react';\r\nimport HomeSideList from './HomeSideList';\r\nimport HomeMain from './HomeMain';\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container grid-1-3 mt-3\">\r\n      <HomeSideList />\r\n      <HomeMain />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardTitle = ({ title, setTitle }) => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [text, setText] = useState('');\r\n  const [isSettingTitle, setIsSettingTitle] = useState(false);\r\n\r\n  const onClick = () => {\r\n    setIsSettingTitle(true);\r\n    setText(title);\r\n    console.log('text filed must be filled with title')\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    if(text !== '') {\r\n      setTitle(text, currentBoardId);\r\n      setAlert('board title changed', 'success');\r\n      setIsSettingTitle(false);\r\n    } else {\r\n      setIsSettingTitle(false);\r\n      setAlert('board title can not be empty', 'danger');\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onBlur();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-i-b\">\r\n      <div\r\n        className={`text-white m-0 ml-1 ${isSettingTitle && 'd-n'}`}\r\n        onClick={onClick}>\r\n        { title.charAt(0).toUpperCase() + title.slice(1) }\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        className={`m-0 rounded ${!isSettingTitle && 'd-n'}`}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        onKeyUp={onKeyUp}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardTitle\r\n","import React, { useState, useContext } from 'react';\r\nimport BoardTitle from './BoardTitle';\r\n\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardNavbar = ({ board, setStar, setDescribtion, setTitle }) => {\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const [descText, setDescText] = useState('');\r\n  const [isSettingDesc, setIsSettingDesc] = useState(false);\r\n  \r\n  const onStarClick = () => {\r\n    setStar(board.id);\r\n    setAlert(`${board.starred ? 'board added to favorites' : 'board removed from favorites'}`, `${board.starred ? 'success' : 'dark'}`, 2500);\r\n  }\r\n\r\n  const onDescClick =() => {\r\n    setIsSettingDesc(true);\r\n    setDescText(board.describtion);\r\n    document.querySelector('#describtion-input').focus();\r\n  }\r\n\r\n  const onDescTextChange = (e) => {\r\n    e.target.value.length < 51\r\n      ? setDescText(e.target.value)\r\n      : setAlert('describtion can not be longer than 50 chars!!!', 'warning', 4000)\r\n  }\r\n\r\n  const onSetDesc = () => {\r\n    setDescribtion(descText, board.id);\r\n    setIsSettingDesc(false);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetDesc();\r\n    }\r\n  }\r\n\r\n  const navbarStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-navbar trello-navbar lighten-20' style={navbarStyle}>\r\n      <div className='card border-0 m-0 p-0'>\r\n        { board && <BoardTitle title={board.title} setTitle={setTitle} /> }\r\n        <div className='btn btn-light op-8 btn-square rounded darken-20 ml-1' onClick={onStarClick}>\r\n          <i className={`fa-star ${board && board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n        <div className='ml-1 d-i-b text-white'>\r\n          { \r\n            board\r\n            && !isSettingDesc\r\n              && (board.describtion ? board.describtion : 'no describtion')\r\n          }\r\n        <input\r\n          type='text'\r\n          id='describtion-input'\r\n          className={`m-0 rounded ${!isSettingDesc && 'd-n'}`}\r\n          value={descText}\r\n          onChange={onDescTextChange}\r\n          onBlur={onSetDesc}\r\n          onKeyUp={onKeyUp} />\r\n        </div>\r\n        <div className='btn btn-light op-8 darken-20 btn-square rounded ml-1' onClick={onDescClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardNavbar\r\n","import React, { useContext } from 'react'\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst BoardListItem = ({ item }) => {\r\n  const { setCurrentCard, setModal, setFastEditModalPos } = useContext(UserContext);\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('func-e-btn')) {\r\n      console.log('open edit modal')\r\n    }\r\n  }\r\n\r\n  const onEBtnClick = (e) => {\r\n    setFastEditModalPos({\r\n      top: e.target.parentElement.getBoundingClientRect().top,\r\n      left: e.target.parentElement.getBoundingClientRect().left,\r\n      width: e.target.parentElement.getBoundingClientRect().width\r\n    });\r\n    setCurrentCard(item);\r\n    setModal('on', 'fastEditModal');\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-list-item' onClick={onClick}>\r\n      <div>\r\n        { item.text }\r\n        <div className='text-sm'>\r\n          { item.desc && item.desc }\r\n        </div>\r\n      </div>\r\n      <div className='func-e-btn trello-board-list-item-edit-btn' onClick={onEBtnClick}>\r\n        e\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardListItem\r\n","import React, { Fragment, useState, useContext } from 'react';\r\nimport BoardListItem from './BoardListItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardList = ({ list, boardFuncs /* all of board context */ }) => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { setCurrentListId, currentBoardId } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [wantToAddCard, setWantToAddCard] = useState(false);\r\n  const [newCardText, setNewCardText] = useState('');\r\n\r\n  const onAddCardClick = () => {\r\n    !wantToAddCard && setWantToAddCard(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setNewCardText(e.target.value);\r\n  }\r\n\r\n  const onTextareaBlur = () => {\r\n    if(newCardText !== '') {\r\n      addCard();\r\n    } else {\r\n      cancelAddCard();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13 && newCardText.length > 1) {\r\n      addCard();\r\n    } else if(e.keyCode === 13 && newCardText.length === 1) {\r\n      setNewCardText('');\r\n    }\r\n  }\r\n\r\n  const addCard = () => {\r\n    if(newCardText !== '') {\r\n      // three parameters: 1.text 2.list id 3.board id\r\n      boardFuncs.addCard(newCardText, list.id, currentBoardId);\r\n      setAlert('card added', 'success');\r\n      setNewCardText('');\r\n    }\r\n  }\r\n\r\n  const cancelAddCard = () => {\r\n    setWantToAddCard(false);\r\n    setNewCardText('');\r\n  }\r\n\r\n  const onListCLick = () => {\r\n    setCurrentListId(list.id);\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-list' onClick={onListCLick}>\r\n      <div className='trello-board-list-header'>\r\n        { list.title }\r\n      </div>\r\n      <div className='trello-board-list-items'>\r\n        { list.items.map((i, index) => (\r\n          <BoardListItem key={i.id} item={i} />\r\n        )) }\r\n        <div className={`trello-board-list-item trello-board-card-compose  ${!wantToAddCard && 'd-n'}`}>\r\n          <textarea\r\n            className='trello-board-card-compose-textarea'\r\n            id='card-compose-textarea'\r\n            placeholder='Enter a title for this card'\r\n            onBlur={onTextareaBlur}\r\n            onKeyUp={onKeyUp}\r\n            onChange={onChange}\r\n            value={newCardText}>\r\n\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`trello-board-footer ${!wantToAddCard && 'hover cursor-p'}`}\r\n        onClick={onAddCardClick}>\r\n        { !wantToAddCard\r\n          ?  (<div>\r\n                {list.items.length === 0 ? '+ Add a card' : '+ Add another card'}\r\n              </div>) \r\n          : (\r\n            <Fragment>\r\n              <div className='btn btn-success' onClick={addCard}>\r\n                Add Card\r\n              </div>\r\n              <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddCard}>\r\n                &times;\r\n              </div>\r\n            </Fragment>\r\n          )  \r\n        }      \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardList\r\n","import React, { Fragment, useState, useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst AddList = ({ board }) => {\r\n  const boardContext = useContext(BoardContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { addList } = boardContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [text, setText] = useState('')\r\n\r\n  const onClick = () => {\r\n    setIsAdding(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    if(text !== '') {\r\n      onAddList();\r\n    } else {\r\n      cancelAddList();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAddList();\r\n    }\r\n  }\r\n\r\n  const onAddList = () => {\r\n    if(text !== '') {\r\n      addList(text, board.id);\r\n      setAlert(`list ${text} added`, 'success');\r\n      setText('');\r\n    } else {\r\n      console.log('alert');\r\n    }\r\n  }\r\n\r\n  const cancelAddList = () => {\r\n    setIsAdding(false);\r\n    setText('');\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`trello-board-add-list-btn btn-light op-8 darken-20 text-dark ${isAdding && 'd-n'}`}\r\n        onClick={onClick}>\r\n          { board && board.lists.length === 0 ? '+ Add a list' : '+ Add another list' }\r\n      </div>\r\n      <div\r\n        className={`trello-board-add-list-form btn-light op-9 darken-20 text-dark ${!isAdding && 'd-n'}`}>\r\n          <input\r\n            type='text'\r\n            className='m-0 rounded-lg mb-1'\r\n            placeholder='Enter list name'\r\n            value={text}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            onKeyUp={onKeyUp}/>\r\n          <div className='btn btn-success' onClick={onAddList}>\r\n            Add List\r\n          </div>\r\n          <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddList}>\r\n            &times;\r\n          </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddList\r\n","import React from 'react';\r\nimport BoardList from './BoardList';\r\nimport AddList from './AddList';\r\n\r\nconst BoardMain = ({ board, boardFuncs /* contains all of board context  */ }) => {\r\n  const mainStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-main' style={mainStyle}>\r\n      { board &&\r\n        board.lists.map(l => (\r\n          <div key={l.id} className='trello-board-list-wrapper'>\r\n            <BoardList list={l} boardFuncs={boardFuncs} />\r\n          </div>\r\n        )) }\r\n      <div className='trello-board-list-wrapper'>\r\n        <AddList board={board} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardMain\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport BoardNavbar from './BoardNavbar';\r\nimport BoardMain from './BoardMain';\r\n\r\n// context\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\n// css\r\nimport './board.css';\r\n\r\nconst Board = () => {\r\n  const [board, setBoard] = useState(null);\r\n\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { getBoard, setStar, setDescribtion, setTitle } = boardContext;\r\n\r\n  useEffect(() => {\r\n    setBoard(getBoard(currentBoardId));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const boardStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <BoardNavbar\r\n        board={board}\r\n        setStar={setStar}\r\n        setDescribtion={setDescribtion}\r\n        setTitle={setTitle} />\r\n      <div className='trello-board-main-wrapper lighten-20 p' style={boardStyle}>\r\n        <BoardMain boardFuncs={boardContext} board={board} />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nimport './modals.css';\r\n\r\nconst AddBoardModal = () => {\r\n  const { setModal } = useContext(UserContext);\r\n  const { addBoard } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const [bg, setBg] = useState('#ee3a59');\r\n  const [text, setText] = useState('');\r\n\r\n  const onBgClicked = (e) => {\r\n    setBg(e.target.id);\r\n  }\r\n\r\n  const onClose = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAdd();\r\n    }\r\n  }\r\n\r\n  const onAdd = () => {\r\n    if(text !== '') {\r\n      addBoard(text, bg);\r\n      onClose();\r\n      setAlert(`board ${text.charAt(0).toUpperCase() + text.slice(1)} was created`, 'success', 4000);\r\n    } else {\r\n      setAlert('board name is required', 'warning', 2500);\r\n    }\r\n  }\r\n\r\n  const bgColor = {\r\n    backgroundColor: bg\r\n  }\r\n\r\n  return (\r\n    <div className='modal-content add-board-modal-content'>\r\n      <div className='grid-3-1'>\r\n        <div className='p-1 grid-3-1 rounded-lg' style={bgColor}>\r\n          <div>\r\n            <input\r\n              type='text'\r\n              placeholder='Add board title'\r\n              value={text}\r\n              onChange={onChange}\r\n              onKeyUp={onKeyUp}\r\n              className='m-0 border-0 text-bold text-light pl-1 rounded'/>\r\n          </div>\r\n          <div>\r\n            <div className='close' onClick={onClose}>\r\n              &times;\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='grid-3 gap-half' onClick={onBgClicked}>\r\n          <div id='#ee3a59' className='rounded-lg p-1 label-red cursor-p'></div>\r\n          <div id='#e27b47' className='rounded-lg p-1 label-orange cursor-p'></div>\r\n          <div id='#efca58' className='rounded-lg p-1 label-yellow cursor-p'></div>\r\n          <div id='#46b29e' className='rounded-lg p-1 label-blue-l cursor-p'></div>\r\n          <div id='#344e5c' className='rounded-lg p-1 label-blue-d cursor-p'></div>\r\n          <div></div>\r\n          <div id='custom' className='rounded-lg p-1 bg-light cursor-p'></div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        onClick={onAdd}\r\n        className={`btn btn-narrow m text-bold ${text !== '' && 'btn-success'}`}>\r\n          Create Board\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddBoardModal\r\n","import React from 'react'\r\n\r\nconst DetailsModal = () => {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailsModal\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst FastEditModal = () => {\r\n  const { currentBoardId, currentListId, fastEditModalPos, currentCard, clearCurrentCard } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const [text, setText] = useState('')\r\n\r\n  const modalPos = {\r\n    position: 'absolute',\r\n    top: fastEditModalPos.top + 'px',\r\n    left: fastEditModalPos.left + 'px',\r\n    // width: fastEditModalPos.width + 'px',\r\n  }\r\n\r\n  const rightWidth = {\r\n    width: fastEditModalPos.width + 'px',\r\n    background: '#ccc',\r\n  }\r\n\r\n  const temp = {\r\n    animation: 'tempAnim 100ms ease-in',\r\n    background: '#ccc',\r\n    padding: '0.2rem 1rem',\r\n    display: 'inline-block',\r\n\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onUpdate();\r\n    }\r\n  }\r\n\r\n  const onUpdate = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      text\r\n    }\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    clearCurrentCard();\r\n  }\r\n\r\n  return (\r\n    <div style={modalPos} className='modal-content grid-2'>\r\n      <div style={rightWidth} className='p-1 pb-3'>\r\n        <input\r\n          className='m-0 border-0'\r\n          type='text'\r\n          value={text}\r\n          onChange={onChange}\r\n          onKeyUp={onKeyUp}/>\r\n      </div>\r\n      <div>\r\n        <div style={temp}>\r\n          set label\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className='btn btn-success' onClick={onUpdate}>\r\n          Save\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FastEditModal\r\n","import React from 'react'\r\n\r\nconst OptionsModal = () => {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OptionsModal\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport AddBoardModal from './AddBoardModal';\r\nimport DetailsModal from './DetailsModal';\r\nimport FastEditModal from './FastEditModal';\r\nimport OptionsModal from './OptionsModal';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nimport './modals.css';\r\n\r\nconst Modal = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { modalStatus, modalType, setModal } = userContext;\r\n\r\n  const [showModal, setShowModal] = useState('off');\r\n  \r\n  useEffect(() => {\r\n    setShowModal(modalStatus/* from useState */);\r\n    // for development purposes\r\n    // setModal('on', 'addBoardModal');\r\n    // eslint-disable-next-line\r\n  }, [modalStatus])\r\n\r\n  const onClick = (e) => {\r\n    if(e.target.classList.contains('modal')) {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const modalDisplay = {\r\n    display: showModal === 'on' ? 'block' : 'none'\r\n  }\r\n\r\n  return (\r\n    <div \r\n      style={modalDisplay}\r\n      className='modal'\r\n      onClick={onClick}>\r\n      {\r\n        modalType === 'addBoardModal' && <AddBoardModal />\r\n      }\r\n      {\r\n        modalType === 'detailsModal' && <DetailsModal />\r\n      }\r\n      {\r\n        modalType === 'fastEditModal' && <FastEditModal />\r\n      }\r\n      {\r\n        modalType === 'optionsModal' && <OptionsModal />\r\n      }\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\n\r\nconst AlertItem = ({ alert, deleteAlert }) => {\r\n  const onClick = () => {\r\n    deleteAlert(alert.id);\r\n  }\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      className={`trello-alert-item alert rounded-lg alert-${alert.type}`}>\r\n        <div className='trello-alert-item-msg'>\r\n          { alert.msg.charAt(0).toUpperCase() + alert.msg.slice(1) }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertItem\r\n","import React, { useContext } from 'react';\r\nimport AlertItem from './AlertItem';\r\n\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alerts = () => {\r\n  const { alerts, deleteAlert } = useContext(AlertContext);\r\n\r\n  return (\r\n    <div className='trello-alerts-wrapper'>\r\n      {\r\n        alerts.map(a => (\r\n          <AlertItem\r\n            key={a.id}\r\n            alert={a}\r\n            deleteAlert={deleteAlert} />\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alerts\r\n","import React, { Fragment, useEffect, useContext } from 'react';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Home from './components/pages/home/Home';\r\nimport Board from './components/pages/board/Board';\r\nimport Modal from './components/modal/Modal';\r\nimport Alerts from './components/alert/Alerts';\r\n\r\nimport UserContext from './context/user/userContext';\r\n\r\nimport './trello-clone.css';\r\nimport './trello-clone-keyframes.css';\r\n\r\nconst App = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setCurrentBoardId, currentBoardId } = userContext\r\n\r\n  // to display board page for development purposes\r\n  useEffect(() => {\r\n    setCurrentBoardId(1);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Modal />\r\n      <Alerts />\r\n      { !currentBoardId\r\n          ? <Home />\r\n          : <Board />\r\n      }\r\n      {/* <Home /> */}\r\n      {/* <Board /> */}\r\n    </Fragment>\r\n  );\r\n}\r\nexport default App","import {\r\n  ADD_BOARD,\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_DESCRIBTION,\r\n  ADD_LIST,\r\n  ADD_CARD,\r\n  UPDATE_CARD\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_BOARD:\r\n      return {\r\n        ...state,\r\n        boards: [...state.boards, action.payload]\r\n      }\r\n    case SET_TITLE:\r\n      return {\r\n        ...state,\r\n        baords: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.title = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_STAR:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.starred = !b.starred\r\n          }\r\n          return b\r\n        }),\r\n        listOfStarredBoardsIds: action.payload.newListOfStarredBoardsIds\r\n      }\r\n    case SET_DESCRIBTION:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.describtion = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.lists.push(action.payload.newList)\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items.push(action.payload.newCard);\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// board state\r\nexport const ADD_BOARD = 'ADD_BOARD';\r\nexport const GET_BOARDS_NAMES = 'GET_BOARDS_NAMES';\r\nexport const SET_TITLE = 'SET_TITLE';\r\nexport const SET_STAR = 'SET_STAR';\r\nexport const SET_DESCRIBTION = 'SET_DESCRIBTION';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const ADD_CARD = 'ADD_CARD';\r\nexport const UPDATE_CARD = 'UPDATE_CARD';\r\n\r\n// alert state\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const DELETE_ALERT = 'DELETE_ALERT';\r\n\r\n// user state\r\nexport const SET_CURRENT_BOARD_ID = 'SET_CURRENT_BOARD_ID';\r\nexport const CLEAR_CURRENT_BOARD_ID = 'CLEAR_CURRENT_BOARD_ID';\r\nexport const SET_CURRENT_LIST_ID = 'SET_CURRENT_LIST_ID';\r\nexport const CLEAR_CURRENT_LIST_ID = 'CLEAR_CURRENT_LIST_ID';\r\nexport const SET_RECENT_IDS = 'SET_RECENT_IDS';\r\nexport const SET_MODAL = 'SET_MODAL';\r\nexport const SET_MODAL_TYPE = 'SET_MODAL_TYPE';\r\nexport const SET_FAST_EDIT_MODAL_POS = 'SET_FAST_EDIT_MODAL_POS';\r\nexport const SET_CURRENT_CARD = 'SET_CURRENT_CARD';\r\nexport const CLEAR_CURRENT_CARD = 'CLEAR_CURRENT_CARD';\r\n\r\n// \r\nexport const TEST = 'TEST';\r\n","import React, { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\nimport BoardContext from './boardContext';\r\nimport boardReducer from './boardReducer';\r\nimport {\r\n  ADD_BOARD,\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_DESCRIBTION,\r\n  ADD_LIST,\r\n  ADD_CARD,\r\n  UPDATE_CARD\r\n} from '../types';\r\n\r\nconst BoardState = props => {\r\n  const initialState = {\r\n    boards: [\r\n      {\r\n        title: 'my nice board',\r\n        id: 1,\r\n        color: '#e27b47',\r\n        starred: false,\r\n        describtion: 'board describtion goes here',\r\n        lists: [\r\n          {\r\n            title: 'todos',\r\n            id: uuid.v4(),\r\n            items: [\r\n              {\r\n                text: 'todo 1',\r\n                desc: 'one describtion',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 1',\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n            ]\r\n          },\r\n          {\r\n            title: 'doing',\r\n            id: uuid.v4(),\r\n            items: [\r\n              {\r\n                text: 'doing 1',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 3',\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 3',\r\n                  'label 4'\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 3',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 4',\r\n                  'label 2'\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            title: 'new list',\r\n            id: uuid.v4(),\r\n            items: [\r\n\r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        title: 'test empty',\r\n        id: 2,\r\n        starred: false,\r\n        color: '#4759a3',\r\n        describtion: '',\r\n        lists: [\r\n\r\n        ]\r\n      }\r\n    ],\r\n    listOfStarredBoardsIds: []\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(boardReducer, initialState);\r\n\r\n  // Get data\r\n  const getBoardsNames = () => {\r\n    const list = state.boards.map(b => b.title);\r\n    \r\n    return list\r\n  };\r\n\r\n  const addBoard = (title, color) => {\r\n    const newBaord = {\r\n      title,\r\n      id: uuid.v4(),\r\n      color,\r\n      starred: false,\r\n      describtion: '',\r\n      lists: []\r\n    }\r\n    dispatch({\r\n      type: ADD_BOARD,\r\n      payload: newBaord\r\n    });\r\n  }\r\n\r\n  // get  recent used boards based on user state\r\n  const getRecentBoards = (ids) => {\r\n    const list = [];\r\n\r\n    ids && ids.forEach(id => list.push(getBoard(id)));\r\n\r\n    return list\r\n  }\r\n\r\n  // get boards with starred = true\r\n  const getStarredBoards = () => {\r\n    const list = [];\r\n    state.listOfStarredBoardsIds.forEach(id => list.push(getBoard(id)));\r\n\r\n    return list;\r\n  }\r\n\r\n  // send a single board to board page (returns an array with one object)\r\n  const getBoard = (id) => {\r\n    const board = state.boards.filter(b => b.id === id);\r\n\r\n    return board[0]\r\n  }\r\n\r\n  // set board title\r\n  const setTitle = (text, id) => {\r\n    dispatch({\r\n      type: SET_TITLE,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board starred or unstarred\r\n  const setStar = (id) => {\r\n    let newListOfStarredBoardsIds = state.listOfStarredBoardsIds;\r\n    if(state.listOfStarredBoardsIds.indexOf(id) !== -1) {\r\n      newListOfStarredBoardsIds.splice(state.listOfStarredBoardsIds.indexOf(id), 1);\r\n    } else {\r\n      newListOfStarredBoardsIds.push(id);\r\n    }\r\n    dispatch({\r\n      type: SET_STAR,\r\n      payload: {\r\n        id,\r\n        newListOfStarredBoardsIds\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board describtion\r\n  const setDescribtion = (text, id) => {\r\n    dispatch({\r\n      type: SET_DESCRIBTION,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // add List to board\r\n  const addList = (text, id) => {\r\n    const newList = {\r\n      title: text,\r\n      id: uuid.v4(),\r\n      items: []\r\n    }\r\n    dispatch({\r\n      type: ADD_LIST,\r\n      payload: {\r\n        id,\r\n        newList\r\n      }\r\n    });\r\n  }\r\n\r\n  // add card to list\r\n  const addCard = (text, listId, boardId) => {\r\n    const newCard = {\r\n      text,\r\n      id: uuid.v4(),\r\n      labels: []\r\n    }\r\n    dispatch({\r\n      type: ADD_CARD,\r\n      payload: {\r\n        newCard,\r\n        listId,\r\n        boardId\r\n      }\r\n    });\r\n  }\r\n\r\n  // update card\r\n  const updateCard = (boardId, listId, cardId, newCard) => {\r\n    console.log(boardId, listId, cardId, newCard);\r\n    dispatch({\r\n      type: UPDATE_CARD,\r\n      payload: {\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <BoardContext.Provider\r\n      value={{\r\n        boards: state.boards,\r\n        addBoard,\r\n        getBoardsNames,\r\n        getRecentBoards,\r\n        getStarredBoards,\r\n        getBoard,\r\n        setTitle,\r\n        setStar,\r\n        setDescribtion,\r\n        addList,\r\n        addCard,\r\n        updateCard\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BoardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BoardState;","import { \r\n  SET_ALERT,\r\n  DELETE_ALERT\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: [action.payload]\r\n      }\r\n    case DELETE_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: state.alerts.filter(a => a.id !== action.payload)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\nimport AlertContext from './alertContext';\r\nimport alertReducer from './alertReducer';\r\nimport { \r\n  SET_ALERT,\r\n  DELETE_ALERT\r\n} from '../types';\r\n\r\nconst AlertState = props => {\r\n  const initialState = {\r\n    alerts: []\r\n    };\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n  // Get data\r\n  const setAlert = (msg, type, time) => {\r\n    const listOfMsgs = state.alerts.map(a => a.msg);\r\n    if(listOfMsgs.indexOf(msg) === -1) {\r\n      const newAlert = {\r\n        msg,\r\n        id: uuid.v4(),\r\n        type,\r\n      }\r\n\r\n      dispatch({\r\n        type: SET_ALERT,\r\n        payload: newAlert\r\n      });\r\n\r\n      setTimeout(() => {\r\n        deleteAlert(newAlert.id);\r\n      }, time ? time : 3000);\r\n    }\r\n  };\r\n\r\n  const deleteAlert = (id) => {\r\n    dispatch({\r\n      type: DELETE_ALERT,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alerts: state.alerts,\r\n        setAlert,\r\n        deleteAlert\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;","import { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_CURRENT_LIST_ID,\r\n  CLEAR_CURRENT_LIST_ID,\r\n  SET_CURRENT_CARD,\r\n  CLEAR_CURRENT_CARD,\r\n  SET_RECENT_IDS,\r\n  SET_MODAL,\r\n  SET_MODAL_TYPE,\r\n  SET_FAST_EDIT_MODAL_POS\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_BOARD_ID:\r\n     return {\r\n       ...state,\r\n       currentBoardId: action.payload\r\n     }\r\n    case CLEAR_CURRENT_BOARD_ID:\r\n      return {\r\n        ...state,\r\n        currentBoardId: null\r\n      }\r\n    case SET_CURRENT_LIST_ID:\r\n      return {\r\n        ...state,\r\n        currentListId: action.payload\r\n      }\r\n    case CLEAR_CURRENT_LIST_ID:\r\n      return {\r\n        ...state,\r\n        currentListId: null\r\n      }\r\n    case SET_CURRENT_CARD:\r\n      return {\r\n        ...state,\r\n        currentCard: action.payload\r\n      }\r\n    case CLEAR_CURRENT_CARD:\r\n      return {\r\n        ...state,\r\n        currentCard: null\r\n      }\r\n    case SET_RECENT_IDS:\r\n      return {\r\n        ...state,\r\n        recentIds: action.payload\r\n      }\r\n    case SET_MODAL:\r\n      return {\r\n        ...state,\r\n        modalStatus: action.payload\r\n      }\r\n    case SET_MODAL_TYPE:\r\n      return {\r\n        ...state,\r\n        modalType: action.payload\r\n      }\r\n\r\n    case SET_FAST_EDIT_MODAL_POS:\r\n      return {\r\n        ...state,\r\n        fastEditModalPos: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer } from 'react';\r\nimport UserContext from './userContext';\r\nimport userReducer from './userReducer';\r\nimport { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_CURRENT_LIST_ID,\r\n  CLEAR_CURRENT_LIST_ID,\r\n  SET_CURRENT_CARD,\r\n  CLEAR_CURRENT_CARD,\r\n  SET_RECENT_IDS,\r\n  SET_MODAL,\r\n  SET_MODAL_TYPE,\r\n  SET_FAST_EDIT_MODAL_POS\r\n} from '../types';\r\n\r\nconst UserState = props => {\r\n  const initialState = {\r\n    currentBoardId: null,\r\n    currentListId: null,\r\n    currentCard: null,\r\n    recentIds: [],\r\n    ModalStatus: 'off',\r\n    modalType: null,\r\n    fastEditModalPos: null\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(userReducer, initialState);\r\n\r\n  const setCurrentBoardId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_BOARD_ID,\r\n      payload: id\r\n    });\r\n    setRecentBaord(id);\r\n  }\r\n\r\n  // set new board to recent\r\n  const setRecentBaord = (id) => {\r\n    const newRecentIds = state.recentIds;\r\n    if(newRecentIds.length === 3 && id !== null) {\r\n      newRecentIds.shift();\r\n      newRecentIds.push(id);\r\n    } else if(id !== null) {\r\n      newRecentIds.push(id);\r\n    }\r\n    dispatch({\r\n      type: SET_RECENT_IDS,\r\n      payload: newRecentIds\r\n    });\r\n  }\r\n\r\n  // also can be done with \"setCurrentBoardId(null)\"\r\n  const clearCurrentBoardId = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_BOARD_ID\r\n    });\r\n  }\r\n\r\n  const setCurrentListId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_LIST_ID,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  const clearCurrentListId = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_LIST_ID\r\n    });\r\n  }\r\n\r\n  const setCurrentCard = (card) => {\r\n    dispatch({\r\n      type: SET_CURRENT_CARD,\r\n      payload: card\r\n    });\r\n  }\r\n\r\n  const clearCurrentCard = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_CARD\r\n    });\r\n  }\r\n\r\n  const setModal = (status, type) => {\r\n    dispatch({\r\n      type: SET_MODAL,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearModalType();\r\n    } if(status === 'on') {\r\n      setModalType(type);\r\n    }\r\n  }\r\n\r\n  const setModalType = (type) => {\r\n    dispatch({\r\n      type: SET_MODAL_TYPE,\r\n      payload: type\r\n    });\r\n  }\r\n\r\n  const clearModalType = () => {\r\n    dispatch({\r\n      type: SET_MODAL_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setFastEditModalPos = (pos) => {\r\n    dispatch({\r\n      type: SET_FAST_EDIT_MODAL_POS,\r\n      payload: pos\r\n    });\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        currentBoardId: state.currentBoardId,\r\n        currentListId: state.currentListId,\r\n        currentCard: state.currentCard,\r\n        recentIds: state.recentIds,\r\n        modalStatus: state.modalStatus,\r\n        modalType: state.modalType,\r\n        fastEditModalPos: state.fastEditModalPos,\r\n        setCurrentBoardId,\r\n        clearCurrentBoardId,\r\n        setCurrentListId,\r\n        clearCurrentListId,\r\n        setCurrentCard,\r\n        clearCurrentCard,\r\n        setModal,\r\n        setFastEditModalPos,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport BoardState from './context/board/BoardState';\nimport AlertState from './context/alert/AlertState';\nimport UserState from './context/user/UserState';\n\nconst StateContainer = () => {\n  return (\n    <BoardState>\n      <AlertState>\n        <UserState>\n          <App />\n        </UserState>\n      </AlertState>\n    </BoardState>\n  );\n}\n\nReactDOM.render(<StateContainer />, document.getElementById('root'));"],"sourceRoot":""}