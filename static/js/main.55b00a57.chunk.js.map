{"version":3,"sources":["context/user/userContext.js","context/board/boardContext.js","components/layout/Navbar.js","components/pages/home/SideListItem.js","components/pages/home/HomeSideList.js","components/pages/home/HomeMainItem.js","components/pages/home/Recent.js","components/pages/home/Starred.js","components/pages/home/HomeMain.js","components/pages/home/Home.js","components/pages/board/BoardTitle.js","components/pages/board/BoardNavbar.js","components/pages/board/BoardListItem.js","components/pages/board/BoardList.js","components/pages/board/AddList.js","components/pages/board/BoardMain.js","components/pages/board/Board.js","App.js","context/board/boardReducer.js","context/types.js","context/board/BoardState.js","context/alert/alertContext.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/user/userReducer.js","context/user/UserState.js","index.js"],"names":["UserContext","createContext","BoardContext","Navbar","userContext","useContext","boardContext","clearCurrentBoardId","currentBoardId","getBoard","navbarStyle","background","color","titleTextStyle","className","style","onClick","type","id","SideListItem","board","setCurrentBoardId","useState","isHover","setIsHover","hoverStyle","opacity","onMouseEnter","onMouseLeave","title","HomeSideList","boards","map","b","key","HomeMainItem","setStar","itemStyle","e","target","classList","contains","starred","Recent","getRecentBoards","recentIds","useEffect","console","log","length","r","uuid","v4","Starred","getStarredBoards","s","HomeMain","Home","BoardTitle","setTitle","text","setText","isSettingTitle","setIsSettingTitle","onBlur","onChange","value","onKeyUp","keyCode","BoardNavbar","setDescription","descText","setDescText","isSettingDesc","setIsSettingDesc","onSetDesc","description","document","querySelector","focus","BoardListItem","item","BoardList","list","boardFuncs","wantToAddCard","setWantToAddCard","newCardText","setNewCardText","addCard","cancelAddCard","items","i","index","placeholder","setTimeout","AddList","lists","BoardMain","mainStyle","l","Board","setBoard","boardStyle","App","state","action","baords","payload","listOfStarredBoardsIds","newListOfStarredBoardsIds","boardId","listId","push","newCard","BoardState","props","initialState","labels","useReducer","boardReducer","dispatch","filter","Provider","getBoardsNames","ids","forEach","indexOf","splice","children","AlertContext","test","AlertState","alertReducer","getData","UserState","userReducer","setRecentBaord","newRecentIds","shift","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.55b00a57.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;","import { createContext } from 'react';\r\n\r\nconst BoardContext = createContext();\r\n\r\nexport default BoardContext;\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst Navbar = () => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { clearCurrentBoardId, currentBoardId } = userContext;\r\n  const { getBoard } = boardContext;\r\n\r\n  const homeClick =() => {\r\n    clearCurrentBoardId();\r\n  }\r\n\r\n  const navbarStyle = {\r\n    background: getBoard(currentBoardId) && getBoard(currentBoardId).color\r\n  }\r\n\r\n  const titleTextStyle = {\r\n    color: getBoard(currentBoardId) ? getBoard(currentBoardId).color : '#388d6a'\r\n  }\r\n\r\n  return (\r\n    <div className='trello-navbar' style={navbarStyle}>\r\n      <div>\r\n        <div className='btn btn-square btn-light op-8 rounded' onClick={homeClick}>\r\n          <i className='fa fa-home'></i>\r\n        </div>\r\n        <div className='btn btn-narrow btn-light op-8 rounded'>\r\n          <i className='mr-1 fa fa-notes-medical'></i>\r\n          boards\r\n        </div>\r\n        <div className='d-i-b rounded'>\r\n          <input type='text' className='m-0 bg-light op-8 border-0 rounded' id='search-input'/>\r\n        </div>\r\n      </div>\r\n      <div className='mr-5'>\r\n        <div className='text-white text-bold cursor-p border border-white border-bottom-0'>\r\n          <div className='m mt-0 ml-0 mb-0'>\r\n            trello\r\n          </div>\r\n          <div \r\n            className='bg-white d-i-b border-0 p pt-0 pb-0 pr-0'\r\n            style={titleTextStyle}>\r\n            clone\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className='btn btn-square btn-light op-8 rounded'>\r\n          <i className='fa fa-plus'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst SideListItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n\r\n  const [isHover, setIsHover] = useState(false);\r\n\r\n  const hoverStyle = isHover ? {\r\n    background: board.color,\r\n    color: '#f4f4f4',\r\n    opacity: '0.7'\r\n  } : {\r\n    opacity: '1'\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    setIsHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setIsHover(false);\r\n  }\r\n\r\n  const onClick = () => {\r\n    setCurrentBoardId(board.id)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      onClick={onClick}\r\n      className=\"card pl-1 cursor-p p border-0 rounded-lg text-dark transition text-bold\"\r\n      style={hoverStyle}\r\n      >\r\n      {board.title}\r\n      { <i className=\"fa fa-check m-0 float-right\"></i> }\r\n    </div> \r\n  );\r\n};\r\n\r\nexport default SideListItem","import React, { useContext } from 'react';\r\nimport SideListItem from './SideListItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst HomeSideList = () => {\r\n  const { boards } = useContext(BoardContext);\r\n\r\n  return (\r\n    <aside>\r\n      <button className=\"btn btn-block btn-primary text-left rounded-lg\">\r\n        <i className=\"fa fa-notes-medical mr-1\"></i>\r\n        <div className=\"text-bold d-i-b\">Boards</div>\r\n      </button>\r\n      { boards.map(b => (\r\n        <SideListItem key={b.id} board={b} />\r\n      )) }\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default HomeSideList\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst HomeMainItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n  const { setStar } = boardContext;\r\n\r\n  const itemStyle = {\r\n    background: board.color\r\n  }\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('fa-star')) {\r\n      setCurrentBoardId(board.id);\r\n    }\r\n  }\r\n\r\n  const onStarClicked = () => {\r\n    setStar(board.id);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='trello-home-main-item mt-1 mr-1'\r\n      style={itemStyle}\r\n      onClick={onClick}>\r\n        <div className='text-white func-title'>\r\n          {board.title}\r\n        </div>\r\n        <div\r\n          className='trello-home-main-item-star'\r\n          onClick={onStarClicked}>\r\n          <i className={`fa-star ${board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeMainItem\r\n","import React, { Fragment, useEffect, useContext } from 'react';\r\nimport uuid from 'uuid';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst Recent = () => {\r\n  const boardContext = useContext(BoardContext);\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { getRecentBoards } = boardContext;\r\n  const { recentIds } = userContext;\r\n\r\n  useEffect(() => {\r\n    console.log('if a board is in starred doesnt come in recent {or doesnt matter?}')\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      { getRecentBoards(recentIds).length !== 0\r\n        &&  <div className=\"card border-top-0 border-right-0 border-left-0 pb-2\">\r\n              <i className=\"fa fa-clock mr-1\"></i>\r\n              Recent borads\r\n              <div className=\"\">\r\n                { getRecentBoards(recentIds).map(r => (\r\n                      <HomeMainItem key={uuid.v4()} board={r} />\r\n                    ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Recent\r\n","import React, { Fragment, useContext } from 'react';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Starred = () => {\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { getStarredBoards } = boardContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      { getStarredBoards().length !== 0\r\n        &&  <div className=\"card border-top-0 border-right-0 border-left-0 pb-2\">\r\n              <i className=\"fa fa-star mr-1\"></i>\r\n              favorite borads\r\n              <div className=\"\">\r\n                { getStarredBoards().map(s => (\r\n                      <HomeMainItem key={s.id} board={s} />\r\n                    ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Starred\r\n","import React from 'react';\r\nimport Recent from './Recent';\r\nimport Starred from './Starred';\r\n\r\nconst HomeMain = () => {\r\n  return (\r\n    <main className=\"text-bold\">\r\n      <Recent />\r\n      <Starred />\r\n      <div className=\"card border-0\">\r\n        <div className=\"trello-home-main-item hover\">\r\n          Add Board\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default HomeMain\r\n","import React from 'react';\r\nimport HomeSideList from './HomeSideList';\r\nimport HomeMain from './HomeMain';\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container grid-1-3 mt-3\">\r\n      <HomeSideList />\r\n      <HomeMain />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst BoardTitle = ({ title, setTitle }) => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n\r\n  const [text, setText] = useState('');\r\n  const [isSettingTitle, setIsSettingTitle] = useState(false);\r\n\r\n  const onClick = () => {\r\n    setIsSettingTitle(true);\r\n    setText(title);\r\n    console.log('text filed must be filled with title')\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    if(text !== '') {\r\n      setTitle(text, currentBoardId);\r\n      setIsSettingTitle(false);\r\n    } else {\r\n      setIsSettingTitle(false);\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onBlur();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-i-b\">\r\n      <div\r\n        className={`text-white m-0 ml-1 ${isSettingTitle && 'd-n'}`}\r\n        onClick={onClick}>\r\n        { title }\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        className={`m-0 rounded ${!isSettingTitle && 'd-n'}`}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        onKeyUp={onKeyUp}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardTitle\r\n","import React, { useState } from 'react';\r\nimport BoardTitle from './BoardTitle';\r\n\r\nconst BoardNavbar = ({ board, setStar, setDescription, setTitle }) => {\r\n  const [descText, setDescText] = useState('');\r\n  const [isSettingDesc, setIsSettingDesc] = useState(false);\r\n  \r\n  const onStarClick = () => {\r\n    setStar(board.id);\r\n  }\r\n\r\n  const onDescClick =() => {\r\n    setIsSettingDesc(true);\r\n    setDescText(board.description);\r\n    document.querySelector('#description-input').focus();\r\n  }\r\n\r\n  const onDescTextChange = (e) => {\r\n    e.target.value.length < 51 && setDescText(e.target.value);\r\n    console.log('set alert for maximum length')\r\n  }\r\n\r\n  const onSetDesc = () => {\r\n    setDescription(descText, board.id);\r\n    setIsSettingDesc(false);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetDesc();\r\n    }\r\n  }\r\n\r\n  const navbarStyle = {\r\n      background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-navbar trello-navbar lighten-20' style={navbarStyle}>\r\n      <div className='card border-0 m-0 p-0'>\r\n        { board && <BoardTitle title={board.title} setTitle={setTitle} /> }\r\n        <div className='btn btn-light op-8 btn-square rounded darken-20 ml-1' onClick={onStarClick}>\r\n          <i className={`fa-star ${board && board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n        <div className='ml-1 d-i-b text-white'>\r\n          { \r\n            board\r\n            && !isSettingDesc\r\n              && (board.description ? board.description : 'no description')\r\n          }\r\n        <input\r\n          type='text'\r\n          id='description-input'\r\n          className={`m-0 rounded ${!isSettingDesc && 'd-n'}`}\r\n          value={descText}\r\n          onChange={onDescTextChange}\r\n          onBlur={onSetDesc}\r\n          onKeyUp={onKeyUp} />\r\n        </div>\r\n        <div className='btn btn-light op-8 darken-20 btn-square rounded ml-1' onClick={onDescClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardNavbar\r\n","import React from 'react'\r\n\r\nconst BoardListItem = ({ item }) => {\r\n  return (\r\n    <div className='trello-board-list-item'>\r\n      { item.text }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardListItem\r\n","import React, { Fragment, useState } from 'react';\r\nimport BoardListItem from './BoardListItem';\r\n\r\nconst BoardList = ({ list, boardFuncs /* all of board context */ }) => {\r\n  const [wantToAddCard, setWantToAddCard] = useState(false);\r\n  const [newCardText, setNewCardText] = useState('');\r\n\r\n  const onAddCardClick = () => {\r\n    setWantToAddCard(true);\r\n    setTimeout(() => {\r\n      document.querySelector('#card-compose-textarea').focus();\r\n    }, 100);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setNewCardText(e.target.value);\r\n  }\r\n\r\n  const onTextareaBlur = () => {\r\n    if(newCardText !== '') {\r\n      addCard();\r\n    } else {\r\n      cancelAddCard();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      addCard();\r\n    }\r\n  }\r\n\r\n  const addCard = () => {\r\n    if(newCardText !== '') {\r\n      // three parameters 1.text 2.list id 3.board id\r\n      boardFuncs.addCard(newCardText, list.id, 1);\r\n      setNewCardText('');\r\n    }\r\n    console.log('get third id from user state');\r\n  }\r\n\r\n  const cancelAddCard = () => {\r\n    setWantToAddCard(false);\r\n    setNewCardText('');\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-list'>\r\n      <div className='trello-board-list-header'>\r\n        { list.title }\r\n      </div>\r\n      <div className='trello-board-list-items'>\r\n        { list.items.map((i, index) => (\r\n          <BoardListItem key={i.id} item={i} />\r\n        )) }\r\n        <div className={`trello-board-list-item trello-board-card-compose  ${!wantToAddCard && 'd-n'}`}>\r\n          <textarea\r\n            className='trello-board-card-compose-textarea'\r\n            id='card-compose-textarea'\r\n            placeholder='Enter a title for this card'\r\n            onBlur={onTextareaBlur}\r\n            onKeyUp={onKeyUp}\r\n            onChange={onChange}\r\n            value={newCardText}>\r\n\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n      <div className={`trello-board-footer ${!wantToAddCard && 'hover cursor-p'}`}>\r\n        { !wantToAddCard\r\n          ?  (<div onClick={onAddCardClick}>\r\n                {list.items.length === 0 ? '+ Add a card' : '+ Add another card'}\r\n              </div>) \r\n          : (\r\n            <Fragment>\r\n              <div className='btn btn-success' onClick={addCard}>\r\n                Add Card\r\n              </div>\r\n              <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddCard}>\r\n                &times;\r\n              </div>\r\n            </Fragment>\r\n          )  \r\n        }      \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardList\r\n","import React from 'react'\r\n\r\nconst AddList = ({ board }) => {\r\n  // console.log(board)\r\n  return (\r\n    <div className='trello-board-add-list'>\r\n      { board && board.lists.length === 0 ? '+ Add a list' : '+ Add another list' }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddList\r\n","import React from 'react';\r\nimport BoardList from './BoardList';\r\nimport AddList from './AddList';\r\n\r\nconst BoardMain = ({ board, boardFuncs /* contains all of board context  */ }) => {\r\n  const mainStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-main' style={mainStyle}>\r\n      { board &&\r\n        board.lists.map(l => (\r\n          <div key={l.id} className='trello-board-list-wrapper'>\r\n            <BoardList list={l} boardFuncs={boardFuncs} />\r\n          </div>\r\n        )) }\r\n      <div className='trello-board-list-wrapper'>\r\n        <AddList board={board} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardMain\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport BoardNavbar from './BoardNavbar';\r\nimport BoardMain from './BoardMain';\r\n\r\n// context\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\n// css\r\nimport './board.css';\r\n\r\nconst Board = () => {\r\n  const [board, setBoard] = useState(null);\r\n\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { getBoard, setStar, setDescription, setTitle } = boardContext;\r\n\r\n  useEffect(() => {\r\n    setBoard(getBoard(currentBoardId));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const boardStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <BoardNavbar\r\n        board={board}\r\n        setStar={setStar}\r\n        setDescription={setDescription}\r\n        setTitle={setTitle} />\r\n      <div className='trello-board-main-wrapper lighten-20 p' style={boardStyle}>\r\n        <BoardMain boardFuncs={boardContext} board={board} />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import React, { Fragment, useEffect, useContext } from 'react';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Home from './components/pages/home/Home';\r\nimport Board from './components/pages/board/Board';\r\n\r\nimport UserContext from './context/user/userContext';\r\n\r\nimport './trello-clone.css';\r\nimport './trello-clone-keyframes.css';\r\n\r\nconst App = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setCurrentBoardId, currentBoardId } = userContext\r\n\r\n  // to display board page for development purposes\r\n  useEffect(() => {\r\n    setCurrentBoardId(1);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      { !currentBoardId\r\n          ? <Home />\r\n          : <Board />\r\n      }\r\n      {/* <Home /> */}\r\n      {/* <Board /> */}\r\n    </Fragment>\r\n  );\r\n}\r\nexport default App","import {\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_DESCRIPTION,\r\n  ADD_CARD\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_TITLE:\r\n      return {\r\n        ...state,\r\n        baords: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.title = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_STAR:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.starred = !b.starred\r\n          }\r\n          return b\r\n        }),\r\n        listOfStarredBoardsIds: action.payload.newListOfStarredBoardsIds\r\n      }\r\n    case SET_DESCRIPTION:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.description = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items.push(action.payload.newCard);\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// board state\r\nexport const GET_BOARDS_NAMES = 'GET_BOARDS_NAMES';\r\nexport const SET_TITLE = 'SET_TITLE';\r\nexport const SET_STAR = 'SET_STAR';\r\nexport const SET_DESCRIPTION = 'SET_DESCRIPTION';\r\nexport const ADD_CARD = 'ADD_CARD';\r\n\r\n// alert state\r\n\r\n// user state\r\nexport const SET_CURRENT_BOARD_ID = 'SET_CURRENT_BOARD_ID';\r\nexport const CLEAR_CURRENT_BOARD_ID = 'CLEAR_CURRENT_BOARD_ID';\r\nexport const SET_RECENT_IDS = 'SET_RECENT_IDS';\r\n\r\n// \r\nexport const TEST = 'TEST';\r\n","import React, { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\nimport BoardContext from './boardContext';\r\nimport boardReducer from './boardReducer';\r\nimport {\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_DESCRIPTION,\r\n  ADD_CARD\r\n} from '../types';\r\n\r\nconst BoardState = props => {\r\n  const initialState = {\r\n    boards: [\r\n      {\r\n        title: 'my nice board',\r\n        id: 1,\r\n        color: '#e27b47',\r\n        starred: false,\r\n        description: 'board description goes here',\r\n        lists: [\r\n          {\r\n            title: 'todos',\r\n            id: uuid.v4(),\r\n            items: [\r\n              {\r\n                text: 'todo 1',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 1',\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n            ]\r\n          },\r\n          {\r\n            title: 'doing',\r\n            id: uuid.v4(),\r\n            items: [\r\n              {\r\n                text: 'doing 1',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 3',\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 3',\r\n                  'label 4'\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 3',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 4',\r\n                  'label 2'\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            title: 'new list',\r\n            id: uuid.v4(),\r\n            items: [\r\n\r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        title: 'test empty',\r\n        id: 2,\r\n        starred: false,\r\n        color: '#4759a3',\r\n        lists: [\r\n\r\n        ]\r\n      }\r\n    ],\r\n    listOfStarredBoardsIds: []\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(boardReducer, initialState);\r\n\r\n  // Get data\r\n  const getBoardsNames = () => {\r\n    const list = state.boards.map(b => b.title);\r\n    \r\n    return list\r\n  };\r\n\r\n  // get  recent used boards based on user state\r\n  const getRecentBoards = (ids) => {\r\n    const list = [];\r\n\r\n    ids && ids.forEach(id => list.push(getBoard(id)));\r\n\r\n    return list\r\n  }\r\n\r\n  // get boards with starred = true\r\n  const getStarredBoards = () => {\r\n    const list = [];\r\n    state.listOfStarredBoardsIds.forEach(id => list.push(getBoard(id)));\r\n\r\n    return list;\r\n  }\r\n\r\n  // send a single board to board page (returns an array with one object)\r\n  const getBoard = (id) => {\r\n    const board = state.boards.filter(b => b.id === id);\r\n\r\n    return board[0]\r\n  }\r\n\r\n  // set board title\r\n  const setTitle = (text, id) => {\r\n    dispatch({\r\n      type: SET_TITLE,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board starred or unstarred\r\n  const setStar = (id) => {\r\n    let newListOfStarredBoardsIds = state.listOfStarredBoardsIds;\r\n    if(state.listOfStarredBoardsIds.indexOf(id) !== -1) {\r\n      newListOfStarredBoardsIds.splice(state.listOfStarredBoardsIds.indexOf(id), 1);\r\n    } else {\r\n      newListOfStarredBoardsIds.push(id);\r\n    }\r\n    dispatch({\r\n      type: SET_STAR,\r\n      payload: {\r\n        id,\r\n        newListOfStarredBoardsIds\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board description\r\n  const setDescription = (text, id) => {\r\n    dispatch({\r\n      type: SET_DESCRIPTION,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // add card to list\r\n  const addCard = (text, listId, boardId) => {\r\n    const newCard = {\r\n      text,\r\n      id: uuid.v4(),\r\n      labels: []\r\n    }\r\n    dispatch({\r\n      type: ADD_CARD,\r\n      payload: {\r\n        newCard,\r\n        listId,\r\n        boardId\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <BoardContext.Provider\r\n      value={{\r\n        boards: state.boards,\r\n        getBoardsNames,\r\n        getRecentBoards,\r\n        getStarredBoards,\r\n        getBoard,\r\n        setTitle,\r\n        setStar,\r\n        setDescription,\r\n        addCard\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BoardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BoardState;","import { createContext } from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext;","import { \r\n  TEST\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case TEST:\r\n      return {\r\n        ...state,\r\n        test: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport alertReducer from './alertReducer';\r\nimport { \r\n  TEST\r\n } from '../types';\r\n\r\nconst AlertState = props => {\r\n  const initialState = {\r\n    test: 'test'\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n  // Get data\r\n  const getData = () => {\r\n    dispatch({\r\n      type: TEST,\r\n      payload: 'new test'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        test: state.test,\r\n        getData\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;","import { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_RECENT_IDS,\r\n  TEST\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case TEST:\r\n      return {\r\n        ...state,\r\n        test: action.payload\r\n      }\r\n    case SET_CURRENT_BOARD_ID:\r\n     return {\r\n       ...state,\r\n       currentBoardId: action.payload\r\n     }\r\n    case CLEAR_CURRENT_BOARD_ID:\r\n      return {\r\n        ...state,\r\n        currentBoardId: null\r\n      }\r\n    case SET_RECENT_IDS:\r\n      return {\r\n        ...state,\r\n        recentIds: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer } from 'react';\r\nimport UserContext from './userContext';\r\nimport userReducer from './userReducer';\r\nimport { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_RECENT_IDS\r\n} from '../types';\r\n\r\nconst UserState = props => {\r\n  const initialState = {\r\n    currentBoardId: null,\r\n    recentIds: []\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(userReducer, initialState);\r\n\r\n  // Get data\r\n  // eslint-disable-next-line\r\n  const getData = () => {\r\n    dispatch({\r\n      type: null,\r\n      payload: 'new test'\r\n    });\r\n  };\r\n\r\n  const setCurrentBoardId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_BOARD_ID,\r\n      payload: id\r\n    });\r\n    setRecentBaord(id);\r\n  }\r\n\r\n  // set new board to recent\r\n  const setRecentBaord = (id) => {\r\n    const newRecentIds = state.recentIds;\r\n    if(newRecentIds.length === 3 && id !== null) {\r\n      newRecentIds.shift();\r\n      newRecentIds.push(id);\r\n    } else if(id !== null) {\r\n      newRecentIds.push(id);\r\n    }\r\n    dispatch({\r\n      type: SET_RECENT_IDS,\r\n      payload: newRecentIds\r\n    });\r\n  }\r\n\r\n  // also can be done with \"setCurrentBoardId(null)\"\r\n  const clearCurrentBoardId = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_BOARD_ID\r\n    });\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        currentBoardId: state.currentBoardId,\r\n        recentIds: state.recentIds,\r\n        setCurrentBoardId,\r\n        clearCurrentBoardId,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport BoardState from './context/board/BoardState';\nimport AlertState from './context/alert/AlertState';\nimport UserState from './context/user/UserState';\n\nconst StateContainer = () => {\n  return (\n    <BoardState>\n      <AlertState>\n        <UserState>\n          <App />\n        </UserState>\n      </AlertState>\n    </BoardState>\n  );\n}\n\nReactDOM.render(<StateContainer />, document.getElementById('root'));"],"sourceRoot":""}