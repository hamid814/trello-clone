{"version":3,"sources":["components/layout/Navbar.js","context/user/userContext.js","context/board/boardContext.js","components/pages/board/BoardNavbar.js","components/pages/board/BoardListItem.js","components/pages/board/BoardList.js","components/pages/board/BoardMain.js","components/pages/board/Board.js","App.js","context/board/boardReducer.js","context/types.js","context/board/BoardState.js","context/alert/alertContext.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/user/userReducer.js","context/user/UserState.js","index.js"],"names":["Navbar","className","type","id","UserContext","createContext","BoardContext","BoardNavbar","board","setStar","setDescription","useState","descText","setDescText","isSettingDesc","setIsSettingDesc","onSetDesc","title","onClick","starred","description","value","onChange","e","target","onBlur","onKeyDown","keyCode","document","querySelector","focus","BoardListItem","item","text","BoardList","list","items","map","i","index","key","length","BoardMain","boardFuncs","lists","l","Board","setBoard","userContext","useContext","boardContext","getBoard","currentBoardId","useEffect","App","state","action","boards","b","payload","newDesc","BoardState","props","initialState","color","uuid","v4","labels","useReducer","boardReducer","dispatch","Provider","getBoardsNames","filter","children","AlertContext","test","AlertState","alertReducer","getData","UserState","userReducer","setCurrentBoardId","ReactDOM","render","getElementById"],"mappings":"oMA6BeA,EA3BA,WACb,OACE,yBAAKC,UAAU,iBACb,6BACE,yBAAKA,UAAU,yCACb,uBAAGA,UAAU,gBAEf,yBAAKA,UAAU,yCACb,uBAAGA,UAAU,6BADf,UAIA,yBAAKA,UAAU,oBACb,2BAAOC,KAAK,OAAOD,UAAU,qCAAqCE,GAAG,mBAGzE,yBAAKF,UAAU,QACb,yBAAKA,UAAU,iCAAf,iBAEF,6BACE,yBAAKA,UAAU,yCACb,uBAAGA,UAAU,mB,OClBRG,EAFKC,0BCELC,EAFMD,0BC6DNE,EA7DK,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,eAAqB,EAC1BC,mBAAS,IADiB,mBACnDC,EADmD,KACzCC,EADyC,OAEhBF,oBAAS,GAFO,mBAEnDG,EAFmD,KAEpCC,EAFoC,KAkBpDC,EAAY,WAChBN,EAAeE,EAAUJ,EAAML,IAC/BY,GAAiB,IASnB,OACE,yBAAKd,UAAU,gDACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,kCACXO,GAASA,EAAMS,OAEnB,yBAAKhB,UAAU,wDAAwDiB,QA/BzD,WAClBT,EAAQD,EAAML,MA+BR,uBAAGF,UAAS,kBAAaO,GAASA,EAAMW,QAAU,mBAAqB,UAEzE,yBAAKlB,UAAU,yBAEXO,IACIM,GACCN,EAAMY,YAEf,2BACElB,KAAK,OACLC,GAAG,oBACHF,UAAS,uBAAkBa,GAAiB,OAC5CO,MAAOT,EACPU,SAnCiB,SAACC,GACxBV,EAAYU,EAAEC,OAAOH,QAmCfI,OAAQT,EACRU,UA5BU,SAACH,GACA,KAAdA,EAAEI,SACHX,QA4BE,yBAAKf,UAAU,wDAAwDiB,QA7C1D,WACjBH,GAAiB,GACjBF,EAAYL,EAAMY,aAClBQ,SAASC,cAAc,sBAAsBC,UA2CvC,uBAAG7B,UAAU,mBC9CR8B,EARO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACE,yBAAK/B,UAAU,0BACX+B,EAAKC,OCmBEC,EArBG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,yBAAKlC,UAAU,qBACb,yBAAKA,UAAU,4BACXkC,EAAKlB,OAET,yBAAKhB,UAAU,2BACXkC,EAAKC,MAAMC,IAAI,SAACC,EAAGC,GAAJ,OACf,kBAAC,EAAD,CAAeC,IAAKF,EAAEnC,GAAI6B,KAAMM,OAGpC,yBAAKrC,UAAU,yBACb,yBAAKA,UAAU,qBAAf,KAGwB,IAAtBkC,EAAKC,MAAMK,OAAe,aAAe,sBCCpCC,EAhBG,SAAC,GAAgE,IAA9DlC,EAA6D,EAA7DA,MAA6D,EAAtDmC,WAC1B,OACE,yBAAK1C,UAAU,qBACXO,GACAA,EAAMoC,MAAMP,IAAI,SAAAQ,GAAC,OACf,kBAAC,EAAD,CAAWL,IAAKK,EAAE1C,GAAIgC,KAAMU,MAEhC,yBAAK5C,UAAU,qBACb,yBAAKA,UAAU,yBACXO,GAAgC,IAAvBA,EAAMoC,MAAMH,OAAe,eAAiB,yBCwBlDK,G,MAzBD,WAAO,IAAD,EACQnC,mBAAS,MADjB,mBACXH,EADW,KACJuC,EADI,KAGZC,EAAcC,qBAAW7C,GACzB8C,EAAeD,qBAAW3C,GAGxB6C,GADmBH,EAAnBI,eACsCF,EAAtCC,UAAU1C,EAA4ByC,EAA5BzC,QAASC,EAAmBwC,EAAnBxC,eAM3B,OAJA2C,oBAAU,WACRN,EAASI,EAAS,GAAG,KACpB,IAGD,kBAAC,WAAD,KACE,yBAAKlD,UAAU,uCACb,kBAAC,EAAD,CAAaO,MAAOA,EAAOC,QAASA,EAASC,eAAgBA,KAE/D,yBAAKT,UAAU,qDACb,kBAAC,EAAD,CAAW0C,WAAYO,EAAc1C,MAAOA,QCdrC8C,G,MATH,WACV,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MAEA,kBAAC,EAAD,S,0kBCPS,eAACC,EAAOC,GACrB,OAAQA,EAAOtD,MACb,ICLoB,WDMlB,OAAO,EAAP,GACKqD,EADL,CAEEE,OAAQF,EAAME,OAAOpB,IAAI,SAAAqB,GAIvB,OAHGA,EAAEvD,KAAOqD,EAAOG,UACjBD,EAAEvC,SAAWuC,EAAEvC,SAEVuC,MAGb,ICd2B,kBDezB,OAAO,EAAP,GACKH,EADL,CAEEE,OAAQF,EAAME,OAAOpB,IAAI,SAAAqB,GAIvB,OAHGA,EAAEvD,KAAOqD,EAAOG,QAAQxD,KACzBuD,EAAEtC,YAAcoC,EAAOG,QAAQC,SAE1BF,MAGb,QACE,OAAOH,IEoPEM,EAvQI,SAAAC,GACjB,IAAMC,EAAe,CACnBN,OAAQ,CACN,CACExC,MAAO,gBACPd,GAAI,EACJ6D,MAAO,UACP7C,SAAS,EACTC,YAAa,8BACbwB,MAAO,CACL,CACE3B,MAAO,QACPd,GAAI8D,IAAKC,KACT9B,MAAO,CACL,CACEH,KAAM,SACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,UACA,YAGJ,CACElC,KAAM,SACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,YAGJ,CACElC,KAAM,SACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,YAGJ,CACElC,KAAM,SACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,YAGJ,CACElC,KAAM,SACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,YAGJ,CACElC,KAAM,SACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,YAGJ,CACElC,KAAM,SACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,YAGJ,CACElC,KAAM,SACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,YAGJ,CACElC,KAAM,SACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,YAGJ,CACElC,KAAM,SACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,YAGJ,CACElC,KAAM,SACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,YAGJ,CACElC,KAAM,SACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,YAGJ,CACElC,KAAM,SACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,YAGJ,CACElC,KAAM,SACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,YAGJ,CACElC,KAAM,SACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,cAKR,CACElD,MAAO,QACPd,GAAI8D,IAAKC,KACT9B,MAAO,CACL,CACEH,KAAM,UACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,UACA,YAGJ,CACElC,KAAM,UACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,UACA,YAGJ,CACElC,KAAM,UACN9B,GAAI8D,IAAKC,KACTC,OAAQ,CACN,UACA,cAKR,CACElD,MAAO,WACPd,GAAI8D,IAAKC,KACT9B,MAAO,IAIT,CACEnB,MAAO,gBACPd,GAAI8D,IAAKC,KACT9B,MAAO,IAIT,CACEnB,MAAO,gBACPd,GAAI8D,IAAKC,KACT9B,MAAO,IAIT,CACEnB,MAAO,gBACPd,GAAI8D,IAAKC,KACT9B,MAAO,IAIT,CACEnB,MAAO,gBACPd,GAAI8D,IAAKC,KACT9B,MAAO,IAIT,CACEnB,MAAO,gBACPd,GAAI8D,IAAKC,KACT9B,MAAO,IAIT,CACEnB,MAAO,gBACPd,GAAI8D,IAAKC,KACT9B,MAAO,MAMb,CACEnB,MAAO,aACPd,GAAI,EACJ6D,MAAO,OACPpB,MAAO,MA/Ma,EAsNAwB,qBAAWC,EAAcN,GAtNzB,mBAsNnBR,EAtNmB,KAsNZe,EAtNY,KAwP1B,OACE,kBAAC,EAAaC,SAAd,CACElD,MAAO,CACLoC,OAAQF,EAAME,OACde,eAnCiB,WAGrB,OAFajB,EAAME,OAAOpB,IAAI,SAAAqB,GAAC,OAAIA,EAAEzC,SAmCjCkC,SA7BW,SAAChD,GAGhB,OAFcoD,EAAME,OAAOgB,OAAO,SAAAf,GAAC,OAAIA,EAAEvD,KAAOA,KA6B5CM,QAvBU,SAACN,GACfmE,EAAS,CACPpE,KDhPkB,WCiPlByD,QAASxD,KAqBPO,eAjBiB,SAACkD,EAASzD,GAC/BmE,EAAS,CACPpE,KDtPyB,kBCuPzByD,QAAS,CACPxD,KACAyD,gBAeDE,EAAMY,WCvQEC,EAFMtE,0B,4NCEN,eAACkD,EAAOC,GACrB,OAAQA,EAAOtD,MACb,IHFgB,OGGd,O,qVAAO,IACFqD,EADL,CAEEqB,KAAMpB,EAAOG,UAEjB,QACE,OAAOJ,ICsBEsB,EA3BI,SAAAf,GACjB,IAD0B,EAKAM,qBAAWU,EAJhB,CACnBF,KAAM,SAFkB,mBAKnBrB,EALmB,KAKZe,EALY,KAe1B,OACE,kBAAC,EAAaC,SAAd,CACElD,MAAO,CACLuD,KAAMrB,EAAMqB,KACZG,QAXU,WACdT,EAAS,CACPpE,KJbc,OIcdyD,QAAS,gBAWRG,EAAMY,W,mjBCxBE,eAACnB,EAAOC,GACrB,OAAQA,EAAOtD,MACb,ILHgB,OKId,OAAO,KACFqD,EADL,CAEEqB,KAAMpB,EAAOG,UAEjB,ILXgC,uBKY/B,OAAO,KACFJ,EADL,CAEEH,eAAgBI,EAAOG,UAE1B,QACE,OAAOJ,ICyBEyB,EAnCG,SAAAlB,GAChB,IADyB,EAKCM,qBAAWa,EAJhB,CACnB7B,eAAgB,OAFO,mBAKlBG,EALkB,KAKXe,EALW,KAuBzB,OACE,kBAAC,EAAYC,SAAb,CACElD,MAAO,CACL+B,eAAgBG,EAAMH,eACtB8B,kBAXoB,SAAC/E,GACzBmE,EAAS,CACPpE,KNzB8B,uBM0B9ByD,QAASxD,OAWR2D,EAAMY,WClBbS,IAASC,OAAO,kBAZO,WACrB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,UAOM,MAAoBxD,SAASyD,eAAe,U","file":"static/js/main.c4606acf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"trello-navbar\">\r\n      <div>\r\n        <div className=\"btn btn-square btn-primary rounded-lg\">\r\n          <i className=\"fa fa-home\"></i>\r\n        </div>\r\n        <div className=\"btn btn-narrow btn-primary rounded-lg\">\r\n          <i className=\"mr-1 fa fa-notes-medical\"></i>\r\n          boards\r\n        </div>\r\n        <div className=\"d-i-b rounded-lg\">\r\n          <input type=\"text\" className=\"m-0 bg-primary border-0 rounded-lg\" id=\"search-input\"/>\r\n        </div>\r\n      </div>\r\n      <div className=\"mr-5\">\r\n        <div className=\"text-white text-bold cursor-p\">trello clone</div>\r\n      </div>\r\n      <div>\r\n        <div className=\"btn btn-square btn-primary rounded-lg\">\r\n          <i className=\"fa fa-plus\"></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;","import { createContext } from 'react';\r\n\r\nconst BoardContext = createContext();\r\n\r\nexport default BoardContext;\r\n","import React, { useState } from 'react';\r\n\r\nconst BoardNavbar = ({ board, setStar, setDescription }) => {\r\n  const [descText, setDescText] = useState('');\r\n  const [isSettingDesc, setIsSettingDesc] = useState(false);\r\n  \r\n  const onStarClick = () => {\r\n    setStar(board.id);\r\n  }\r\n\r\n  const onDescClick =() => {\r\n    setIsSettingDesc(true);\r\n    setDescText(board.description);\r\n    document.querySelector('#description-input').focus();\r\n  }\r\n\r\n  const onDescTextChange = (e) => {\r\n    setDescText(e.target.value);\r\n  }\r\n\r\n  const onSetDesc = () => {\r\n    setDescription(descText, board.id);\r\n    setIsSettingDesc(false);\r\n  }\r\n\r\n  const onKeyDown = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetDesc();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-navbar trello-navbar lighten-20'>\r\n      <div className='card border-0 m-0 p-0'>\r\n        <div className='btn btn-primary btn-narrow m-0'>\r\n          { board && board.title }\r\n        </div>\r\n        <div className='btn btn-primary btn-square rounded-lg lighten-20 ml-1' onClick={onStarClick}>\r\n          <i className={`fa-star ${board && board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n        <div className='ml-1 d-i-b text-white'>\r\n          { \r\n            board\r\n            && !isSettingDesc\r\n              && board.description\r\n          }\r\n        <input\r\n          type='text'\r\n          id='description-input'\r\n          className={`m-0 rounded ${!isSettingDesc && 'd-n'}`}\r\n          value={descText}\r\n          onChange={onDescTextChange}\r\n          onBlur={onSetDesc}\r\n          onKeyDown={onKeyDown} />\r\n        </div>\r\n        <div className='btn btn-primary btn-square rounded-lg lighten-20 ml-1' onClick={onDescClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardNavbar\r\n","import React from 'react'\r\n\r\nconst BoardListItem = ({ item }) => {\r\n  return (\r\n    <div className=\"trello-board-list-item\">\r\n      { item.text }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardListItem\r\n","import React from 'react';\r\nimport BoardListItem from './BoardListItem';\r\n\r\nconst BoardList = ({ list }) => {\r\n  return (\r\n    <div className=\"trello-board-list\">\r\n      <div className=\"trello-board-list-header\">\r\n        { list.title }\r\n      </div>\r\n      <div className=\"trello-board-list-items\">\r\n        { list.items.map((i, index) => (\r\n          <BoardListItem key={i.id} item={i} />\r\n        )) }\r\n      </div>\r\n      <div className=\"trello-board-add-card\">\r\n        <div className=\"trello-board-plus\">\r\n          +       \r\n        </div>\r\n        { list.items.length === 0 ? 'Add a card' : 'Add another card' }      \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardList\r\n","import React, { Fragment } from 'react';\r\nimport BoardList from './BoardList';\r\n\r\nconst BoardMain = ({ board, boardFuncs /* contains all of board context  */ }) => {\r\n  return (\r\n    <div className=\"trello-board-main\">\r\n      { board &&\r\n        board.lists.map(l => (\r\n          <BoardList key={l.id} list={l} />\r\n        )) }\r\n      <div className=\"trello-board-list\">\r\n        <div className=\"trello-board-add-list\">\r\n          { board && board.lists.length === 0 ? '+ Add a list' : '+ Add another list' }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardMain\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport BoardNavbar from './BoardNavbar';\r\nimport BoardMain from './BoardMain';\r\n\r\n// context\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\n// css\r\nimport './board.css';\r\n\r\nconst Board = () => {\r\n  const [board, setBoard] = useState(null);\r\n\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { getBoard, setStar, setDescription } = boardContext;\r\n\r\n  useEffect(() => {\r\n    setBoard(getBoard(1)[0]);\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"trello-board-row trello-board-row-1\">\r\n        <BoardNavbar board={board} setStar={setStar} setDescription={setDescription} />\r\n      </div>\r\n      <div className=\"trello-board-main-wrapper bg-primary lighten-20 p\">\r\n        <BoardMain boardFuncs={boardContext} board={board} />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import React, { Fragment } from 'react';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Home from './components/pages/home/Home';\r\nimport Board from './components/pages/board/Board';\r\n\r\nimport './trello-clone.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      {/* <Home /> */}\r\n      <Board />\r\n    </Fragment>\r\n  );\r\n}\r\nexport default App","import { \r\n  SET_STAR,\r\n  SET_DESCRIPTION\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_STAR:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload) {\r\n            b.starred = !b.starred\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_DESCRIPTION:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.description = action.payload.newDesc\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const GET_BOARDS_NAMES = 'GET_BOARDS_NAMES';\r\nexport const SET_CURRENT_BOARD_ID = 'SET_CURRENT_BOARD_ID';\r\nexport const SET_STAR = 'SET_STAR';\r\nexport const SET_DESCRIPTION = 'SET_DESCRIPTION';\r\nexport const TEST = 'TEST';","import React, { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\nimport BoardContext from './boardContext';\r\nimport boardReducer from './boardReducer';\r\nimport { \r\n  SET_STAR,\r\n  SET_DESCRIPTION\r\n} from '../types';\r\n\r\nconst BoardState = props => {\r\n  const initialState = {\r\n    boards: [\r\n      {\r\n        title: 'my nice board',\r\n        id: 1,\r\n        color: '#e27b47',\r\n        starred: false,\r\n        description: 'board description goes here',\r\n        lists: [\r\n          {\r\n            title: 'todos',\r\n            id: uuid.v4(),\r\n            items: [\r\n              {\r\n                text: 'todo 1',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 1',\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n            ]\r\n          },\r\n          {\r\n            title: 'doing',\r\n            id: uuid.v4(),\r\n            items: [\r\n              {\r\n                text: 'doing 1',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 3',\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 3',\r\n                  'label 4'\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 3',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 4',\r\n                  'label 2'\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            title: 'new list',\r\n            id: uuid.v4(),\r\n            items: [\r\n\r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n\r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        title: 'test empty',\r\n        id: 2,\r\n        color: '#ccc',\r\n        lists: [\r\n\r\n        ]\r\n      }\r\n    ],\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(boardReducer, initialState);\r\n\r\n  // Get data\r\n  const getBoardsNames = () => {\r\n    const list = state.boards.map(b => b.title);\r\n    \r\n    return list\r\n  };\r\n\r\n  // send a single board to board page (returns an array with one object)\r\n  const getBoard = (id) => {\r\n    const board = state.boards.filter(b => b.id === id);\r\n\r\n    return board\r\n  }\r\n\r\n  // set board starred or unstarred\r\n  const setStar = (id) => {\r\n    dispatch({\r\n      type: SET_STAR,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  const setDescription = (newDesc, id) => {\r\n    dispatch({\r\n      type: SET_DESCRIPTION,\r\n      payload: {\r\n        id,\r\n        newDesc\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <BoardContext.Provider\r\n      value={{\r\n        boards: state.boards,\r\n        getBoardsNames,\r\n        getBoard,\r\n        setStar,\r\n        setDescription\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BoardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BoardState;","import { createContext } from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext;","import { \r\n  TEST\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case TEST:\r\n      return {\r\n        ...state,\r\n        test: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport alertReducer from './alertReducer';\r\nimport { \r\n  TEST\r\n } from '../types';\r\n\r\nconst AlertState = props => {\r\n  const initialState = {\r\n    test: 'test'\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n  // Get data\r\n  const getData = () => {\r\n    dispatch({\r\n      type: TEST,\r\n      payload: 'new test'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        test: state.test,\r\n        getData\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;","import { \r\n  SET_CURRENT_BOARD_ID,\r\n  TEST\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case TEST:\r\n      return {\r\n        ...state,\r\n        test: action.payload\r\n      }\r\n    case SET_CURRENT_BOARD_ID:\r\n     return {\r\n       ...state,\r\n       currentBoardId: action.payload\r\n     }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer } from 'react';\r\nimport UserContext from './userContext';\r\nimport userReducer from './userReducer';\r\nimport { \r\n  SET_CURRENT_BOARD_ID,\r\n  TEST\r\n} from '../types';\r\n\r\nconst UserState = props => {\r\n  const initialState = {\r\n    currentBoardId: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(userReducer, initialState);\r\n\r\n  // Get data\r\n  // eslint-disable-next-line\r\n  const getData = () => {\r\n    dispatch({\r\n      type: TEST,\r\n      payload: 'new test'\r\n    });\r\n  };\r\n\r\n  const setCurrentBoardId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_BOARD_ID,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        currentBoardId: state.currentBoardId,\r\n        setCurrentBoardId\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport BoardState from './context/board/BoardState';\nimport AlertState from './context/alert/AlertState';\nimport UserState from './context/user/UserState';\n\nconst StateContainer = () => {\n  return (\n    <BoardState>\n      <AlertState>\n        <UserState>\n          <App />\n        </UserState>\n      </AlertState>\n    </BoardState>\n  );\n}\n\nReactDOM.render(<StateContainer />, document.getElementById('root'));"],"sourceRoot":""}