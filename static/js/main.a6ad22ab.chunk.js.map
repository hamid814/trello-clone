{"version":3,"sources":["components/layout/Navbar.js","context/user/userContext.js","context/board/boardContext.js","components/pages/board/BoardNavbar.js","components/pages/board/BoardListItem.js","components/pages/board/BoardList.js","components/pages/board/BoardMain.js","components/pages/board/Board.js","App.js","context/board/boardReducer.js","context/types.js","context/board/BoardState.js","context/alert/alertContext.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/user/userReducer.js","context/user/UserState.js","index.js"],"names":["Navbar","className","type","id","UserContext","createContext","BoardContext","BoardNavbar","board","setStar","onStarClick","title","onClick","starred","description","BoardListItem","item","text","BoardList","list","items","map","i","key","BoardMain","boardFuncs","lists","l","Board","useState","setBoard","userContext","useContext","boardContext","getBoard","currentBoardId","useEffect","App","state","action","boards","b","payload","BoardState","props","initialState","color","uuid","v4","labels","useReducer","boardReducer","dispatch","Provider","value","getBoardsNames","filter","children","AlertContext","test","AlertState","alertReducer","getData","UserState","userReducer","setCurrentBoardId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6ad22ab.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"trello-navbar\">\r\n      <div>\r\n        <div className=\"btn btn-square btn-primary rounded-lg\">\r\n          <i className=\"fa fa-home\"></i>\r\n        </div>\r\n        <div className=\"btn btn-narrow btn-primary rounded-lg\">\r\n          <i className=\"mr-1 fa fa-notes-medical\"></i>\r\n          boards\r\n        </div>\r\n        <div className=\"d-i-b rounded-lg\">\r\n          <input type=\"text\" className=\"m-0 bg-primary border-0 rounded-lg\" id=\"search-input\"/>\r\n        </div>\r\n      </div>\r\n      <div className=\"mr-5\">\r\n        <div className=\"text-white text-bold cursor-p\">trello clone</div>\r\n      </div>\r\n      <div>\r\n        <div className=\"btn btn-square btn-primary rounded-lg\">\r\n          <i className=\"fa fa-plus\"></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;","import { createContext } from 'react';\r\n\r\nconst BoardContext = createContext();\r\n\r\nexport default BoardContext;\r\n","import React from 'react';\r\n\r\nconst BoardNavbar = ({ board, setStar }) => {\r\n  const onStarClick = () => {\r\n    setStar(board.id);\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-navbar trello-navbar lighten-20'>\r\n      <div className='card border-0 m-0 p-0'>\r\n        <div className='btn btn-primary btn-narrow m-0'>\r\n          { board && board.title }\r\n        </div>\r\n        <div className='btn btn-primary btn-square rounded-lg lighten-20 ml-1' onClick={onStarClick}>\r\n          <i className={`fa-star ${board && board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n        <div className=\"ml-1 d-i-b text-white\">\r\n          { board && board.description }\r\n        </div>\r\n        <div className='btn btn-primary btn-square rounded-lg lighten-20 ml-1' onClick={onStarClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardNavbar\r\n","import React from 'react'\r\n\r\nconst BoardListItem = ({ item }) => {\r\n  return (\r\n    <div className=\"trello-board-list-item\">\r\n      { item.text }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardListItem\r\n","import React from 'react';\r\nimport BoardListItem from './BoardListItem';\r\n\r\nconst BoardList = ({ list }) => {\r\n  return (\r\n    <div className=\"trello-board-list\">\r\n      <div className=\"trello-board-list-header\">\r\n        { list.title }\r\n      </div>\r\n      <div className=\"trello-board-list-items\">\r\n        { list.items.map(i => (\r\n          <BoardListItem key={i.id} item={i} />\r\n        )) }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardList\r\n","import React, { Fragment } from 'react';\r\nimport BoardList from './BoardList';\r\n\r\nconst BoardMain = ({ board, boardFuncs /* contains all of board context  */ }) => {\r\n  return (\r\n    <Fragment>\r\n      { board &&\r\n        board.lists.map(l => (\r\n          <BoardList key={l.id} list={l} />\r\n        )) }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default BoardMain\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport BoardNavbar from './BoardNavbar';\r\nimport BoardMain from './BoardMain';\r\n\r\n// context\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\n// css\r\nimport './board.css';\r\n\r\nconst Board = () => {\r\n  const [board, setBoard] = useState(null);\r\n\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { getBoard, setStar } = boardContext;\r\n\r\n  useEffect(() => {\r\n    setBoard(getBoard(1)[0]);\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"trello-board-row trello-board-row-1\">\r\n        <BoardNavbar board={board} setStar={setStar} />\r\n      </div>\r\n      <div className=\"trello-board-main bg-primary lighten-20 p\">\r\n        <BoardMain boardFuncs={boardContext} board={board} />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import React, { Fragment } from 'react';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Home from './components/pages/home/Home';\r\nimport Board from './components/pages/board/Board';\r\n\r\nimport './trello-clone.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      {/* <Home /> */}\r\n      <Board />\r\n    </Fragment>\r\n  );\r\n}\r\nexport default App","import { \r\n  SET_STAR\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_STAR:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload) {\r\n            b.starred = !b.starred\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const GET_BOARDS_NAMES = 'GET_BOARDS_NAMES';\r\nexport const SET_CURRENT_BOARD_ID = 'SET_CURRENT_BOARD_ID';\r\nexport const SET_STAR = 'SET_STAR';\r\nexport const TEST = 'TEST';","import React, { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\nimport BoardContext from './boardContext';\r\nimport boardReducer from './boardReducer';\r\nimport { \r\n  SET_STAR\r\n} from '../types';\r\n\r\nconst BoardState = props => {\r\n  const initialState = {\r\n    boards: [\r\n      {\r\n        title: 'my nice board',\r\n        id: 1,\r\n        color: '#e27b47',\r\n        starred: false,\r\n        description: 'board description goes here',\r\n        lists: [\r\n          {\r\n            title: 'todos',\r\n            id: uuid.v4(),\r\n            items: [\r\n              {\r\n                text: 'todo 1',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 1',\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n            ]\r\n          },\r\n          {\r\n            title: 'doing',\r\n            id: uuid.v4(),\r\n            items: [\r\n              {\r\n                text: 'doing 1',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 3',\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 3',\r\n                  'label 4'\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 3',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 4',\r\n                  'label 2'\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            title: 'new list',\r\n            id: uuid.v4(),\r\n            items: [\r\n              {\r\n                text: 'new 1',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 4',\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'new 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 4',\r\n                  'label 2'\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \r\n  };\r\n\r\n  const [state, dispatch] = useReducer(boardReducer, initialState);\r\n\r\n  // Get data\r\n  const getBoardsNames = () => {\r\n    const list = state.boards.map(b => b.title);\r\n    \r\n    return list\r\n  };\r\n\r\n  // send a single board to board page (returns an array with one object)\r\n  const getBoard = (id) => {\r\n    const board = state.boards.filter(b => b.id === id);\r\n\r\n    return board\r\n  }\r\n\r\n  // set board starred or unstarred\r\n  const setStar = (id) => {\r\n    dispatch({\r\n      type: SET_STAR,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <BoardContext.Provider\r\n      value={{\r\n        boards: state.boards,\r\n        getBoardsNames,\r\n        getBoard,\r\n        setStar\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BoardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BoardState;","import { createContext } from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext;","import { \r\n  TEST\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case TEST:\r\n      return {\r\n        ...state,\r\n        test: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport alertReducer from './alertReducer';\r\nimport { \r\n  TEST\r\n } from '../types';\r\n\r\nconst AlertState = props => {\r\n  const initialState = {\r\n    test: 'test'\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n  // Get data\r\n  const getData = () => {\r\n    dispatch({\r\n      type: TEST,\r\n      payload: 'new test'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        test: state.test,\r\n        getData\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;","import { \r\n  SET_CURRENT_BOARD_ID,\r\n  TEST\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case TEST:\r\n      return {\r\n        ...state,\r\n        test: action.payload\r\n      }\r\n    case SET_CURRENT_BOARD_ID:\r\n     return {\r\n       ...state,\r\n       currentBoardId: action.payload\r\n     }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer } from 'react';\r\nimport UserContext from './userContext';\r\nimport userReducer from './userReducer';\r\nimport { \r\n  SET_CURRENT_BOARD_ID,\r\n  TEST\r\n} from '../types';\r\n\r\nconst UserState = props => {\r\n  const initialState = {\r\n    currentBoardId: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(userReducer, initialState);\r\n\r\n  // Get data\r\n  // eslint-disable-next-line\r\n  const getData = () => {\r\n    dispatch({\r\n      type: TEST,\r\n      payload: 'new test'\r\n    });\r\n  };\r\n\r\n  const setCurrentBoardId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_BOARD_ID,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        currentBoardId: state.currentBoardId,\r\n        setCurrentBoardId\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport BoardState from './context/board/BoardState';\nimport AlertState from './context/alert/AlertState';\nimport UserState from './context/user/UserState';\n\nconst StateContainer = () => {\n  return (\n    <BoardState>\n      <AlertState>\n        <UserState>\n          <App />\n        </UserState>\n      </AlertState>\n    </BoardState>\n  );\n}\n\nReactDOM.render(<StateContainer />, document.getElementById('root'));"],"sourceRoot":""}