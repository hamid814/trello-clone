{"version":3,"sources":["context/board/boardContext.js","components/pages/board/CardLabel.js","components/pages/board/ListItemLabels.js","context/user/userContext.js","components/pages/board/BoardListItem.js","components/layout/SearchResultItem.js","components/layout/SearchResults.js","components/layout/SearchCards.js","components/layout/Navbar.js","components/layout/ListOfBoardsItem.js","components/layout/RecentInList.js","components/layout/StarredInList.js","components/layout/Boards.js","components/layout/ListOfBoards.js","components/pages/home/SideListItem.js","components/pages/home/HomeSideList.js","context/alert/alertContext.js","components/pages/home/HomeMainItem.js","components/pages/home/Recent.js","components/pages/home/Starred.js","components/pages/home/HomeMain.js","components/pages/home/Home.js","components/pages/board/BoardTitle.js","components/pages/board/BoardNavbar.js","components/pages/board/ListTitle.js","components/pages/board/BoardList.js","components/pages/board/AddList.js","components/pages/board/BoardAbout.js","components/pages/board/BoardColor.js","components/pages/board/BoardMenu.js","components/pages/board/BoardMain.js","components/pages/board/Board.js","components/modal/AddBoardModal.js","components/modal/details/LabelItem.js","components/modal/details/Labels.js","components/modal/details/Description.js","components/modal/details/CheckListItem.js","components/modal/details/Checklist.js","components/modal/details/Checklists.js","components/modal/details/DetailsRightPanel.js","components/modal/DetailsModal.js","components/modal/FastEditModal.js","components/modal/Modal.js","components/modal/options/DeleteAllBoards.js","components/modal/options/ConfirmDeleteAllBoards.js","components/modal/options/DeleteBoard.js","components/modal/options/ClearBoard.js","components/modal/options/SetBoardWatching.js","components/modal/options/DeleteCard.js","components/modal/options/MoveCard.js","components/modal/options/CopyCard.js","components/modal/options/AddChecklist.js","components/modal/options/DeleteChecklist.js","components/modal/options/ChecklistItemActions.js","components/modal/options/EditCardLabelItem.js","components/modal/options/EditCardLabels.js","components/modal/options/EditLabel.js","components/modal/options/ListActions.js","components/modal/options/DeleteList.js","components/modal/options/CopyList.js","components/modal/options/MoveList.js","components/modal/options/DeleteAllCards.js","components/modal/options/MoveAllCards.js","components/modal/OptionsModal.js","components/alert/AlertItem.js","components/alert/Alerts.js","App.js","context/board/boardReducer.js","context/types.js","context/board/BoardState.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/user/userReducer.js","context/user/UserState.js","index.js"],"names":["BoardContext","createContext","CardLabel","label","onClick","onMouseEnter","onMouseLeave","bigLabels","thisLabel","useContext","labels","filter","l","id","className","colorName","name","ListItemLabels","toggleBigLabels","father","useState","hover","setHover","makeLabelsGrid","display","gridGap","gridTemplateColumns","length","style","map","key","UserContext","BoardListItem","item","isFromSearch","listItem","useRef","currentBoardId","setCurrentCard","setModal","setFastEditModalPos","setData","data","getList","moveCard","getNumberOfChecklistItems","num","checklists","forEach","c","items","i","getNumberOfDoneChecklistItems","done","draggable","ref","onDragStart","e","thisE","target","setTimeout","classList","add","onDragOver","preventDefault","onDragEnd","remove","destCardIndex","destListId","findIndex","destItemId","listId","onDrop","elem","contains","parentElement","firstElementChild","innerText","correctDrop","text","desc","watching","top","current","getBoundingClientRect","left","width","SearchResultItem","card","boardContext","getBoard","console","log","boardId","title","SearchResults","resultInCardText","setResultInCardText","resultInCardDesc","setResultInCardDesc","boards","useEffect","list1","list2","b","lists","indexOf","push","SearchCards","userContext","input","setText","searching","setSearching","thisStyle","thisStyle1","height","type","placeholder","onChange","value","onBlur","Navbar","clearCurrentBoardId","toggleShowBoardsList","keepBoardsList","navbarStyle","background","color","titleTextStyle","ListOfBoardsItem","board","searchText","isRecent","isFromBoards","setCurrentBoardId","deleteFromRecent","setStar","starred","RecentInList","collapse","setCollapse","recentIds","uniqid","StarredInList","listOfStarred","Boards","ListOfBoards","topDistance","setTopDistance","showBoardsList","toggleKeepBoardsList","setOptionsModal","document","querySelector","window","innerHeight","thisStyle2","minHeight","SideListItem","isHover","setIsHover","hoverStyle","opacity","charAt","toUpperCase","slice","HomeSideList","AlertContext","HomeMainItem","alertContext","setAlert","itemStyle","Recent","r","Starred","list","setList","HomeMain","Home","BoardTitle","setTitle","isSettingTitle","setIsSettingTitle","textHasChanged","setTextHasChanged","focus","onSetTitle","onKeyUp","keyCode","BoardNavbar","setShowMenu","describtion","ListTitle","setListTitle","currentListId","onSetListTitle","BoardList","boardFuncs","setCurrentListId","addCardFromListActions","wantToAddCard","setWantToAddCard","newCardText","setNewCardText","addCard","cancelAddCard","onMouseDown","index","AddList","setScrollIflonger","addList","isAdding","setIsAdding","onAddList","cancelAddList","BoardAbout","setDescribtion","changed","setChanged","BoardColor","boardColors","setColor","BoardMenu","step","setStep","stepType","setStepType","setBoardWatching","BoardMain","showMenu","setStyle","innerWidth","gridTemplateRows","Board","boardStyle","AddBoardModal","addBoard","bg","setBg","onClose","onAdd","bgColor","backgroundColor","Labelitem","Labels","LabelItem","Description","currentCard","updateCard","isEditing","setIsEditing","onSave","newCard","CheckListItem","clId","hideDone","ifDone","textDecoration","defaultChecked","checklistId","Checklist","checklist","onAddItem","newItem","getNumberOfDones","progress","Math","floor","Checklists","DetailsRightPanel","DetailsModal","FastEditModal","theTextarea","fastEditModalPos","clearCurrentCard","modalPos","position","rightWidth","onUpdate","Modal","modalStatus","modalType","showModal","setShowModal","closeModal","modalDisplay","DeleteAllboards","ConfirmDeleteAllBoards","clearRecent","deleteAllBoards","DeleteBoard","deleteBoard","ClearBoard","clearBoard","SetBoardWatching","DeleteCard","deleteCard","MoveCard","boardsSelect","listSelect","posSelect","destBoardId","setDestBoardId","setDestListId","destPos","setDestPos","Number","CopyCard","keepChecklists","setKeepChecklists","keepLabels","setKeepLabels","checked","AddChecklist","newChecklist","DeleteChecklist","newListOfChecklists","ChecklistItemActions","onDelete","EditCardLabelItem","setLabelId","goToEditLabel","EditCardLabels","setOptionsModalStep","setLabel","EditLabel","setColorName","optionsModalStepData","colors","addLabel","updateLabel","deleteLabel","onColorClick","is","newId","ListActions","setAddCardFromListActions","setWatching","sortList","DeleteList","deleteList","CopyList","setName","copyList","MoveList","PosSelect","desPos","moveList","DeleteAllCards","deleteAllCards","MoveAllCards","moveAllCards","OptionsModal","container","optionsModalStatus","optionsModalType","optionsModalStepStatus","optionsModalStepType","mousePos","pos","setPos","setOptionsPos","rect","x","y","right","bottom","DeleteAllBoards","AlertItem","alert","deleteAlert","msg","Alerts","alerts","a","App","setMousePos","getUserdata","getBoardsData","stiringed","JSON","stringify","localStorage","setItem","clientX","clientY","state","action","payload","newList","splice","newItems","firstBoardId","firstIndex","destIndex","firstListId","concat","newTitle","cardId","BoardState","props","useReducer","boardReducer","dispatch","ListId","Provider","parse","getItem","theList","sort","isCopy","cardWithNewId","newLabel","children","AlertState","alertReducer","time","newAlert","UserState","userReducer","ModalStatus","optionsModaltype","mosuePos","setRecentBaord","newRecentIds","shift","setModalType","clearModalType","setOptionsModalType","clearOptionsModalType","status","clearOptionsModalStepType","setOptionsModalStepType","setOptionsModalStepData","clearOptionsModalStepData","command","clearCurrentListId","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.71094ea6.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst BoardContext = createContext();\r\n\r\nexport default BoardContext;\r\n","import React, { useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst CardLabel = ({ label, onClick, onMouseEnter, onMouseLeave, bigLabels }) => {\r\n  const { labels } = useContext(BoardContext);\r\n\r\n  const thisLabel = labels.filter(l => l.id === label)[0];\r\n\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      className={`func-card-label d-i-b label label-color-${thisLabel.colorName} ${bigLabels ? 'label-lg' : 'label-sm'}`}>\r\n      <div className='func-label-text label-text m-0'>{ bigLabels && thisLabel.name }</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardLabel\r\n","import React, { useState } from 'react';\r\nimport CardLabel from './CardLabel';\r\n\r\nconst ListItemLabels = ({ labels, toggleBigLabels, bigLabels, father }) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const onClick = () => {\r\n    father === 'boardListItem' && toggleBigLabels();\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    father === 'boardListItem' && setHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setHover(false);\r\n  }\r\n\r\n  const makeLabelsGrid = {\r\n    display: 'grid',\r\n    gridGap: `.2rem`,\r\n    gridTemplateColumns: `repeat(${labels.length}, 1fr)`\r\n  }\r\n\r\n  return (\r\n    <div style={makeLabelsGrid} className={`trello-board-list-item-labels-container m-0 p-0 ${hover && 'darken-30'}`}>\r\n      {\r\n        labels.map(l => <CardLabel key={l} label={l} onClick={onClick} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave} bigLabels={bigLabels} />)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListItemLabels\r\n","import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;","import React, { useRef, useContext } from 'react';\r\nimport ListItemLabels from './ListItemLabels';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst BoardListItem = ({ item, isFromSearch }) => {\r\n  const listItem = useRef(null);\r\n\r\n  const { currentBoardId, setCurrentCard, setModal, setFastEditModalPos, toggleBigLabels, bigLabels, setData, data } = useContext(UserContext);\r\n  const { getList, moveCard } = useContext(BoardContext);\r\n\r\n  const onClick = (e) => {\r\n    if(!isFromSearch) {\r\n      if(!e.target.classList.contains('func-e-btn') && !e.target.parentElement.classList.contains('func-e-btn') && !e.target.classList.contains('func-card-label') && !e.target.classList.contains('func-label-text')) {\r\n        setModal('on', 'detailsModal');\r\n      }\r\n      setCurrentCard(item);\r\n    }\r\n  }\r\n\r\n  const onDragStart = (e) => {\r\n    if(!isFromSearch) {\r\n      const thisE = e.target;\r\n      setTimeout(() => {\r\n        thisE.classList.add('dragging')\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  const onDragOver = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  const onDragEnd = (e) => {\r\n    if(!isFromSearch) {\r\n      e.target.classList.remove('dragging')\r\n\r\n      if(data) {\r\n        const destCardIndex = getList(currentBoardId, data.destListId).items.findIndex(i => i.id === data.destItemId)\r\n\r\n        moveCard(currentBoardId, item.listId, item.id, currentBoardId, data.destListId, destCardIndex, item);\r\n\r\n        setData(null)\r\n      }\r\n    }\r\n  }\r\n\r\n  const onDrop = e=> {\r\n    if(!isFromSearch) {\r\n      let elem;\r\n      if(e.target.classList.contains('func-item')) {\r\n        elem = e.target\r\n      }\r\n      if(e.target.parentElement.classList.contains('func-item')) {\r\n        elem = e.target.parentElement\r\n      }\r\n      if(e.target.parentElement.parentElement.classList.contains('func-item')) {\r\n        elem = e.target.parentElement.parentElement\r\n      }\r\n      if(e.target.parentElement.parentElement.parentElement.classList.contains('func-item')) {\r\n        elem = e.target.parentElement.parentElement.parentElement\r\n      }\r\n\r\n      const destListId = elem.firstElementChild.innerText;\r\n\r\n      setData({\r\n        destItemId: item.id,\r\n        destListId,\r\n        correctDrop: true\r\n      });\r\n    }\r\n  }\r\n\r\n  const onEBtnClick = (e) => {\r\n    setFastEditModalPos({\r\n        top: listItem.current.getBoundingClientRect().top,\r\n        left: listItem.current.getBoundingClientRect().left,\r\n        width: listItem.current.getBoundingClientRect().width\r\n      });\r\n    setModal('on', 'fastEditModal');\r\n  }\r\n\r\n  const onToggleBigLabels = () => {\r\n    if(!isFromSearch) {\r\n      toggleBigLabels();\r\n    }\r\n  }\r\n\r\n  const getNumberOfChecklistItems = () => {\r\n    let num = 0;\r\n    item.checklists.forEach(c => {\r\n      c.items.forEach(i => {\r\n        num++\r\n      })\r\n    })\r\n\r\n    return num\r\n  }\r\n\r\n  const getNumberOfDoneChecklistItems = () => {\r\n    let num = 0;\r\n    item.checklists.forEach(c => {\r\n      c.items.forEach(i => {\r\n        i.done && num++\r\n      })\r\n    })\r\n\r\n    return num\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='func-item trello-board-list-item'\r\n      draggable={`${!isFromSearch && 'true'}`}\r\n      ref={listItem}\r\n      onDragStart={onDragStart}\r\n      onDragOver={onDragOver}\r\n      onDragEnd={onDragEnd}\r\n      onDrop={onDrop}\r\n      onClick={onClick}>\r\n        {/* this element  has to be the exact first child of func-item */}\r\n        <div className='d-n'>{item.listId}</div>\r\n        <div className='drag-cover'></div>\r\n        <ListItemLabels father='boardListItem' labels={item.labels} bigLabels={bigLabels} toggleBigLabels={onToggleBigLabels} />\r\n        <div>\r\n          { item.text }\r\n        </div>\r\n        <div className='text-sm mt'>\r\n          {\r\n            !isFromSearch\r\n              && item.desc !== '' &&\r\n                <i className='fas fa-align-left mr'></i>\r\n          }\r\n          {\r\n            !isFromSearch\r\n              && item.watching &&\r\n                <i className='fas fa-eye mr'></i>\r\n          }\r\n          {\r\n            !isFromSearch &&\r\n            item.checklists.length > 0 &&\r\n              getNumberOfChecklistItems() !== 0 &&\r\n                <div className={`checklist-btn ${getNumberOfDoneChecklistItems() === getNumberOfChecklistItems() && getNumberOfChecklistItems() !== 0 ? 'btn-success' : 'btn-dark'}`}>\r\n                  <i className='fas fa-check-square'></i>\r\n                  {\r\n                    getNumberOfDoneChecklistItems()\r\n                  }\r\n                  /\r\n                  {\r\n                    getNumberOfChecklistItems()\r\n                  }\r\n                </div>\r\n          }\r\n        </div>\r\n        <div className={`func-e-btn trello-board-list-item-edit-btn ${isFromSearch && 'd-n'}`} onClick={onEBtnClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardListItem\r\n","import React, { useContext } from 'react';\r\nimport BoardListItem from '../pages/board/BoardListItem';\r\n\r\nimport boardContext from '../../context/board/boardContext';\r\n\r\nconst SearchResultItem = ({ card }) => {\r\n  const { getBoard, getList } = useContext(boardContext)\r\n\r\n  const onClick = () => {\r\n    console.log(card)\r\n  }\r\n  \r\n  return (\r\n    <div className='grid-2 gap-half' onClick={onClick}>\r\n      <BoardListItem item={card} isFromSearch={true} />\r\n      <div className='grid-2-row gap-half gap-none p'>\r\n        <div className='cursor-d text-85'>\r\n          in the board\r\n          <div className='cursor-p text-underline d-i-b ml'>\r\n            {getBoard(card.boardId).title}\r\n          </div>\r\n        </div>\r\n        <div className='cursor-d text-85'>\r\n          in the list\r\n          <div className='cursor-p text-underline d-i-b ml'>\r\n            {getList(card.boardId, card.listId).title}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchResultItem\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport SearchResultItem from './SearchResultItem';\r\n\r\nimport boardContext from '../../context/board/boardContext';\r\n\r\nconst SearchResults = ({ text }) => {\r\n  const [resultInCardText, setResultInCardText] = useState([])\r\n  const [resultInCardDesc, setResultInCardDesc] = useState([])\r\n\r\n  const { boards } = useContext(boardContext);\r\n\r\n  useEffect(() => {\r\n    let list1 = [];\r\n    let list2 = [];\r\n\r\n    boards.forEach(b => {\r\n      b.lists.forEach(l => {\r\n        l.items.forEach(card => {\r\n          if(card.text.indexOf(text) !== -1) {\r\n            list1.push(card)\r\n          }\r\n          if(card.desc.indexOf(text) !== -1) {\r\n            list2.push(card)\r\n          }\r\n        })\r\n      })\r\n    })\r\n\r\n    text !== ''\r\n      ? setResultInCardText(list1)\r\n      : setResultInCardText([])\r\n    text !== ''\r\n      ? setResultInCardDesc(list2)\r\n      : setResultInCardDesc([])\r\n\r\n    // eslint-disable-next-line\r\n  }, [text]);\r\n\r\n  return (\r\n    <div className='search-result'>\r\n      {\r\n        text === '' && 'what do you want to search for?'\r\n      }\r\n      {\r\n        resultInCardText.length !== 0\r\n          &&  <div className='text-85 mb'>\r\n                result in card texts\r\n              </div>\r\n      }\r\n      {\r\n        resultInCardText.map(card => (\r\n          <SearchResultItem key={card.id} card={card} />\r\n        ))\r\n      }\r\n      {\r\n        resultInCardDesc.length !== 0\r\n          &&  <div className={`text-85 mb ${resultInCardText.length !== 0 && 'mt-1'}`}>\r\n                result in card descriptions\r\n              </div>\r\n      }\r\n      {\r\n        resultInCardDesc.map(card => (\r\n          <SearchResultItem key={card.id} card={card} />\r\n        ))\r\n      }\r\n      {\r\n        text !== ''\r\n          && resultInCardText.length === 0\r\n            && resultInCardDesc.length === 0\r\n              && 'your search had no result'\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchResults\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport SearchResults from './SearchResults';\r\n\r\nimport userContext from '../../context/user/userContext'\r\n\r\nconst SearchCards = () => {\r\n  const { currentBoardId } = useContext(userContext);\r\n\r\n  const input = useRef(null)\r\n\r\n  const [text, setText] = useState('');\r\n  const [searching, setSearching] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setSearching(false);\r\n  }, [currentBoardId]);\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onClick = () => {\r\n    setSearching(true);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    // setSearching(false);\r\n    // setText('');\r\n  }\r\n\r\n  const thisStyle = {\r\n    width: searching ? '155%' : '100%'\r\n  }\r\n\r\n  const thisStyle1 = {\r\n    top: input.current && input.current.getBoundingClientRect().height + 5\r\n  }\r\n\r\n  return (\r\n    <div id='search-cards' className='pos-rel search-box-wrapper'>\r\n      <input\r\n        type='text'\r\n        placeholder='seach cards'\r\n        ref={input}\r\n        className={`m-0 border-0 rounded ${searching ? 'op-9' : 'op-7'}`}\r\n        onChange={onChange}\r\n        onClick={onClick}\r\n        onBlur={onBlur}\r\n        style={thisStyle}\r\n        value={text}/>\r\n      <div style={thisStyle1} className={`search-result-panel rounded-lg ${!searching && 'd-n'}`}>\r\n        <SearchResults text={text} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchCards","import React, { useContext } from 'react';\r\nimport SearchCards from './SearchCards';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst Navbar = () => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { clearCurrentBoardId, currentBoardId, setModal, toggleShowBoardsList, keepBoardsList } = userContext;\r\n  const { getBoard } = boardContext;\r\n\r\n  const homeClicked =() => {\r\n    clearCurrentBoardId();\r\n  }\r\n\r\n  const addClicked = () => {\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  const onBoardsClicked = () => {\r\n    toggleShowBoardsList();\r\n  }\r\n\r\n  const navbarStyle = {\r\n    background: getBoard(currentBoardId) && getBoard(currentBoardId).color\r\n  }\r\n\r\n  const titleTextStyle = {\r\n    color: getBoard(currentBoardId) ? getBoard(currentBoardId).color : '#388d6a'\r\n  }\r\n\r\n  return (\r\n    <div className='trello-navbar' id='main-navbar' style={navbarStyle}>\r\n      <div>\r\n        <div className='btn btn-square btn-transparent rounded' onClick={homeClicked}>\r\n          <i className='fa fa-home'></i>\r\n        </div>\r\n        <div className={`btn btn-narrow btn-transparent rounded ${keepBoardsList && 'd-n'}`} onClick={onBoardsClicked}>\r\n          <i className='mr-1 fa fa-notes-medical'></i>\r\n          boards\r\n        </div>\r\n        <div className='d-i-b'>\r\n          <SearchCards />\r\n        </div>\r\n      </div>\r\n      <div className='mr-5'>\r\n        <div className='text-white text-bold cursor-p border border-white border-bottom-0'>\r\n          <div className='mr'>\r\n            trello\r\n          </div>\r\n          <div \r\n            className='bg-white d-i-b border-0 pl'\r\n            style={titleTextStyle}>\r\n            clone\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className='btn btn-square btn-transparent rounded' onClick={addClicked}>\r\n          <i className='fa fa-plus'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useContext } from 'react';\r\n\r\nimport boardContext from '../../context/board/boardContext';\r\nimport userContext from '../../context/user/userContext';\r\n\r\nconst ListOfBoardsItem = ({ board, searchText, isRecent, isFromBoards }) => {\r\n  const { setCurrentBoardId, keepBoardsList, toggleShowBoardsList, deleteFromRecent } = useContext(userContext)\r\n  const { setStar } = useContext(boardContext)\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('func-icon') && !e.target.classList.contains('func-star') && !e.target.classList.contains('func-recent-x')) {\r\n      setCurrentBoardId(board.id);\r\n      !keepBoardsList && toggleShowBoardsList()\r\n    }\r\n  }\r\n\r\n  const onStarCLick = () => {\r\n    setStar(board.id);\r\n  }\r\n\r\n  const onDeleteFromRecentClick = () => {\r\n    deleteFromRecent(board.id);\r\n  }\r\n\r\n  const thisStyle = {\r\n    background: board.color\r\n  }\r\n\r\n  return (\r\n    <div style={thisStyle} className={`item hover ${(board.title.indexOf(searchText) === -1 && isFromBoards) && 'd-n'}`} onClick={onClick}>\r\n      <div className='left'>\r\n      \r\n      </div>\r\n      <div className='right lighten-70 height-100'>\r\n        { board.title }\r\n      </div>\r\n      <div className={`func-star star text-sm ${board.starred && 'stay text-warning darken-40'}`} onClick={onStarCLick}>\r\n        <i className='func-icon fas fa-star'>\r\n        \r\n        </i>\r\n      </div>\r\n      {\r\n        isRecent && <div className={`func-recent-x close`} onClick={onDeleteFromRecentClick}>\r\n                      &times;\r\n                    </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListOfBoardsItem\r\n","import React, { useState, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport ListOfBoardsItem from './ListOfBoardsItem';\r\n\r\nimport userContext from '../../context/user/userContext';\r\nimport boardContext from '../../context/board/boardContext';\r\n\r\nconst RecentInList = ({ searchText }) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n\r\n  const { recentIds } = useContext(userContext);\r\n  const { getBoard } = useContext(boardContext);\r\n\r\n  const onCollapse = () => {\r\n    setCollapse(!collapse);\r\n  }\r\n\r\n  return (\r\n    <div className={`mt-1 mb ${recentIds.length === 0 && 'd-n'} ${searchText !== '' && 'd-n'}`}>\r\n      <div className='mb-1'>\r\n        <i className='fas fa-clock mr'></i>\r\n        recent boards\r\n        <div className='btn float-right btn-narrow text-sm' onClick={onCollapse}>\r\n          <i className={`fas ${collapse ? 'fa-plus' : 'fa-minus'}`}></i>\r\n        </div>\r\n      </div>\r\n      { !collapse\r\n         && recentIds.length !== 0\r\n          && recentIds.map(i => (\r\n              !getBoard(i).starred && <ListOfBoardsItem key={uniqid()} board={getBoard(i)} isRecent={true} />\r\n            ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RecentInList\r\n","import React, { useState, useContext } from 'react';\r\nimport ListOfBoardsItem from './ListOfBoardsItem';\r\n\r\nimport boardContext from '../../context/board/boardContext';\r\n\r\nconst StarredInList = ({ searchText }) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n\r\n  const { boards } = useContext(boardContext);\r\n\r\n  const onCollapse = () => {\r\n    setCollapse(!collapse);\r\n  }\r\n\r\n  const listOfStarred = [];\r\n\r\n  boards.forEach(b => b.starred && listOfStarred.push(b.id))\r\n\r\n  return (\r\n    <div className={`mt-1 mb ${listOfStarred.length === 0 && 'd-n'} ${searchText !== '' && 'd-n'}`}>\r\n      <div className='mb-1'>\r\n        <i className='fas fa-star mr'></i>\r\n        favorite boards\r\n        <div className='btn float-right btn-narrow text-sm' onClick={onCollapse}>\r\n          <i className={`fas ${collapse ? 'fa-plus' : 'fa-minus'}`}></i>\r\n        </div>\r\n      </div>\r\n      { !collapse &&\r\n          boards.map(b => (\r\n            b.starred && <ListOfBoardsItem key={b.id} board={b} />\r\n          ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StarredInList\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport ListOfBoardsItem from './ListOfBoardsItem';\r\n\r\nimport boardContext from '../../context/board/boardContext';\r\n\r\nconst Boards = ({ searchText }) => {\r\n  const [collapse, setCollapse] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(searchText !== '') {\r\n      setCollapse(false);\r\n    }\r\n  }, [searchText]);\r\n\r\n  const { boards } = useContext(boardContext);\r\n\r\n  const onCollapse = () => {\r\n    setCollapse(!collapse);\r\n  }\r\n\r\n  return (\r\n    <div className='mt-1 mb'>\r\n      <div className='mb-1'>\r\n        <i className='fas fa-notes-medical mr'></i>\r\n        boards\r\n        <div className='btn float-right btn-narrow text-sm' onClick={onCollapse}>\r\n          <i className={`fas ${collapse ? 'fa-plus' : 'fa-minus'}`}></i>\r\n        </div>\r\n      </div>\r\n      { !collapse &&\r\n          boards.map(b => (\r\n            <ListOfBoardsItem isFromBoards={true} searchText={searchText} key={b.id} board={b} />\r\n          ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Boards\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport RecentInList from './RecentInList';\r\nimport StarredInList from './StarredInList';\r\nimport Boards from './Boards';\r\n\r\nimport userContext from '../../context/user/userContext';\r\n\r\nconst ListOfBoards = () => {\r\n  const [text, setText] = useState('');\r\n  const [topDistance, setTopDistance] = useState(0);\r\n  \r\n  const {\r\n    showBoardsList,\r\n    keepBoardsList,\r\n    toggleKeepBoardsList,\r\n    toggleShowBoardsList,\r\n    setOptionsModal,\r\n    setModal } = useContext(userContext);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTopDistance(document.querySelector('#main-navbar').getBoundingClientRect().height);\r\n    }, 100);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setText('');\r\n  }, [showBoardsList])\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeepClicked = () => {\r\n    toggleKeepBoardsList();\r\n  }\r\n\r\n  const onCreateNewBordClicked = () => {\r\n    if(!keepBoardsList) {\r\n      toggleShowBoardsList();\r\n    }\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  const onDeleteClicked = () => {\r\n    setOptionsModal('on', 'deleteAllBoards');\r\n  }\r\n\r\n  const thisStyle = {\r\n    top: !keepBoardsList && topDistance\r\n  }\r\n\r\n  const thisStyle1 = {\r\n    height: keepBoardsList && window.innerHeight - topDistance\r\n  }\r\n\r\n  const thisStyle2 = {\r\n    minHeight: topDistance\r\n  }\r\n\r\n  return (\r\n    <div style={thisStyle} className={`list-of-boards ${showBoardsList ? 'show' : ''} ${keepBoardsList ? 'keep' : ''}`}>\r\n      <div style={thisStyle2} className={`header ${keepBoardsList ? '' : 'd-n'}`}>\r\n        <div className='text-bold'>\r\n          boards\r\n        </div>\r\n      </div>\r\n      <div className='main' style={thisStyle1}>\r\n        <input\r\n          type='text'\r\n          placeholder='find boards by name'\r\n          className='m-0 text-sm'\r\n          value={text}\r\n          onChange={onChange} />\r\n        <StarredInList searchText={text} />\r\n        <RecentInList searchText={text} />\r\n        <Boards searchText={text} />\r\n        <div className='text-85 underline m cursor-p mt-1' onClick={onCreateNewBordClicked}>\r\n          Create new board\r\n        </div>\r\n        <div className='text-85 underline m cursor-p' onClick={onKeepClicked}>\r\n          {\r\n            keepBoardsList\r\n              ? 'Dont keep this menu open'\r\n              : 'Always keep this menu open'\r\n          }\r\n        </div>\r\n        <div className='text-85 underline m cursor-p hover-danger' onClick={onDeleteClicked}>\r\n          Delete All Boards\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListOfBoards","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst SideListItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n\r\n  const [isHover, setIsHover] = useState(false);\r\n\r\n  const hoverStyle = isHover ? {\r\n    background: board.color,\r\n    color: '#f4f4f4',\r\n    opacity: '0.7'\r\n  } : {\r\n    opacity: '1'\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    setIsHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setIsHover(false);\r\n  }\r\n\r\n  const onClick = () => {\r\n    setCurrentBoardId(board.id)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      onClick={onClick}\r\n      className='card pl-1 cursor-p p border-0 rounded-lg text-dark transition text-bold'\r\n      style={hoverStyle}\r\n      >\r\n      { board.title.charAt(0).toUpperCase() + board.title.slice(1) }\r\n      { <i className='fa fa-check m-0 float-right'></i> }\r\n    </div> \r\n  );\r\n};\r\n\r\nexport default SideListItem","import React, { useContext } from 'react';\r\nimport SideListItem from './SideListItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst HomeSideList = () => {\r\n  const { boards } = useContext(BoardContext);\r\n\r\n  return (\r\n    <aside className='trello-aside'>\r\n      <button className='btn btn-block btn-primary text-left rounded-lg'>\r\n        <i className='fa fa-notes-medical mr-1'></i>\r\n        <div className='text-bold d-i-b'>Boards</div>\r\n      </button>\r\n      { boards.map(b => (\r\n        <SideListItem key={b.id} board={b} />\r\n      )) }\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default HomeSideList\r\n","import { createContext } from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext;","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst HomeMainItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n  const { setStar } = boardContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const itemStyle = {\r\n    background: board.color\r\n  }\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('fa-star')) {\r\n      setCurrentBoardId(board.id);\r\n    }\r\n  }\r\n\r\n  const onStarClicked = () => {\r\n    setStar(board.id);\r\n    setAlert(`${board.starred ? 'board added to favorites' : 'board removed from favorites'}`, `${board.starred ? 'success' : 'dark'}`, 2500);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='trello-home-main-item mt-1 mr-1'\r\n      style={itemStyle}\r\n      onClick={onClick}>\r\n        <div className='text-white func-title'>\r\n          { board.title.charAt(0).toUpperCase() + board.title.slice(1) }\r\n        </div>\r\n        <div\r\n          className='trello-home-main-item-star'\r\n          onClick={onStarClicked}>\r\n          <i className={`fa-star ${board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeMainItem\r\n","import React, { Fragment, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst Recent = () => {\r\n  const boardContext = useContext(BoardContext);\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { getBoard } = boardContext;\r\n  const { recentIds } = userContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      { recentIds.length !== 0\r\n        &&  <div className='card border-top-0 border-right-0 border-left-0 pb-2'>\r\n              <i className='fa fa-clock mr-1'></i>\r\n              Recent borads\r\n              <div>\r\n                { recentIds.map(r => (\r\n                      <HomeMainItem key={uniqid()} board={getBoard(r)} />\r\n                    ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Recent\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Starred = () => {\r\n  const [list, setList] = useState([])\r\n\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { boards } = boardContext;\r\n\r\n  useEffect(() => {\r\n    const l = boards.filter(b => b.starred);\r\n    setList(l)\r\n    // eslint-disable-next-line\r\n  }, [boards])\r\n\r\n  return (\r\n    <Fragment>\r\n      { list.length !== 0\r\n        &&  <div className='card border-top-0 border-right-0 border-left-0 pb-2'>\r\n              <i className='fa fa-star mr-1'></i>\r\n              favorite borads\r\n              <div>\r\n                { list.map(b => (\r\n                    <HomeMainItem key={b.id} board={b} />\r\n                  ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Starred\r\n","import React, { useContext } from 'react';\r\nimport Recent from './Recent';\r\nimport Starred from './Starred';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst HomeMain = () => {\r\n  const { setModal } = useContext(UserContext);\r\n\r\n  const onAdd = () => {\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  return (\r\n    <main className='trello-home-main text-bold'>\r\n      <Starred />\r\n      <Recent />\r\n      <div className='card border-0'>\r\n        <div className='trello-home-main-item hover' onClick={onAdd}>\r\n          Add Board\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default HomeMain\r\n","import React from 'react';\r\nimport HomeSideList from './HomeSideList';\r\nimport HomeMain from './HomeMain';\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className='container grid-1-3 gap-half mt-3'>\r\n      <HomeSideList />\r\n      <HomeMain />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\nimport boardContext from '../../../context/board/boardContext';\r\n\r\nconst BoardTitle = () => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { setAlert } = alertContext;\r\n  const { getBoard, setTitle } = useContext(boardContext);\r\n\r\n  const [text, setText] = useState('');\r\n  const [isSettingTitle, setIsSettingTitle] = useState(false);\r\n  const [textHasChanged, setTextHasChanged] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setText(getBoard(currentBoardId).title);\r\n    document.querySelector(`#board-title-${currentBoardId}`).focus()\r\n    // eslint-disable-next-line\r\n  }, [isSettingTitle])\r\n\r\n  const onClick = () => {\r\n    setIsSettingTitle(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n    setTextHasChanged(true);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    onSetTitle();\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetTitle();\r\n    }\r\n  }\r\n\r\n  const onSetTitle = () => {\r\n    if(textHasChanged) {\r\n      if(text !== '') {\r\n        setTitle(text, currentBoardId);\r\n        setAlert('board title changed', 'success');\r\n        setIsSettingTitle(false);\r\n      } else {\r\n        setIsSettingTitle(false);\r\n        setAlert('board title can not be empty', 'danger');\r\n      }\r\n    } else {\r\n      setIsSettingTitle(false);\r\n      setTextHasChanged(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='d-i-b'>\r\n      <div\r\n        className={`text-white m-0 ml-1 ${isSettingTitle && 'd-n'}`}\r\n        onClick={onClick}>\r\n        { getBoard(currentBoardId).title.charAt(0).toUpperCase() + getBoard(currentBoardId).title.slice(1) }\r\n      </div>\r\n      <input\r\n        type='text'\r\n        id={`board-title-${currentBoardId}`}\r\n        className={`m-0 rounded ${!isSettingTitle && 'd-n'}`}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        value={text}\r\n        onKeyUp={onKeyUp}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardTitle\r\n","import React, { useContext } from 'react';\r\nimport BoardTitle from './BoardTitle';\r\n\r\nimport AlertContext from '../../../context/alert/alertContext';\r\nimport userContext from '../../../context/user/userContext';\r\nimport boardContext from '../../../context/board/boardContext';\r\n\r\nconst BoardNavbar = ({ board }) => {\r\n  const { setAlert } = useContext(AlertContext);\r\n  const { setOptionsModal, setShowMenu } = useContext(userContext);\r\n  const { setStar } = useContext(boardContext);\r\n\r\n  const onStarClick = () => {\r\n    setStar(board.id);\r\n    setAlert(`${board.starred ? 'board added to favorites' : 'board removed from favorites'}`, `${board.starred ? 'success' : 'dark'}`, 2000);\r\n  }\r\n\r\n  const onShowMenu = () => {\r\n    setShowMenu();\r\n  }\r\n\r\n  const onSetWatching = () => {\r\n    setOptionsModal('on', 'setBoardWatching');\r\n  }\r\n\r\n  const navbarStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-navbar trello-navbar lighten-20' style={navbarStyle}>\r\n      <div className='card border-0 m-0 p-0'>\r\n        { board && <BoardTitle /> }\r\n        <div className='btn btn-transparent btn-square rounded ml-1' onClick={onStarClick}>\r\n          <i className={`fa-star ${board && board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n        <div className='cursor-d ml-1 d-i-b text-white'>\r\n          { \r\n            board\r\n              && (board.describtion ? board.describtion : 'no describtion')\r\n          }\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className={`btn text-sm btn-narrow btn-transparent ${!board.watching && 'd-n'}`} onClick={onSetWatching}>\r\n          <i className='fas fa-eye mr'></i>\r\n          watching\r\n        </div>\r\n        <div className='btn text-sm btn-narrow btn-transparent' onClick={onShowMenu}>\r\n          <i className='fas fa-ellipsis-h mr'></i>\r\n          Show Menu\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardNavbar\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst ListTitle = ({ listId, title, setListTitle }) => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { currentBoardId, currentListId } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [text, setText] = useState('');\r\n  const [isSettingTitle, setIsSettingTitle] = useState(false);\r\n  const [textHasChanged, setTextHasChanged] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setText(title);\r\n    document.querySelector(`#list-title-${listId}`).focus()\r\n    // eslint-disable-next-line\r\n  }, [isSettingTitle])\r\n\r\n  const onClick = () => {\r\n    setIsSettingTitle(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n    setTextHasChanged(true);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    onSetListTitle();\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetListTitle();\r\n    }\r\n  }\r\n\r\n  const onSetListTitle = () => {\r\n    if(textHasChanged) {\r\n      if(text !== '') {\r\n        setListTitle(currentBoardId, currentListId, text);\r\n        setAlert('list title changed', 'success');\r\n        setIsSettingTitle(false);\r\n      } else {\r\n        setIsSettingTitle(false);\r\n        setAlert('list title can not be empty', 'warning');\r\n      }\r\n    } else {\r\n      setIsSettingTitle(false);\r\n      setTextHasChanged(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='d-i-b m-0'>\r\n      <div\r\n        className={`pt-1 mb pl m-0 ${isSettingTitle && 'd-n'}`}\r\n        onClick={onClick}>\r\n        { title }\r\n      </div>\r\n      <input\r\n        type='text'\r\n        id={`list-title-${listId}`}\r\n        value={text}\r\n        className={`m-0 mt p-0 pt pb pl text-bold text-80 border-0 rounded ${!isSettingTitle && 'd-n'}`}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        onKeyUp={onKeyUp}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListTitle\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport ListTitle from './ListTitle';\r\nimport BoardListItem from './BoardListItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardList = ({ list, boardFuncs /* all of board context */ }) => {\r\n\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { setCurrentListId, currentBoardId, setOptionsModal, addCardFromListActions } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [wantToAddCard, setWantToAddCard] = useState(false);\r\n  const [newCardText, setNewCardText] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(addCardFromListActions === list.id) {\r\n      setWantToAddCard(true);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [addCardFromListActions]);\r\n\r\n  const onAddCardClick = () => {\r\n    !wantToAddCard && setWantToAddCard(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    if(e.keyCode !== 13) {\r\n      setNewCardText(e.target.value);\r\n    }\r\n  }\r\n\r\n  const onTextareaBlur = () => {\r\n    if(newCardText !== '') {\r\n      addCard();\r\n    } else {\r\n      cancelAddCard();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13 && newCardText.length > 1) {\r\n      addCard();\r\n    } else if(e.keyCode === 13 && newCardText.length === 1) {\r\n      setNewCardText('');\r\n    }\r\n  }\r\n\r\n  const addCard = () => {\r\n    if(newCardText !== '') {\r\n      // three parameters: 1.text 2.list id 3.board id\r\n      boardFuncs.addCard(newCardText, list.id, currentBoardId);\r\n      setAlert('card added', 'success');\r\n      setNewCardText('');\r\n    }\r\n  }\r\n\r\n  const cancelAddCard = () => {\r\n    setWantToAddCard(false);\r\n    setNewCardText('');\r\n  }\r\n\r\n  const onListCLick = () => {\r\n    setCurrentListId(list.id);\r\n  }\r\n\r\n  const onlistOptionsClick = () => {\r\n    setOptionsModal('on', 'listActions');\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-list' onMouseDown={onListCLick}>\r\n      <div className='trello-board-list-header'>\r\n        <ListTitle listId={list.id} title={list.title} setListTitle={boardFuncs.setListTitle} />\r\n        <div className='btn bg-transparent-with-hover btn-square float-right mt' onClick={onlistOptionsClick}>\r\n          <i className='fas fa-ellipsis-h'></i>\r\n        </div>\r\n        {\r\n          list.watching &&\r\n          <div className='text-85 bg-transparent btn-square float-right mt'>\r\n            <i className='fas fa-eye'></i>\r\n          </div>\r\n        }\r\n      </div>\r\n      <div className='trello-board-list-items'>\r\n        { list.items.map((i, index) => (\r\n          <BoardListItem key={i.id} item={i} />\r\n        )) }\r\n        <div className={`trello-board-list-item trello-board-card-compose  ${!wantToAddCard && 'd-n'}`}>\r\n          <textarea\r\n            className='trello-board-card-compose-textarea'\r\n            placeholder='Enter a title for this card'\r\n            onBlur={onTextareaBlur}\r\n            onKeyUp={onKeyUp}\r\n            onChange={onChange}\r\n            value={newCardText}>\r\n\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`trello-board-footer ${!wantToAddCard && 'hover cursor-p'}`}\r\n        onClick={onAddCardClick}>\r\n        { !wantToAddCard\r\n          ?  (<div>\r\n                {list.items.length === 0 ? '+ Add a card' : '+ Add another card'}\r\n              </div>) \r\n          : (\r\n            <Fragment>\r\n              <div className='btn btn-success' onClick={addCard}>\r\n                Add Card\r\n              </div>\r\n              <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddCard}>\r\n                &times;\r\n              </div>\r\n            </Fragment>\r\n          )  \r\n        }      \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardList\r\n","import React, { Fragment, useState, useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst AddList = ({ board, setScrollIflonger }) => {\r\n  const boardContext = useContext(BoardContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { addList } = boardContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [text, setText] = useState('')\r\n\r\n  const onClick = () => {\r\n    setIsAdding(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    if(text !== '') {\r\n      onAddList();\r\n    } else {\r\n      cancelAddList();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAddList();\r\n    }\r\n  }\r\n\r\n  const onAddList = () => {\r\n    if(text !== '') {\r\n      addList(text, board.id);\r\n      setAlert(`list ${text} added`, 'success');\r\n      setText('');\r\n      setScrollIflonger();\r\n    } else {\r\n      setAlert(`list title can not be empty`, 'warning');\r\n    }\r\n  }\r\n\r\n  const cancelAddList = () => {\r\n    setIsAdding(false);\r\n    setText('');\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`trello-board-add-list-btn btn-light op-8 darken-20 text-dark ${isAdding && 'd-n'}`}\r\n        onClick={onClick}>\r\n          { board && board.lists.length === 0 ? '+ Add a list' : '+ Add another list' }\r\n      </div>\r\n      <div\r\n        className={`trello-board-add-list-form btn-light op-9 darken-20 text-dark ${!isAdding && 'd-n'}`}>\r\n          <input\r\n            type='text'\r\n            className='m-0 rounded-lg mb-1'\r\n            placeholder='Enter list name'\r\n            value={text}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            onKeyUp={onKeyUp}/>\r\n          <div className='btn btn-success' onClick={onAddList}>\r\n            Add List\r\n          </div>\r\n          <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddList}>\r\n            &times;\r\n          </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddList\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport userContext from '../../../context/user/userContext'\r\nimport boardContext from '../../../context/board/boardContext'\r\n\r\nconst BoardAbout = () => {\r\n  const { currentBoardId } = useContext(userContext);\r\n  const { getBoard, setDescribtion } = useContext(boardContext);\r\n\r\n  const [changed, setChanged] = useState(false);\r\n  const [text, setText] = useState(getBoard(currentBoardId).describtion)\r\n\r\n  const onSubmit = () => {\r\n    if(changed) {\r\n      setDescribtion(text, currentBoardId);\r\n      setChanged(false);\r\n    }\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setChanged(true)\r\n    setText(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className='p-1'>\r\n      you can edit board describtion here\r\n      <textarea className='normal-textarea mt' value={text} onChange={onChange}>\r\n      \r\n      </textarea>\r\n      <div className='btn btn-success mt' onClick={onSubmit}>\r\n        submit\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardAbout\r\n","import React, { useContext } from 'react';\r\n\r\nimport userContext from '../../../context/user/userContext'\r\nimport boardContext from '../../../context/board/boardContext'\r\n\r\nconst BoardColor = () => {\r\n  const { currentBoardId } = useContext(userContext);\r\n  const { boardColors, setColor } = useContext(boardContext);\r\n\r\n  const onClick = (e) => {\r\n    setColor(e.target.id, currentBoardId);\r\n  }\r\n\r\n  return (\r\n    <div className='mt-1'>\r\n      <div className='grid-2 gap-half' onClick={onClick}>\r\n        {\r\n          boardColors.map(c => (\r\n            <div\r\n              id={c}\r\n              key={c}\r\n              style={{background: c}}\r\n              className='board-color rounded-lg hover cursor-p'>\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardColor","import React, { useState, useContext } from 'react';\r\nimport BoardAbout from './BoardAbout';\r\nimport BoardColor from './BoardColor';\r\n\r\nimport userContext from '../../../context/user/userContext';\r\nimport boardContext from '../../../context/board/boardContext';\r\n\r\nconst BoardMenu = () => {\r\n  const [step, setStep] = useState(false)\r\n  const [stepType, setStepType] = useState('')\r\n\r\n  const { currentBoardId, setOptionsModal, setShowMenu } = useContext(userContext)\r\n  const { getBoard, setBoardWatching } = useContext(boardContext)\r\n\r\n  const onClose = () => {\r\n    setShowMenu();\r\n    setStep(false);\r\n    setStepType('');\r\n  }\r\n\r\n  const onBack = () => {\r\n    setStep(false);\r\n    setStepType('');\r\n  }\r\n\r\n  const onAboutCLicked = () => {\r\n    setStep(true);\r\n    setStepType('about');\r\n  }\r\n\r\n  const onColorCliked = () => {\r\n    setStep(true);\r\n    setStepType('color');\r\n  }\r\n\r\n  const onWatcingClicked = () => {\r\n    setBoardWatching(currentBoardId);\r\n  }\r\n\r\n  const onClearBoard = () => {\r\n    setOptionsModal('on', 'clearBoard')\r\n  }\r\n\r\n  const onDelete = () => {\r\n    setOptionsModal('on', 'deleteBoard')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='close' onClick={onClose}>\r\n        &times;\r\n      </div>\r\n      <div className={`back ${!step ? 'd-n' : ''}`} onClick={onBack}>\r\n        <i className='fas fa-angle-left'></i>\r\n      </div>\r\n      <h3 className='pb-1'>\r\n        {\r\n          !step\r\n           ? 'Menu'\r\n           : stepType === 'about'\r\n              ? 'About'\r\n              : 'Board color'\r\n        }\r\n      </h3>\r\n      <hr/>\r\n      <div className={`board-menu-list ${step && 'd-n'}`}>\r\n        <div className='board-menu-item' onClick={onAboutCLicked}>\r\n          <i className='fas fa-align-left mr'></i>\r\n          About board\r\n        </div>\r\n        <div className='board-menu-item' onClick={onColorCliked}>\r\n          <i className='fas fa-paint-brush mr'></i>\r\n          Change board color\r\n        </div>\r\n        <div className='board-menu-item' onClick={onWatcingClicked}>\r\n          <i className='fas fa-eye mr'></i>\r\n          Watch\r\n          <i className={`fas fa-check text-sm ml ${!getBoard(currentBoardId).watching && 'd-n'}`}></i>\r\n        </div>\r\n        <div className='board-menu-item hover-danger' onClick={onClearBoard}>\r\n          <i className='fas fa-eraser mr'></i>\r\n          Clear baord\r\n        </div>\r\n        <div className='board-menu-item hover-danger' onClick={onDelete}>\r\n          <i className='fas fa-trash mr'></i>\r\n          Delete board\r\n        </div>\r\n      </div>\r\n      {\r\n        step\r\n          && stepType === 'about'\r\n            && <BoardAbout />\r\n      }\r\n      {\r\n        step\r\n          && stepType === 'color'\r\n            && <BoardColor />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BoardMenu\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport BoardList from './BoardList';\r\nimport AddList from './AddList';\r\nimport BoardMenu from './BoardMenu';\r\n\r\nimport userContext from '../../../context/user/userContext';\r\n\r\nconst BoardMain = ({ board, boardFuncs /* contains all of board context  */ }) => {\r\n  const { showMenu } = useContext(userContext)\r\n\r\n  const [style, setStyle] = useState({});\r\n\r\n  useEffect(() => {\r\n    setScrollIflonger();\r\n    // eslint-disable-next-line\r\n  }, [board.lists]);\r\n\r\n  const setScrollIflonger = () => {\r\n    const boardWidth = (board.lists.length + 1) * 270;\r\n\r\n    if(16 + boardWidth > window.innerWidth) {\r\n      setStyle({\r\n        display: 'grid',\r\n        gridTemplateRows: '1fr',\r\n        gridTemplateColumns: `repeat(${board && board.lists.length + 1}, 1fr)`\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-main' style={style}>\r\n      { board.lists.map(l => (\r\n          <div key={l.id} className='trello-board-list-wrapper'>\r\n            <BoardList key={l.id} list={l} boardFuncs={boardFuncs} />\r\n          </div>\r\n        )) }\r\n      <div className='trello-board-list-wrapper'>\r\n        <AddList board={board} setScrollIflonger={setScrollIflonger} />\r\n      </div>\r\n      <div className={`board-menu ${!showMenu && 'd-n'}`}>\r\n        <BoardMenu />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardMain\r\n","import React, { Fragment, useContext } from 'react';\r\nimport BoardNavbar from './BoardNavbar';\r\nimport BoardMain from './BoardMain';\r\n\r\n// context\r\nimport userContext from '../../../context/user/userContext';\r\nimport boardContext from '../../../context/board/boardContext';\r\n\r\n// css\r\nimport './board.css';\r\n\r\nconst Board = () => {\r\n  const { currentBoardId } = useContext(userContext);\r\n  const BoardContext = useContext(boardContext);\r\n\r\n  const { getBoard } = BoardContext;\r\n\r\n  const boardStyle = {\r\n    background: getBoard(currentBoardId).color\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <BoardNavbar board={getBoard(currentBoardId)} />\r\n      <div className='trello-board-main-wrapper lighten-20 p' style={boardStyle}>\r\n        <BoardMain boardFuncs={BoardContext} board={getBoard(currentBoardId)} />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import React, { useState, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nimport './modals.css';\r\n\r\nconst AddBoardModal = () => {\r\n  const { setModal, setCurrentBoardId, clearCurrentBoardId } = useContext(UserContext);\r\n  const { boardColors, addBoard } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const [bg, setBg] = useState('#0079bf');\r\n  const [text, setText] = useState('');\r\n\r\n  const onBgClicked = (e) => {\r\n    if(!e.target.classList.contains('func-no-click') && !e.target.classList.contains('func-colors')) {\r\n      setBg(e.target.id);\r\n    }\r\n  }\r\n\r\n  const onClose = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAdd();\r\n    }\r\n  }\r\n\r\n  const onAdd = () => {\r\n    if(text !== '') {\r\n      const id = uniqid();\r\n      addBoard(text, bg, id);\r\n      onClose();\r\n      setAlert(`board ${text.charAt(0).toUpperCase() + text.slice(1)} was created`, 'success', 4000);\r\n      clearCurrentBoardId();\r\n      setCurrentBoardId(id);\r\n    }\r\n  }\r\n\r\n  const bgColor = {\r\n    backgroundColor: bg\r\n  }\r\n\r\n  return (\r\n    <div className='modal-content add-board-modal-content'>\r\n      <div className='grid-3-1'>\r\n        <div className='p-1 grid-3-1 rounded-lg' style={bgColor}>\r\n          <div>\r\n            <input\r\n              type='text'\r\n              placeholder='Add board title'\r\n              value={text}\r\n              onChange={onChange}\r\n              onKeyUp={onKeyUp}\r\n              className='m-0 border-0 text-bold text-light pl-1 rounded'/>\r\n          </div>\r\n          <div>\r\n            <div className='close' onClick={onClose}>\r\n              &times;\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='func-colors grid-3 gap-half' onClick={onBgClicked}>\r\n          {\r\n            boardColors.map((c, index) => (\r\n              <div\r\n                id={c}\r\n                key={c}\r\n                style={{background: c}}\r\n                className='rounded-lg p-1 cursor-p'>\r\n              </div>\r\n            ))\r\n          }\r\n          {/* <div id='#ee3a59' className='rounded-lg p-1 background-red cursor-p'></div>\r\n          <div id='#e27b47' className='rounded-lg p-1 background-orange cursor-p'></div>\r\n          <div id='#efca58' className='rounded-lg p-1 background-yellow cursor-p'></div>\r\n          <div id='#46b29e' className='rounded-lg p-1 background-blue-l cursor-p'></div>\r\n          <div id='#344e5c' className='rounded-lg p-1 background-blue-d cursor-p'></div> */}\r\n        </div>\r\n      </div>\r\n      <div\r\n        onClick={onAdd}\r\n        className={`btn btn-narrow m text-bold ${text !== '' ? 'btn-success' : 'cursor-not-allowed'}`}>\r\n          Create Board\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddBoardModal\r\n","import React, { useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Labelitem = ({ label, onClick }) => {\r\n  const { labels } = useContext(BoardContext);\r\n\r\n  const thisLabel = labels.filter(l => l.id === label)[0];\r\n\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      className={`d-i-b details-label hover label-color-${thisLabel.colorName}`}>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Labelitem\r\n","import React, { useContext } from 'react';\r\nimport LabelItem from './LabelItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst Labels = ({ labels }) => {\r\n  const { setOptionsModal } = useContext(UserContext);\r\n\r\n  const onClick = () => {\r\n    setOptionsModal('on', 'editCardLabels');\r\n  }\r\n\r\n  return (\r\n    <div className={`mb-2 pos-rel ${labels.length === 0 && 'd-n'}`}>\r\n      <i className='fas fa-tag top-0'></i>\r\n      <div className='ml-2'>\r\n        <div className='text-85 mb text-bold'>\r\n          labels\r\n        </div>\r\n        {\r\n          labels.map(l => (\r\n            <LabelItem key={l} label={l} onClick={onClick} />\r\n          ))\r\n        }\r\n        <div className='d-i-b hover details-label bg-light text-center' onClick={onClick}>\r\n          <i className='fas fa-plus text-lg'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Labels\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport userContext from '../../../context/user/userContext';\r\nimport boardContext from '../../../context/board/boardContext';\r\n\r\nconst Description = () => {\r\n  const { setCurrentCard,currentBoardId, currentListId, currentCard } = useContext(userContext);\r\n  const { updateCard } = useContext(boardContext);\r\n\r\n  const [text, setText] = useState('');\r\n  const [isEditing, setIsEditing] = useState(false)\r\n\r\n  useEffect(() => {\r\n    currentCard.desc && setText(currentCard.desc);\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const startEdit = () => {\r\n    setIsEditing(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    onSave();\r\n  }\r\n\r\n  const onCancel = () => {\r\n    setIsEditing(false);\r\n  }\r\n\r\n  const onSave = () => {\r\n    if(text !== currentCard.desc) {\r\n      const newCard = {\r\n        ...currentCard,\r\n        desc: text\r\n      }\r\n      updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n\r\n      setCurrentCard(newCard);\r\n    }\r\n\r\n    setIsEditing(false);\r\n  }\r\n\r\n  return (\r\n    <div className='pos-rel mb-2'>\r\n      <i className='fas fa-align-left top-0'></i>\r\n      <div className=\"ml-2\">\r\n        <div className='text-85 mb text-bold'>\r\n          Description\r\n        </div>\r\n        <div className={`details-desc ${isEditing && 'd-n'}`} onClick={startEdit}>\r\n          { text ? text : 'add more detailed description' }\r\n        </div>\r\n        <div className={`details-desc-compose-area ${!isEditing && 'd-n'}`}>\r\n          <textarea\r\n            placeholder='enter description'\r\n            className='widht-100 border-0'\r\n            value={text}\r\n            onChange={onChange}\r\n            onBlur={onBlur}>\r\n          </textarea>\r\n          <div className='btn btn-success m' onClick={onSave}>\r\n            Save\r\n          </div>\r\n          <div className='d-i-b text-lg cursor-p m' onClick={onCancel}>\r\n            &times;\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Description\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst CheckListItem = ({ item, clId, hideDone }) => {\r\n  const { currentBoardId, currentListId, currentCard, setOptionsModal, setData } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const onChange = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      checklists: currentCard.checklists.map(c => {\r\n        if(c.id === clId) {\r\n          c.items = c.items.map(i => {\r\n            if(i.id === item.id) {\r\n              item.done = !item.done\r\n            }\r\n            return i\r\n          })\r\n        }\r\n        return c\r\n      })\r\n    }\r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard)\r\n  }\r\n\r\n  const onOptionsClicked = () => {\r\n    setOptionsModal('on', 'checklistItemActions');\r\n    setData({\r\n      item,\r\n      checklistId: clId\r\n    });\r\n  }\r\n\r\n  const  ifDone = {\r\n    textDecoration: item.done ? 'line-through' : 'none'\r\n  }\r\n  \r\n  return (\r\n    <div className={`checklist-item ${(hideDone && item.done) && 'd-n'}`}>\r\n      <input type='checkbox' defaultChecked={item.done} onChange={onChange} className='mt-0 mb-0'/>\r\n      <div style={ifDone} className='d-i-b text-85'>\r\n        { item.text }\r\n      </div>\r\n      <div className='btn btn-narrow text-sm mt-0' onClick={onOptionsClicked}>\r\n        <i className='fas fa-ellipsis-h'></i>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckListItem\r\n","import React, { useState, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport CheckListItem from './CheckListItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Checklist = ({ checklist }) => {\r\n  const { updateCard } = useContext(BoardContext);\r\n  const { currentBoardId, currentListId, currentCard, setCurrentCard, setOptionsModal, setData } = useContext(UserContext);\r\n\r\n  const [text, setText] = useState('')\r\n  const [isAdding, setIsAdding] = useState(false)\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAddItem(); \r\n    }\r\n  }\r\n\r\n  const onDeleteList = () => {\r\n    setOptionsModal('on', 'deleteChecklist');\r\n    setData(checklist.id);\r\n  }\r\n\r\n  const onToggleHideDone = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      checklists: currentCard.checklists.map(c => {\r\n        if(c.id === checklist.id) {\r\n          c.hideDone = !c.hideDone\r\n        }\r\n        return c\r\n      })\r\n    }\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n  }\r\n\r\n  const onStartAdd = () => {\r\n    setIsAdding(true);\r\n  }\r\n\r\n  const onCancelAdd = () => {\r\n    setIsAdding(false);\r\n  }\r\n\r\n  const onAddItem = () => {\r\n    if(text !== '') {\r\n      const newItem = {\r\n        text,\r\n        id: uniqid(),\r\n        done: false\r\n      }\r\n\r\n      const newCard = {\r\n        ...currentCard,\r\n        checklists: currentCard.checklists.map(c => {\r\n          if(c.id === checklist.id) {\r\n            c.items = [...c.items, newItem]\r\n          }\r\n          return c\r\n        })\r\n      }\r\n\r\n      updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n      setCurrentCard(newCard);\r\n      setText('');\r\n    }\r\n  }\r\n\r\n  const getNumberOfDones = () => {\r\n    let num = 0;\r\n\r\n    checklist.items.forEach(i => {\r\n      if(i.done) {\r\n        num++\r\n      }\r\n    })\r\n\r\n    return num\r\n  }\r\n\r\n  const progress = {\r\n    width: `${Math.floor(getNumberOfDones() / checklist.items.length * 100)}%`\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='text-85 mb mt-1'>\r\n        <b>{ checklist.title }</b>\r\n        <div className='float-right'>\r\n          <div\r\n            className={`btn btn-narrow text-85 mr ${getNumberOfDones() === 0 && 'd-n'}`}\r\n            onClick={onToggleHideDone}>\r\n              { checklist.hideDone\r\n                  ? `show checked items (${getNumberOfDones()})`\r\n                  : 'hide compelted items' }\r\n          </div>\r\n          <div className='btn btn-narrow text-85 mr-0' onClick={onDeleteList}>\r\n            Delete\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={`grid-1-10 width-100 ${checklist.items.length === 0 && 'd-n'}`}>\r\n        <div className='text-85 mt'>\r\n          { `${Math.floor(getNumberOfDones() / checklist.items.length * 100)}%` }\r\n        </div>\r\n        <div className='progress-bar'>\r\n          <div style={progress} className='progress'></div>\r\n        </div>\r\n      </div>\r\n      <div className={`mt ml text-85 ${!(checklist.hideDone && getNumberOfDones() === checklist.items.length) && 'd-n'}`}>\r\n        Everything in this checklist is complete!\r\n      </div>\r\n      <div className='mt'>\r\n        {\r\n          checklist.items.map(i => (\r\n            <CheckListItem key={i.id} item={i} clId={checklist.id} hideDone={checklist.hideDone} />\r\n          ))\r\n        }\r\n      </div>\r\n      <div className={`${!isAdding && 'd-n'}`}>\r\n        <input\r\n          type='text'\r\n          className='text-85 p m-0 mt-1 mb'\r\n          placeholder='Add an item'\r\n          value={text}\r\n          onKeyUp={onKeyUp}\r\n          onChange={onChange}/>\r\n        <div className='btn btn-success' onClick={onAddItem}>\r\n          Add\r\n        </div>\r\n        <div className='d-i-b cursor-p text-lg' onClick={onCancelAdd}>\r\n          &times;\r\n        </div>\r\n      </div>\r\n      <div className={`btn mt text-85 ${isAdding && 'd-n'}`} onClick={onStartAdd}>\r\n        Add an item\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Checklist\r\n","import React from 'react';\r\n\r\nimport Checklist from './Checklist';\r\n\r\nconst Checklists = ({ checklists }) => {\r\n  return (\r\n    <div className={`pos-rel mb-2 ${checklists.length === 0 && 'd-n'}`}>\r\n      <i className='fas fa-check-square top-0'></i>\r\n      <div className=\"ml-2\">\r\n        {\r\n          checklists.map(c => (\r\n            <Checklist key={c.id} checklist={c} />\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Checklists\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\n\r\nconst DetailsRightPanel = () => {\r\n  const { currentBoardId, currentListId, currentCard,setCurrentCard, setOptionsModal } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const onLabelClick = () => {\r\n    setOptionsModal('on', 'editCardLabels');\r\n  }\r\n\r\n  const onChecklistClick = () => {\r\n    setOptionsModal('on', 'addChecklist');\r\n  }\r\n\r\n  const onMoveClick = () => {\r\n    setOptionsModal('on', 'moveCard');\r\n  }\r\n\r\n  const onCopyClick = () => {\r\n    setOptionsModal('on', 'copyCard');\r\n  }\r\n\r\n  const onWatchClick = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      watching: !currentCard.watching\r\n    }\r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    setCurrentCard(newCard);\r\n  }\r\n\r\n  const onDeleteClick = () => {\r\n     setOptionsModal('on', 'deleteCard');\r\n  }\r\n\r\n  return (\r\n    <div className='details-right-panel'>\r\n      <section>\r\n        <h5>\r\n          ADD TO CARD\r\n        </h5>\r\n        <div onClick={onLabelClick}>\r\n          <i className='fas fa-tag'></i>\r\n          Label\r\n        </div>\r\n        <div onClick={onChecklistClick}>\r\n          <i className='fas fa-check-square'></i>\r\n          checkList\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <h5>\r\n          ACTIONS\r\n        </h5>\r\n        <div onClick={onMoveClick}>\r\n          <i className='fas fa-arrow-right'></i>\r\n          move\r\n        </div>\r\n        <div onClick={onCopyClick}>\r\n          <i className='fas fa-clone'></i>\r\n          copy\r\n        </div>\r\n        <div onClick={onWatchClick} className='pos-rel'>\r\n          <i className='fas fa-eye'></i>\r\n          watch\r\n          <i className={`fas fa-check ${!currentCard.watching && 'd-n'} btn btn-success text-50 watching-check btn-square`}></i>\r\n        </div>\r\n        <div onClick={onDeleteClick} className='text-danger'>\r\n          <i className='fas fa-trash'></i>\r\n          delete\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailsRightPanel\r\n","import React, { useContext } from 'react';\r\nimport Labels from './details/Labels'\r\nimport Description from './details/Description'\r\nimport Checklists from './details/Checklists'\r\nimport DetailsRightPanel from './details/DetailsRightPanel'\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst DetailsModal = () => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { currentBoardId, currentListId, currentCard, setModal, setOptionsModal } = userContext;\r\n  const { getList } = boardContext;\r\n\r\n  const onClose = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const onListClick  = () => {\r\n    setOptionsModal('on', 'moveCard');\r\n  }\r\n\r\n  return (\r\n    <div className='details-modal-container'>\r\n      <div className='details-modal-header'>\r\n        <div className='close text-lg' onClick={onClose}>\r\n          &times;\r\n        </div>\r\n        <i className='fas fa-th-list mr-1'></i>\r\n        { currentCard.text }\r\n        <div className='ml-2 mt text-85'>\r\n          in the List <div onClick={onListClick} className='d-i-b mr test cursor-p text-underline'>{ getList(currentBoardId, currentListId).title }</div>\r\n          <i className={`fas fa-eye ${!currentCard.watching && 'd-n'}`}></i>\r\n        </div>\r\n      </div>\r\n      <div className='details-modal-body grid-4-1'>\r\n        {/* left column */}\r\n        <div>\r\n          <Labels labels={currentCard.labels} />\r\n          <Description />\r\n          <Checklists checklists={currentCard.checklists} />\r\n        </div>\r\n        {/* right column */}\r\n        <DetailsRightPanel />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailsModal\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\n\r\nimport ListItemLabels from '../pages/board/ListItemLabels';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst FastEditModal = () => {\r\n  const theTextarea = useRef(null);\r\n\r\n  const {\r\n    currentBoardId,\r\n    currentListId,\r\n    fastEditModalPos,\r\n    currentCard,\r\n    clearCurrentCard,\r\n    setOptionsModal,\r\n    setModal,\r\n    bigLabels } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  useEffect(() => {\r\n    setText(currentCard.text);\r\n    theTextarea.current.focus();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const modalPos = {\r\n    position: 'absolute',\r\n    top: fastEditModalPos.top + 'px',\r\n    left: fastEditModalPos.left + 'px'\r\n  }\r\n\r\n  const rightWidth = {\r\n    width: fastEditModalPos.width + 'px'\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onUpdate();\r\n    }\r\n  }\r\n\r\n  const onUpdate = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      text\r\n    }\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    clearCurrentCard();\r\n    setModal('off');\r\n  }\r\n\r\n  const onAtionsClick = (e) => {\r\n    if(e.target.classList.contains('fas')) {\r\n      setOptionsModal('on', e.target.parentElement.id);\r\n    } else if(e.target.classList.contains('func-action-btn')) {\r\n      setOptionsModal('on', e.target.id);\r\n    } else {\r\n      setModal('off');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={modalPos} className='modal-content grid-2 gap-half'>\r\n      <div style={rightWidth} className='fast-edit-modal-right-container'>\r\n        <div className='fast-edit-modal-right'>\r\n          <ListItemLabels father='fastEditModal' bigLabels={bigLabels} labels={currentCard.labels} />\r\n          <textarea\r\n            ref={theTextarea}\r\n            className='m-0 border-0 p-0'\r\n            value={text}\r\n            onChange={onChange}\r\n            onKeyUp={onKeyUp}>\r\n          </textarea>\r\n        </div>\r\n        <div className='btn btn-success mt' onClick={onUpdate}>\r\n          Save\r\n        </div>\r\n      </div>\r\n      <div className='fast-edit-modal-action-container' onClick={onAtionsClick}>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='editCardLabels'>\r\n            <i className='fas fa-tag mr'></i>\r\n            Edit labels\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='moveCard'>\r\n            <i className='fas fa-arrow-right mr'></i>\r\n            Move\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='copyCard'>\r\n            <i className='fas fa-clone mr'></i>\r\n            copy\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='deleteCard'>\r\n            <i className='fas fa-trash mr'></i>\r\n            Delete card\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FastEditModal\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport AddBoardModal from './AddBoardModal';\r\nimport DetailsModal from './DetailsModal';\r\nimport FastEditModal from './FastEditModal';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nimport './modals.css';\r\n\r\nconst Modal = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { modalStatus, modalType, setModal } = userContext;\r\n\r\n  const [showModal, setShowModal] = useState('off');\r\n  \r\n  useEffect(() => {\r\n    setShowModal(modalStatus/* from useState */);\r\n    // eslint-disable-next-line\r\n  }, [modalStatus])\r\n\r\n  const onClick = (e) => {\r\n    if(e.target.classList.contains('modal')) {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const modalDisplay = {\r\n    display: showModal === 'on' ? 'block' : 'none'\r\n  }\r\n\r\n  return (\r\n    <div \r\n      style={modalDisplay}\r\n      className='modal'\r\n      onClick={onClick}>\r\n      {\r\n        modalType === 'addBoardModal' && <AddBoardModal />\r\n      }\r\n      {\r\n        modalType === 'detailsModal' && <DetailsModal />\r\n      }\r\n      {\r\n        modalType === 'fastEditModal' && <FastEditModal />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useContext } from 'react';\r\n\r\nimport userContext from '../../../context/user/userContext';\r\n\r\nconst DeleteAllboards = () => {\r\n  const { setOptionsModal } = useContext(userContext);\r\n\r\n  const onClick = () => {\r\n    setOptionsModal('on', 'confirmDeleteAllBoards')\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div className='p'>\r\n        are you sure you want to delete all boards?\r\n      </div>\r\n      <div className='btn btn-block btn-danger mt-1' onClick={onClick}>\r\n        Delete All Boards\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteAllboards\r\n","import React, { useContext } from 'react';\r\n\r\nimport userContext from '../../../context/user/userContext';\r\nimport boardContext from '../../../context/board/boardContext';\r\nimport alertContext from '../../../context/alert/alertContext';\r\n\r\nconst ConfirmDeleteAllBoards = () => {\r\n  const {\r\n    clearRecent,\r\n    setOptionsModal,\r\n    keepBoardsList,\r\n    toggleShowBoardsList,\r\n    clearCurrentBoardId } = useContext(userContext)\r\n  const { deleteAllBoards } = useContext(boardContext);\r\n  const { setAlert } = useContext(alertContext);\r\n\r\n  const onClick = () => {\r\n    // delete all recent ids to prevent error\r\n    clearRecent();\r\n\r\n    // clear the state\r\n    setTimeout(() => {\r\n      deleteAllBoards();\r\n    }, 100);\r\n\r\n    setOptionsModal('off');\r\n\r\n    if(!keepBoardsList) {\r\n      toggleShowBoardsList()\r\n    }\r\n\r\n    clearCurrentBoardId();\r\n\r\n    setAlert('all boards are deleted now, your dashboard is empty', 'light', 6000);\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div className='p'>\r\n        you should confirm to delete all boards\r\n      </div>\r\n      <div className='btn btn-block btn-danger mt-1' onClick={onClick}>\r\n        Confirm\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConfirmDeleteAllBoards\r\n","import React, { useContext } from 'react';\r\n\r\nimport boardContext from '../../../context/board/boardContext'\r\nimport userContext from '../../../context/user/userContext'\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst DeleteBoard = () => {\r\n  const { getBoard, deleteBoard } = useContext(boardContext)\r\n  const { currentBoardId, clearCurrentBoardId, setModal, setOptionsModal, deleteFromRecent } = useContext(userContext)\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const onClick = () => {\r\n    deleteBoard(currentBoardId)\r\n    deleteFromRecent(currentBoardId);\r\n    setOptionsModal('off');\r\n    setModal('off');\r\n    setAlert(`board ${getBoard(currentBoardId).title} was deleted`, 'dark');\r\n    clearCurrentBoardId();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='text-85 m mb-1'>\r\n        are you sure you want to delete this board?\r\n        its permanent\r\n      </div>\r\n      <div className='btn btn-danger btn-block hover-op-10 hover-lighten' onClick={onClick}>\r\n        Delete\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteBoard\r\n","import React, { useContext } from 'react';\r\n\r\nimport userContext from '../../../context/user/userContext';\r\nimport boardContext from '../../../context/board/boardContext';\r\nimport alertContext from '../../../context/alert/alertContext';\r\n\r\nconst ClearBoard = () => {\r\n  const { currentBoardId, setModal, setOptionsModal, setShowMenu } = useContext(userContext);\r\n  const { clearBoard } = useContext(boardContext);\r\n  const { setAlert } = useContext(alertContext);\r\n\r\n  const onClick = () => {\r\n    clearBoard(currentBoardId);\r\n    setShowMenu();\r\n    setModal('off');\r\n    setOptionsModal('off');\r\n    setAlert('board is empty now', 'dark');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='p'>\r\n        are you sure you want to delete all lists in the board?\r\n      </div>\r\n      <div className='btn btn-block btn-danger mt-1' onClick={onClick}>\r\n        Delete All lists\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ClearBoard\r\n","import React, { useContext } from 'react'\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst SetBoardWatching = () => {\r\n  const { currentBoardId, setModal, setOptionsModal } = useContext(UserContext);\r\n  const { setBoardWatching } = useContext(BoardContext);\r\n\r\n  const onClick = () => {\r\n    setBoardWatching(currentBoardId);\r\n    setModal('off');\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='text-85 m mb-1'>\r\n        You can watch again via the board menu.\r\n      </div>\r\n      <div className='btn btn-danger btn-block hover-op-10 hover-lighten' onClick={onClick}>\r\n        Stop watching\r\n      </div>\r\n    </div>  \r\n  )\r\n}\r\n\r\nexport default SetBoardWatching\r\n","import React, { useContext } from 'react'\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst DeleteCard = () => {\r\n  const { currentBoardId, currentListId, currentCard, setModal, setOptionsModal } = useContext(UserContext);\r\n  const { deleteCard } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const onClick = () => {\r\n    deleteCard(currentBoardId, currentListId, currentCard.id);\r\n    setModal('off');\r\n    setOptionsModal('off');\r\n    setAlert('card deleted', 'dark');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='text-85 m mb-1'>\r\n        are you sure you want to delete this card?\r\n        its permanent\r\n      </div>\r\n      <div className='btn btn-danger btn-block hover-op-10 hover-lighten' onClick={onClick}>\r\n        Delete\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteCard\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst MoveCard = () => {\r\n  const boardsSelect = useRef(null);\r\n  const listSelect = useRef(null);\r\n  const posSelect = useRef(null);\r\n  \r\n  const [destBoardId, setDestBoardId] = useState('');\r\n  const [destListId, setDestListId] = useState('');\r\n  const [destPos, setDestPos] = useState(0);\r\n\r\n  const { currentBoardId, currentListId, currentCard, modalType, setModal, setOptionsModal } = useContext(UserContext);\r\n  const { boards, getBoard, getList, moveCard } = useContext(BoardContext);\r\n\r\n  useEffect(() => {\r\n    setDestBoardId(currentBoardId);\r\n    setDestListId(currentListId);\r\n    setDestPos(getList(currentBoardId, currentListId).items.findIndex(i => i.id === currentCard.id) + 1);\r\n    // eslint-disable-next-line\r\n  }, [currentBoardId, currentListId]);\r\n\r\n  const onBoardDestChange = (e) => {\r\n    setDestBoardId(e.target.value);\r\n    setDestListId(getBoard(e.target.value).lists[0].id)\r\n  }\r\n\r\n  const onListDestChange = (e) => {\r\n    setDestListId(e.target.value);\r\n  }\r\n\r\n  const onPosDestChange = (e) => {\r\n    setDestPos(Number(e.target.value) - 1);\r\n  }\r\n\r\n  const onMove = () => {\r\n    moveCard(currentBoardId, currentListId, currentCard.id, destBoardId, destListId, destPos, currentCard);\r\n    setOptionsModal('off');\r\n    if(modalType === 'fastEditModal') {\r\n      setModal('off');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='move-card-modal text-85'>\r\n      {/* board selectList */}\r\n      <section>\r\n        <div className='p'>\r\n          board\r\n        </div>\r\n        <select ref={boardsSelect} value={destBoardId} onChange={onBoardDestChange} className='mb'>\r\n          {\r\n            boards.map(board => (\r\n              board.lists.length !== 0 &&\r\n              <option key={board.id} value={board.id}>{ board.title }{ board.id === currentBoardId && ' (current)' }</option>\r\n            ))\r\n          }\r\n        </select>\r\n      </section>\r\n      <div className='grid-4-1 gap-half'>\r\n        {/* list selectList */}\r\n        <section>\r\n          <div className='p'>\r\n            list\r\n          </div>\r\n          <select ref={listSelect} value={destListId} onChange={onListDestChange} className='mb'>\r\n            {\r\n              destBoardId && getBoard(destBoardId).lists.map((list, index) => (\r\n                <option key={list.id} value={list.id}>{ list.title }{ list.id === currentListId && '(current)' }</option>\r\n              ))\r\n            }\r\n          </select>\r\n        </section>\r\n        {/* posotion selectList */}\r\n        <section>\r\n          <div className='p'>\r\n            position\r\n          </div>\r\n          <select ref={posSelect} value={destPos} onChange={onPosDestChange} className='mb'>\r\n            {\r\n              destBoardId\r\n                && destListId\r\n                  && getList(destBoardId, destListId).items.map((item, index) => (\r\n                      <option key={item.id} value={index + 1}>{ index + 1 }{ item.id === currentCard.id && ' (current)' }</option>\r\n                    ))\r\n            }\r\n            {\r\n              destBoardId\r\n                && destListId\r\n                  && (destListId !== currentListId)\r\n                    &&  <option value={getList(destBoardId, destListId).items.length + 1}>{ getList(destBoardId, destListId).items.length + 1 }</option>\r\n            }\r\n          </select>\r\n        </section>\r\n      </div>\r\n      <div className='btn btn-success' onClick={onMove}>\r\n        Move\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoveCard","import React, { useState, useEffect, useRef, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\n// its a copy of MoveCard.js, so ... classes and names and... are copy\r\n\r\nconst CopyCard = () => {\r\n  const boardsSelect = useRef(null);\r\n  const listSelect = useRef(null);\r\n  const posSelect = useRef(null);\r\n  \r\n  const [text, setText] = useState('');\r\n  const [keepChecklists, setKeepChecklists] = useState(true);\r\n  const [keepLabels, setKeepLabels] = useState(true);\r\n  const [destBoardId, setDestBoardId] = useState('');\r\n  const [destListId, setDestListId] = useState('');\r\n  const [destPos, setDestPos] = useState(0);\r\n\r\n  const { currentBoardId, currentListId, currentCard, modalType, setModal, setOptionsModal } = useContext(UserContext);\r\n  const { boards, getBoard, getList, moveCard } = useContext(BoardContext);\r\n\r\n  useEffect(() => {\r\n    setDestBoardId(currentBoardId);\r\n    setDestListId(currentListId);\r\n    setDestPos(getList(currentBoardId, currentListId).items.findIndex(i => i.id === currentCard.id) + 1);\r\n    setText(currentCard.text)\r\n    // eslint-disable-next-line\r\n  }, [currentBoardId, currentListId]);\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value)\r\n  }\r\n\r\n  const onKeepChecklistsChange = e => {\r\n    setKeepChecklists(e.target.checked);\r\n  }\r\n\r\n  const onKeepLabelsChange = e => {\r\n    setKeepLabels(e.target.checked);\r\n  }\r\n\r\n  const onBoardDestChange = (e) => {\r\n    setDestBoardId(e.target.value);\r\n    setDestListId(getBoard(e.target.value).lists[0].id)\r\n  }\r\n\r\n  const onListDestChange = (e) => {\r\n    setDestListId(e.target.value);\r\n  }\r\n\r\n  const onPosDestChange = (e) => {\r\n    setDestPos(Number(e.target.value) - 1);\r\n  }\r\n\r\n  const onCopy = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      text,\r\n      labels: keepLabels ? currentCard.labels : [],\r\n      checklists: keepChecklists ? currentCard.checklists : []\r\n    }\r\n\r\n    moveCard(currentBoardId, currentListId, currentCard.id, destBoardId, destListId, destPos, newCard, true);\r\n    setOptionsModal('off');\r\n    if(modalType === 'fastEditModal') {\r\n      setModal('off');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='move-card-modal text-85'>\r\n      <div className='p'>\r\n        title\r\n      </div>\r\n      <textarea value={text} onChange={onChange}>\r\n\r\n      </textarea>\r\n      <div className={`${(currentCard.checklists.length === 0 && currentCard.labels.length === 0) && 'd-n'}`}>\r\n        <div className='p'>\r\n          Keep...\r\n        </div>\r\n        <div className={`${currentCard.checklists.length === 0 && 'd-n'}`}>\r\n          <input type='checkbox' defaultChecked={keepChecklists} onChange={onKeepChecklistsChange} className='m'/>\r\n          Keep Checklists\r\n        </div>\r\n        <div className={`${currentCard.labels.length === 0 && 'd-n'}`}>\r\n          <input type='checkbox' defaultChecked={keepLabels} onChange={onKeepLabelsChange} className='m'/>\r\n          Keep Labels\r\n        </div>\r\n      </div>\r\n      <div className='p'>\r\n        Copy to...\r\n      </div>\r\n      {/* board selectList */}\r\n      <section>\r\n        <div className='p'>\r\n          board\r\n        </div>\r\n        <select ref={boardsSelect} value={destBoardId} onChange={onBoardDestChange} className='mb'>\r\n          {\r\n            boards.map(board => (\r\n              board.lists.length !== 0 &&\r\n              <option key={board.id} value={board.id}>{ board.title }</option>\r\n            ))\r\n          }\r\n        </select>\r\n      </section>\r\n      <div className='grid-4-1 gap-half'>\r\n        {/* list selectList */}\r\n        <section>\r\n          <div className='p'>\r\n            list\r\n          </div>\r\n          <select ref={listSelect} value={destListId} onChange={onListDestChange} className='mb'>\r\n            {\r\n              destBoardId && getBoard(destBoardId).lists.map((list, index) => (\r\n                <option key={list.id} value={list.id}>{ list.title }</option>\r\n              ))\r\n            }\r\n          </select>\r\n        </section>\r\n        {/* posotion selectList */}\r\n        <section>\r\n          <div className='p'>\r\n            position\r\n          </div>\r\n          <select ref={posSelect} value={destPos} onChange={onPosDestChange} className='mb'>\r\n            {\r\n              destBoardId\r\n                && destListId\r\n                  && getList(destBoardId, destListId).items.map((item, index) => (\r\n                      <option key={item.id} value={index + 1}>{ index + 1 }</option>\r\n                    ))\r\n            }\r\n            {\r\n              destBoardId\r\n                && destListId\r\n                  && (destListId !== currentListId)\r\n                    &&  <option value={getList(destBoardId, destListId).items.length + 1}>{ getList(destBoardId, destListId).items.length + 1 }</option>\r\n            }\r\n          </select>\r\n        </section>\r\n      </div>\r\n      <div className='btn btn-success' onClick={onCopy}>\r\n        Create Card\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CopyCard","import React, { useState, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst AddChecklist = () => {\r\n  const { currentBoardId, currentListId, currentCard, setCurrentCard, setOptionsModal } = useContext(UserContext)\r\n  const { updateCard } = useContext(BoardContext)\r\n\r\n  const [text, setText] = useState('new checklist');\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onAdd = () => {\r\n    const newChecklist = {\r\n      title: text,\r\n      id: uniqid(),\r\n      hideDone: false,\r\n      items: []\r\n    }\r\n\r\n    const newCard = {\r\n      ...currentCard,\r\n      checklists: [...currentCard.checklists, newChecklist]\r\n    }\r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n\r\n    setCurrentCard(newCard);\r\n\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input value={text} onChange={onChange} type='text' className='m-0 text-85 p'/>\r\n      <div className='btn mt-1 btn-success' onClick={onAdd}>\r\n        Add\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddChecklist\r\n","import React, { useContext } from 'react'\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst DeleteChecklist = () => {\r\n  const { currentBoardId, currentListId, currentCard, setCurrentCard, setOptionsModal, data, setData } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const onClick = () => {\r\n    const newListOfChecklists = currentCard.checklists.filter(l => l.id !== data)\r\n\r\n    const newCard = {\r\n      ...currentCard,\r\n      checklists: newListOfChecklists\r\n    }    \r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    setCurrentCard(newCard);\r\n\r\n    setOptionsModal('off');\r\n\r\n    setData(null);\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div className='p text-85'>\r\n        are you sure you want to delete this checklist?\r\n      </div>\r\n      <div className='btn btn-block btn-danger mt' onClick={onClick}>\r\n        Delete Checklist\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteChecklist\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst ChecklistItemActions = () => {\r\n  const { currentBoardId, currentListId, currentCard, setOptionsModal, data, setData } = useContext(UserContext)\r\n  const { addCard, updateCard } = useContext(BoardContext)\r\n\r\n  const onDelete = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      checklists: currentCard.checklists.map(c => {\r\n        if(c.id === data.checklistId) {\r\n          c.items = c.items.filter(i => i.id !== data.item.id)\r\n        }\r\n        return c\r\n      })\r\n    }\r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    setOptionsModal('off');\r\n\r\n    setData(null);\r\n  }\r\n\r\n  const onConvertToCard = () => {\r\n    onDelete();\r\n    addCard(data.item.text, currentListId, currentBoardId);\r\n    setOptionsModal('off');\r\n    setData(null);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='list-action-item' onClick={onConvertToCard}>\r\n        convert to card\r\n      </div>\r\n      <div className='list-action-item' onClick={onDelete}>\r\n        delete\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChecklistItemActions\r\n","import React, { useState } from 'react';\r\n\r\nconst EditCardLabelItem = ({ label, searchText, setLabelId, goToEditLabel, currentCard }) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const onClick = () => {\r\n    setLabelId(label.id);\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    setHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setHover(false);\r\n  }\r\n\r\n  const onPenClick = () => {\r\n    goToEditLabel(label);\r\n  }\r\n\r\n  return (\r\n    <div className={`label-item mb width-100 ${label.name.indexOf(searchText) === -1 && 'd-n'}`}>\r\n      <div\r\n        className={`rounded-lg d-i-b text-sm label-color label-color-${label.colorName} ${hover && `label-color-${label.colorName}-hover`}`}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n        onClick={onClick}>\r\n        {\r\n          currentCard.labels.indexOf(label.id) !== -1\r\n            && <i className='label-color-check fas fa-check text-white float-right'></i>\r\n        }\r\n        <div className='label-color-text text-85 ml text-white'>\r\n          { label.name !== '' && label.name }\r\n        </div>\r\n      </div>\r\n      <div className='btn btn-no-bg rounded-lg d-i-b float-right p' onClick={onPenClick}>\r\n        <i className='fas fa-pen text-sm'></i>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditCardLabelItem\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport EditCardLabelItem from './EditCardLabelItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst EditCardLabels = () => {\r\n  const [text, setText] = useState('');\r\n\r\n  const { currentBoardId, currentListId, currentCard, setCurrentCard, setOptionsModal, setOptionsModalStep } = useContext(UserContext);\r\n  const { updateCard, labels } = useContext(BoardContext);\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value)\r\n  }\r\n\r\n  const setLabel = (id) => {\r\n    let newCard;\r\n    if(currentCard.labels.indexOf(id) === -1) {\r\n      // card hasnt this id / add the id\r\n      newCard = {\r\n        ...currentCard,\r\n        labels: [...currentCard.labels, id]\r\n      }\r\n    } else {\r\n      // card has this id / remove the id\r\n      newCard = {\r\n        ...currentCard,\r\n        labels: currentCard.labels.filter(l => l !== id)\r\n      }\r\n    }\r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    setCurrentCard(newCard);\r\n  }\r\n\r\n  const goToEditLabel = (label) => {\r\n    setOptionsModalStep('on', 'editCardLabels', {label, type: 'edit'});\r\n    setOptionsModal('on', 'editLabel');\r\n  }\r\n\r\n  const onCreateClick = () => {\r\n    setOptionsModalStep('on', 'editCardLabels', {type: 'create'});\r\n    setOptionsModal('on', 'editLabel');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type='text'\r\n        value={text}\r\n        onChange={onChange}\r\n        placeholder='search labels...'\r\n        className='mt mb-1 text-85 p'/>\r\n      <div className='text-85 mb'>\r\n        Labels\r\n      </div>\r\n      {\r\n        labels.map(l => (\r\n          <EditCardLabelItem key={l.id} searchText={text} label={l} goToEditLabel={goToEditLabel} setLabelId={setLabel} currentCard={currentCard} />\r\n        ))\r\n      }\r\n      <div className='btn btn-block mt-1 text-85 mt mb' onClick={onCreateClick}>\r\n        create new label\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditCardLabels\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst EditLabel = () => {\r\n  const [text, setText] = useState('');\r\n  const [colorName, setColorName] = useState(null);\r\n\r\n  const {\r\n    setOptionsModal,\r\n    setOptionsModalStep,\r\n    currentCard,\r\n    currentBoardId,\r\n    currentListId,\r\n    setCurrentCard,\r\n    optionsModalStepData: data } = useContext(UserContext);\r\n  const { labels, colors, updateCard, addLabel, updateLabel, deleteLabel } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    data.type === 'edit' && setText(data.label.name);\r\n    data.type === 'edit' ? setColorName(data.label.colorName) : setColorName('green');\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onColorClick = (e) => {\r\n    setColorName(e.target.id);\r\n  }\r\n\r\n  const onSave = () => {\r\n    if(data.type === 'edit') {\r\n      updateLabel(text, colorName, data.label.id);\r\n      setOptionsModal('on', 'editCardLabels');\r\n      setOptionsModalStep('off');\r\n      setAlert('Label updated', 'success');\r\n    } else if(data.type === 'create') {\r\n      let is = false;\r\n      \r\n      labels.forEach(label => {\r\n        if(label.colorName === colorName) {\r\n          if(label.name === text) {\r\n            is = true\r\n          }\r\n        }\r\n      });\r\n\r\n      if(!is) {\r\n        const newId = uniqid();\r\n        // add to list of labels in board state\r\n        addLabel(text, colorName, newId);\r\n        const newCard = {\r\n          ...currentCard,\r\n          labels: [...currentCard.labels, newId]\r\n        }\r\n        // add label to current board\r\n        updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n        setCurrentCard(newCard);\r\n        setAlert('Label created', 'success');\r\n      } else {\r\n        setAlert('Label already exits', 'light');\r\n      }\r\n\r\n      setOptionsModal('on', 'editCardLabels');\r\n      setOptionsModalStep('off');\r\n    }\r\n  }\r\n\r\n  const onDelete = () => {\r\n    deleteLabel(data.label.id);\r\n    setOptionsModal('on', 'editCardLabels');\r\n    setOptionsModalStep('off');\r\n    setAlert('Label deleted', 'dark');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input type='text' className='m-0 text-85 p' value={text} placeholder='enter label name' onChange={onChange}/>\r\n      <div className='text-85 mt mb'>\r\n        pick a color\r\n      </div>\r\n      <div className='mb'>\r\n        {\r\n          colors.map(color => (\r\n            <div key={color.name} style={{ background: color.color }} className='color-for-select hover-lighten' id={color.name} onClick={onColorClick}>\r\n              { \r\n                color.name === colorName\r\n                  && <i className='fas fa-check text-85 text-white m-0'></i> \r\n              }\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n      <div>\r\n        <div className='btn btn-success' onClick={onSave}>\r\n          {\r\n            data.type === 'edit'\r\n              ? 'Save'\r\n              : 'Create'\r\n          }\r\n        </div>\r\n        {\r\n          data.type === 'edit'\r\n            &&  <div className='btn btn-danger float-right' onClick={onDelete}>\r\n                  Delete\r\n                </div>\r\n        }\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditLabel\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst ListActions = () => {\r\n  const {\r\n    currentBoardId,\r\n    currentListId,\r\n    setOptionsModal,\r\n    setOptionsModalStep,\r\n    setAddCardFromListActions\r\n  } = useContext(UserContext);\r\n  const { getList, setWatching, sortList } = useContext(BoardContext);\r\n\r\n  const onAddCardClicked = () => {\r\n    setAddCardFromListActions(currentListId);\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const onCopyClicked = () => {\r\n    setOptionsModal('on', 'copyList');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  const onMoveClicked = () => {\r\n    setOptionsModal('on', 'moveList');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  const onWatchClicked = () => {\r\n    setWatching(currentBoardId, currentListId);\r\n  }\r\n\r\n  const onMoveAllCardsClicked = () => {\r\n    setOptionsModal('on', 'moveAllCards');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  const onSortClicked = () => {\r\n    sortList(currentBoardId, currentListId);\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const onDeleteAllCardsClicked = () => {\r\n    setOptionsModal('on', 'deleteAllCards');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  const onDeleteClicked = () => {\r\n    setOptionsModal('on', 'deleteList');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='list-action-item' onClick={onAddCardClicked}>\r\n        add card...\r\n      </div>\r\n      <div className='list-action-item' onClick={onCopyClicked}>\r\n        copy list\r\n      </div>\r\n      <div className='list-action-item' onClick={onMoveClicked}>\r\n        move list\r\n      </div>\r\n      <div className='list-action-item' onClick={onWatchClicked}>\r\n        watch\r\n        {\r\n          getList(currentBoardId, currentListId).watching\r\n            && <i className='fas fa-check ml text-85'></i>\r\n        }\r\n      </div>\r\n      <hr />\r\n      <div className='list-action-item' onClick={onMoveAllCardsClicked}>\r\n        move all cards in this list\r\n      </div>\r\n      <div className='list-action-item' onClick={onSortClicked}>\r\n        sort...\r\n      </div>\r\n      <hr />\r\n      <div className='list-action-item delete-list' onClick={onDeleteAllCardsClicked}>\r\n        delete all cards in this list\r\n      </div>\r\n      <div className='list-action-item delete-list' onClick={onDeleteClicked}>\r\n        delete this list\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListActions\r\n","import React, { useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst DeleteList = () => {\r\n  const { deleteList } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n\r\n  const onClick = () => {\r\n    deleteList(currentBoardId, currentListId);\r\n    setOptionsModal('off');\r\n    setAlert('list deleted', 'dark');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-1 mt p-1\">\r\n        delete this list ?\r\n        its permanent\r\n      </div>\r\n      <div className=\"btn btn-block btn-danger\" onClick={onClick}>\r\n        Delete\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteList\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst CopyList = () => {\r\n  const [name, setName] = useState('');\r\n  \r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n  const { getList, copyList } = useContext(BoardContext);\r\n\r\n  useEffect(() => {\r\n    setName(getList(currentBoardId, currentListId).title);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onCLick = () => {\r\n    copyList(currentBoardId, currentListId, name);\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setName(e.target.value);\r\n    // console.log(e.trgte.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"text-85\">\r\n        name\r\n      </div>\r\n      <input type=\"text\" className=\"m-0 mb mt pl-1\" value={name} onChange={onChange} />\r\n      <div className=\"btn btn-success mt-1\" onClick={onCLick}>\r\n        Copy List\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CopyList\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst MoveList = () => {\r\n  const boardsSelect = useRef(null);\r\n  const PosSelect = useRef(null);\r\n  \r\n  const [destBoardId, setDestBoardId] = useState(null);\r\n  const [desPos, setDestPos] = useState(0);\r\n\r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n  const { boards, getBoard, moveList } = useContext(BoardContext);\r\n\r\n  useEffect(() => {\r\n    setDestBoardId(currentBoardId);\r\n    setDestPos(getBoard(currentBoardId).lists.findIndex(l => l.id === currentListId) + 1);\r\n    boardsSelect.current.value = currentBoardId;\r\n    // eslint-disable-next-line\r\n  }, [currentBoardId, currentListId]);\r\n\r\n  const onBoardDestChange = (e) => {\r\n    setDestBoardId(e.target.value);\r\n  }\r\n\r\n  const onListDestChange = (e) => {\r\n    setDestPos(Number(e.target.value) - 1);\r\n  }\r\n\r\n  const onMove = () => {\r\n    moveList(currentBoardId, currentListId, destBoardId, desPos);\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  return (\r\n    <div className='move-list-modal text-85'>\r\n      <section>\r\n        <div className=\"p\">\r\n          board\r\n        </div>\r\n        <select ref={boardsSelect} onChange={onBoardDestChange} className='mb'>\r\n          {\r\n            boards.map(board => (\r\n              <option key={board.id} value={board.id}>{ board.title }{ board.id === currentBoardId && ' (current)' }</option>\r\n            ))\r\n          }\r\n        </select>\r\n      </section>\r\n      <section>\r\n        <div className=\"p\">\r\n          position\r\n        </div>\r\n        <select ref={PosSelect} value={desPos} onChange={onListDestChange} className='mb'>\r\n          {\r\n            destBoardId && getBoard(destBoardId).lists.map((list, index) => (\r\n              <option key={list.id} value={index + 1}>{ index + 1 }{ list.id === currentListId && ' (current)' }</option>\r\n            ))\r\n          }\r\n          {\r\n            destBoardId\r\n              && (destBoardId !== currentBoardId)\r\n              && <option value={getBoard(destBoardId).lists.length + 1}>{ getBoard(destBoardId).lists.length + 1 }</option>\r\n          }\r\n        </select>\r\n      </section>\r\n      <div className='btn btn-success' onClick={onMove}>\r\n        Move\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoveList\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst DeleteAllCards = () => {\r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n  const { getList, deleteAllCards } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const onClick = () => {\r\n    setOptionsModal('off');\r\n    if(getList(currentBoardId, currentListId).items.length !== 0) {\r\n      setAlert('all cards were deleted!!', 'dark');\r\n      deleteAllCards(currentBoardId, currentListId);\r\n    } else {\r\n      setAlert('no card to delete!', 'warning', 2500);\r\n      setTimeout(() => {\r\n        setAlert('enter some Card first', 'light', 2500);\r\n        setTimeout(() => {\r\n          setAlert('then try to delete cards', 'primary', 2500);\r\n          setTimeout(() => {\r\n            setAlert('you undrestand?', 'danger', 2500);\r\n            setTimeout(() => {\r\n              setAlert('what card you want me to delete?', 'danger', 2500);\r\n            }, 2500);\r\n          }, 2500);\r\n        }, 2500);\r\n      }, 2500);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='p'>\r\n        are you sure you want to delete all cards in the list <b>{ getList(currentBoardId, currentListId).title }</b>?\r\n      </div>\r\n      <div className='btn btn-block btn-danger mt-1' onClick={onClick}>\r\n        Delete All Cards\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteAllCards\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst MoveAllCards = () => {\r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n  const { getBoard, moveAllCards } = useContext(BoardContext);\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('func-not')) {\r\n      moveAllCards(currentBoardId, currentListId, e.target.id);\r\n      setOptionsModal('off');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='func-not text-85' onClick={onClick}>\r\n      {\r\n        getBoard(currentBoardId).lists.map(list => {\r\n          if(list.id === currentListId) {\r\n            return <div key={list.id} id={list.id} className=\"func-not list-action-item item-choosen\">\r\n                      { list.title }\r\n                   </div>\r\n          } else {\r\n            return <div key={list.id} id={list.id} className=\"list-action-item\">\r\n                      { list.title }\r\n                   </div>\r\n          }\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoveAllCards\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport DeleteAllBoards from './options/DeleteAllBoards';\r\nimport ConfirmDeleteAllBoards from './options/ConfirmDeleteAllBoards';\r\nimport DeleteBoard from './options/DeleteBoard';\r\nimport ClearBoard from './options/ClearBoard';\r\nimport SetBoardWatching from './options/SetBoardWatching';\r\nimport DeleteCard from './options/DeleteCard';\r\nimport MoveCard from './options/MoveCard';\r\nimport CopyCard from './options/CopyCard';\r\nimport AddChecklist from './options/AddChecklist';\r\nimport DeleteChecklist from './options/DeleteChecklist';\r\nimport ChecklistItemActions from './options/ChecklistItemActions';\r\nimport EditCardLabels from './options/EditCardLabels';\r\nimport EditLabel from './options/EditLabel';\r\nimport ListActions from './options/ListActions';\r\nimport DeleteList from './options/DeleteList';\r\nimport CopyList from './options/CopyList';\r\nimport MoveList from './options/MoveList';\r\nimport DeleteAllCards from './options/DeleteAllCards';\r\nimport MoveAllCards from './options/MoveAllCards';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nimport './modals.css';\r\n\r\nconst OptionsModal = () => {\r\n  const container = useRef(null);\r\n\r\n  const userContext = useContext(UserContext);\r\n\r\n  const {\r\n    optionsModalStatus,\r\n    optionsModalType,\r\n    optionsModalStepStatus,\r\n    optionsModalStepType,\r\n    mousePos,\r\n    setOptionsModal,\r\n    setOptionsModalStep} = userContext;\r\n\r\n  const [showModal, setShowModal] = useState('off');\r\n  const [pos, setPos] = useState({});\r\n  \r\n  useEffect(() => {\r\n    setShowModal(optionsModalStatus/* from useState */);\r\n    setOptionsPos();\r\n    // eslint-disable-next-line\r\n  }, [optionsModalStatus, mousePos])\r\n\r\n  const onClick = (e) => {\r\n    if(e.target.id === 'options-modal') {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  const onBack = () => {\r\n    setOptionsModal('on', optionsModalStepType);\r\n    setOptionsModalStep('off');\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const setOptionsPos = () => {\r\n    setTimeout(() => {\r\n      if(mousePos) {\r\n        let rect;\r\n        rect = container.current.getBoundingClientRect();\r\n\r\n        if(window.innerWidth - mousePos.x - 10 < rect.width && window.innerHeight - mousePos.y > rect.height) {\r\n          setPos({\r\n            right: 10,\r\n            top: mousePos.y + 10 + 'px'\r\n          });\r\n        } else if(window.innerHeight - mousePos.y - 10 < rect.height && window.innerWidth - mousePos.x > rect.width) {\r\n          setPos({\r\n            left: mousePos.x + 10 + 'px',\r\n            bottom: 10\r\n          })\r\n        } else if(window.innerHeight - mousePos.y - 10 < rect.height && window.innerWidth - mousePos.x - 10 < rect.width) {\r\n            setPos({\r\n            right: 10,\r\n            bottom: 10\r\n          })\r\n        } else {\r\n          setPos({\r\n            left: mousePos.x + 10 + 'px',\r\n            top: mousePos.y + 10 + 'px'\r\n          })\r\n        }\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  const modalDisplay = {\r\n    display: showModal === 'on' ? 'block' : 'none'\r\n  }\r\n\r\n  return (\r\n    <div \r\n      style={modalDisplay}\r\n      id='options-modal'\r\n      onClick={onClick}>\r\n        <div ref={container} className='options-modal-container' style={pos}>\r\n          <div className='options-modal-header'>\r\n            {\r\n              optionsModalStepStatus === 'on'\r\n                && <div className='back d-i-b float-left cursor-p lighten-30 hover-darken' onClick={onBack}>\r\n                      <i className='fas fa-angle-left'></i>\r\n                    </div>\r\n            }\r\n            <div className=\"close\" onClick={closeModal}>\r\n              &times;\r\n            </div>\r\n            { optionsModalType === 'deleteAllBoards' && 'Are you sure?' }\r\n            { optionsModalType === 'confirmDeleteAllBoards' && 'CONFIRM' }\r\n            { optionsModalType === 'deleteBoard' && 'Delete board?' }\r\n            { optionsModalType === 'clearBoard' && 'Clear board?' }\r\n            { optionsModalType === 'setBoardWatching' && 'Stop watching?' }\r\n            { optionsModalType === 'editCardLabels' && 'Labels' }\r\n            { optionsModalType === 'editLabel' && 'Edit Label' }\r\n            { optionsModalType === 'moveCard' && 'Move card' }\r\n            { optionsModalType === 'copyCard' && 'Copy card' }\r\n            { optionsModalType === 'members' && 'Members' }\r\n            { optionsModalType === 'addChecklist' && 'Add Cheklist' }\r\n            { optionsModalType === 'deleteChecklist' && 'Delete Cheklist?' }\r\n            { optionsModalType === 'checklistItemActions' && 'Item Actions' }\r\n            { optionsModalType === 'deleteCard' && 'Delete Card?' }\r\n            { optionsModalType === 'listActions' && 'List Actions' }\r\n            { optionsModalType === 'deleteList' && 'Delete List?' }\r\n            { optionsModalType === 'copyList' && 'Copy List' }\r\n            { optionsModalType === 'moveList' && 'Move List' }\r\n            { optionsModalType === 'deleteAllCards' && 'Empty the List?' }\r\n            { optionsModalType === 'moveAllCards' && 'select board' }\r\n          </div>\r\n          <div className='options-modal-body'>\r\n            { optionsModalType === 'deleteAllBoards' && <DeleteAllBoards /> }\r\n            { optionsModalType === 'confirmDeleteAllBoards' && <ConfirmDeleteAllBoards /> }\r\n            { optionsModalType === 'deleteBoard' && <DeleteBoard /> }\r\n            { optionsModalType === 'setBoardWatching' && <SetBoardWatching /> }\r\n            { optionsModalType === 'clearBoard' && <ClearBoard /> }\r\n            { optionsModalType === 'editCardLabels' && <EditCardLabels /> }\r\n            { optionsModalType === 'moveCard' && <MoveCard /> }\r\n            { optionsModalType === 'copyCard' && <CopyCard /> }\r\n            { optionsModalType === 'addChecklist' && <AddChecklist /> }\r\n            { optionsModalType === 'deleteChecklist' && <DeleteChecklist /> }\r\n            { optionsModalType === 'checklistItemActions' && <ChecklistItemActions /> }\r\n            { optionsModalType === 'deleteCard' && <DeleteCard /> }\r\n            { optionsModalType === 'editLabel' && <EditLabel /> }\r\n            { optionsModalType === 'listActions' && <ListActions /> }\r\n            { optionsModalType === 'deleteList' && <DeleteList /> }\r\n            { optionsModalType === 'copyList' && <CopyList /> }\r\n            { optionsModalType === 'moveList' && <MoveList /> }\r\n            { optionsModalType === 'deleteAllCards' && <DeleteAllCards /> }\r\n            { optionsModalType === 'moveAllCards' && <MoveAllCards /> }\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OptionsModal\r\n","import React from 'react'\r\n\r\nconst AlertItem = ({ alert, deleteAlert }) => {\r\n  const onClick = () => {\r\n    deleteAlert(alert.id);\r\n  }\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      className={`trello-alert-item alert rounded-lg alert-${alert.type}`}>\r\n        <div className='trello-alert-item-msg'>\r\n          { alert.msg.charAt(0).toUpperCase() + alert.msg.slice(1) }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertItem\r\n","import React, { useContext } from 'react';\r\nimport AlertItem from './AlertItem';\r\n\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alerts = () => {\r\n  const { alerts, deleteAlert } = useContext(AlertContext);\r\n\r\n  return (\r\n    <div className='trello-alerts-wrapper'>\r\n      {\r\n        alerts.map(a => (\r\n          <AlertItem\r\n            key={a.id}\r\n            alert={a}\r\n            deleteAlert={deleteAlert} />\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alerts\r\n","import React, { useEffect, useContext } from 'react';\r\nimport Navbar from './components/layout/Navbar';\r\nimport ListOfBoards from './components/layout/ListOfBoards';\r\nimport Home from './components/pages/home/Home';\r\nimport Board from './components/pages/board/Board';\r\nimport Modal from './components/modal/Modal';\r\nimport OptionsModal from './components/modal/OptionsModal';\r\nimport Alerts from './components/alert/Alerts';\r\n\r\nimport userContext from './context/user/userContext';\r\nimport boardContext from './context/board/boardContext';\r\n\r\nimport './trello-clone.css';\r\n\r\nconst App = () => {\r\n  const {\r\n    currentBoardId,\r\n    setMousePos,\r\n    bigLabels,\r\n    getUserdata,\r\n    keepBoardsList,\r\n    showBoardsList,\r\n    toggleShowBoardsList,\r\n    optionsModalStatus } = useContext(userContext);\r\n\r\n  const { boards, labels, getBoardsData } = useContext(boardContext)\r\n\r\n  // to display board page for development purposes\r\n  useEffect(() => {\r\n    // focus on inputs\r\n    // newCardActions in boardList does nothing yet ( add card must be editted to send an object to the context not a text )\r\n    // in final deploy, must change the add functions, ex. => i have prop on cards, but in addCard func, there is no \"whatchin: false\" so it must be changed as the other, add label (probalbely not), addList, add Board, and ...\r\n    // add members to details modal next to labels\r\n    // style checkboxes\r\n    // NewCardOptions to be done (its half done)\r\n    // clear all boards to boards list in the navbar\r\n    // search result scroll if longer\r\n    // cahnge board color\r\n    // save keepBoardsList to local storage\r\n    console.log('notes ↑')\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    getBoardsData()\r\n    getUserdata()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const stiringed = JSON.stringify(boards)\r\n    \r\n    localStorage.setItem('boards', stiringed);\r\n  }, [boards]);\r\n\r\n  useEffect(() => {\r\n    const stiringed = JSON.stringify(labels)\r\n    \r\n    localStorage.setItem('labels', stiringed);\r\n  }, [labels]);\r\n\r\n  useEffect(() => {\r\n    const stiringed = JSON.stringify(bigLabels)\r\n    \r\n    localStorage.setItem('bigLabels', stiringed);\r\n  }, [bigLabels]);\r\n\r\n  const onClick = (e) => {\r\n    if(optionsModalStatus === 'off') {\r\n      setMousePos(e.clientX, e.clientY)\r\n    }\r\n  }\r\n\r\n  const CloseListOfBoards = (e) => {\r\n    if(!keepBoardsList) {\r\n      if(showBoardsList) {\r\n        toggleShowBoardsList();\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div onClick={onClick} className='all-wrapper'>\r\n      <Modal />\r\n      <OptionsModal />\r\n      <Alerts />\r\n      <div className={`all-wrapper ${keepBoardsList ? 'grid-1-4 gap-none' : ''}`}>\r\n        <div className='all-wrapper'>\r\n          <ListOfBoards />\r\n        </div>\r\n        <div className='all-wrapper' onClick={CloseListOfBoards}>\r\n          <Navbar />\r\n          { !currentBoardId\r\n              ? <Home />\r\n              : <Board />\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\nexport default App","import {\r\n  DELETE_ALL_BOARDS,\r\n  SET_BOARDS,\r\n  ADD_BOARD,\r\n  DELETE_BOARD,\r\n  CLEAR_BOARD,\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_BOARD_WATCHING,\r\n  SET_WATCHING,\r\n  SET_COLOR,\r\n  SET_DESCRIBTION,\r\n  ADD_LIST,\r\n  DELETE_LIST,\r\n  DELETE_ALL_CARDS,\r\n  MOVE_ALL_CARDS,\r\n  SET_LIST_TITLE,\r\n  COPY_LIST,\r\n  SORT_LIST,\r\n  MOVE_LIST,\r\n  ADD_CARD,\r\n  UPDATE_CARD,\r\n  DELETE_CARD,\r\n  MOVE_CARD,\r\n  SET_LABELS,\r\n  ADD_LABEL,\r\n  UPDATE_LABEL,\r\n  DELETE_LABEL\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case DELETE_ALL_BOARDS:\r\n      return {\r\n        ...state,\r\n        boards: []\r\n      }\r\n    case SET_BOARDS:\r\n     return {\r\n       ...state,\r\n       boards: action.payload\r\n     }\r\n    case ADD_BOARD:\r\n      return {\r\n        ...state,\r\n        boards: [...state.boards, action.payload]\r\n      }\r\n    case DELETE_BOARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.filter(b => b.id !== action.payload)\r\n      }\r\n    case CLEAR_BOARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload) {\r\n            b.lists = []\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_TITLE:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.title = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_STAR:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload) {\r\n            b.starred = !b.starred\r\n          }\r\n          return b\r\n        })\r\n      }\r\n\r\n    case SET_BOARD_WATCHING:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload) {\r\n            b.watching = !b.watching\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_WATCHING:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.watching = !l.watching\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_DESCRIBTION:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.describtion = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_COLOR:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.color = action.payload.color\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.lists.push(action.payload.newList)\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case COPY_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists.splice(b.lists.findIndex(l => l.id === action.payload.listId) + 1, 0, action.payload.newList)\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SORT_LIST:\r\n     return {\r\n       ...state,\r\n       boards: state.boards.map(b => {\r\n         if(b.id === action.payload.boardId) {\r\n           b.lists = b.lists.map(l => {\r\n            if(l.id === action.payload.listId) {\r\n              l.items = action.payload.newItems\r\n            }\r\n            return l\r\n           })\r\n         }\r\n         return b\r\n       })\r\n     }\r\n    case MOVE_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.firstBoardId) {\r\n            board.lists.splice(action.payload.firstIndex, 1)\r\n          }\r\n          if(board.id === action.payload.destBoardId) {\r\n            board.lists.splice(action.payload.destIndex, 0, action.payload.list)\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.boardId) {\r\n            board.lists = board.lists.filter(list => list.id !== action.payload.listId);\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case DELETE_ALL_CARDS:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items = []\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case MOVE_ALL_CARDS:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.firstListId) {\r\n                l.items = []\r\n              }\r\n              if(l.id === action.payload.destListId) {\r\n                l.items = l.items.concat(action.payload.newItems)\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items.push(action.payload.newCard);\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    \r\n    case SET_LIST_TITLE:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.boardId) {\r\n            board.lists = board.lists.map(list => {\r\n              if(list.id === action.payload.listId) {\r\n                list.title = action.payload.newTitle\r\n              }\r\n              return list\r\n            })\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case UPDATE_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.boardId) {\r\n            board.lists = board.lists.map(list => {\r\n              if(list.id === action.payload.listId) {\r\n                list.items = list.items.map(item => (\r\n                  item.id === action.payload.cardId ? action.payload.newCard : item\r\n                ))\r\n              }\r\n              return list\r\n            })\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case DELETE_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items = l.items.filter(i => i.id !== action.payload.cardId)\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case MOVE_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.destBoardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.destListId) {\r\n                l.items.splice(action.payload.destIndex, 0, action.payload.card)\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_LABELS:\r\n      return {\r\n        ...state,\r\n        labels: action.payload\r\n      }\r\n    case ADD_LABEL:\r\n      return {\r\n        ...state,\r\n        labels: [...state.labels, action.payload]\r\n      }\r\n    case UPDATE_LABEL:\r\n      return {\r\n        ...state,\r\n        labels: state.labels.map(label => {\r\n          if(label.id === action.payload.id) {\r\n            label.name = action.payload.name\r\n            label.color = action.payload.color\r\n            label.colorName = action.payload.colorName\r\n          }\r\n          return label\r\n        })\r\n      }\r\n    case DELETE_LABEL:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          b.lists = b.lists.map(l => {\r\n            l.items = l.items.map(i => {\r\n              i.labels = i.labels.filter(l => l !== action.payload)\r\n              return i\r\n            })\r\n            return l\r\n          })\r\n          return b\r\n        }),\r\n        labels: state.labels.filter(l => l.id !== action.payload)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// board state\r\nexport const DELETE_ALL_BOARDS = 'DELETE_ALL_BOARDS';\r\nexport const SET_BOARDS = 'SET_BOARDS';\r\nexport const ADD_BOARD = 'ADD_BOARD';\r\nexport const DELETE_BOARD = 'DELETE_BOARD';\r\nexport const CLEAR_BOARD = 'CLEAR_BOARD';\r\nexport const GET_BOARDS_NAMES = 'GET_BOARDS_NAMES';\r\nexport const SET_TITLE = 'SET_TITLE';\r\nexport const SET_STAR = 'SET_STAR';\r\nexport const SET_BOARD_WATCHING = 'SET_BOARD_WATCHING';\r\nexport const SET_WATCHING = 'SET_WATCHING';\r\nexport const SET_DESCRIBTION = 'SET_DESCRIBTION';\r\nexport const SET_COLOR = 'SET_COLOR';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const DELETE_LIST = 'DELETE_LIST';\r\nexport const DELETE_ALL_CARDS = 'DELETE_ALL_CARDS';\r\nexport const MOVE_ALL_CARDS = 'MOVE_ALL_CARDS';\r\nexport const SET_LIST_TITLE = 'SET_LIST_TITLE';\r\nexport const COPY_LIST = 'COPY_LIST';\r\nexport const SORT_LIST = 'SORT_LIST';\r\nexport const MOVE_LIST = 'MOVE_LIST';\r\nexport const ADD_CARD = 'ADD_CARD';\r\nexport const UPDATE_CARD = 'UPDATE_CARD';\r\nexport const DELETE_CARD = 'DELETE_CARD';\r\nexport const MOVE_CARD = 'MOVE_CARD';\r\nexport const SET_LABELS = 'SET_LABELS';\r\nexport const ADD_LABEL = 'ADD_LABEL';\r\nexport const UPDATE_LABEL = 'UPDATE_LABEL';\r\nexport const DELETE_LABEL = 'DELETE_LABEL';\r\n\r\n// alert state\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const DELETE_ALERT = 'DELETE_ALERT';\r\n\r\n// user state\r\nexport const SET_CURRENT_BOARD_ID = 'SET_CURRENT_BOARD_ID';\r\nexport const CLEAR_CURRENT_BOARD_ID = 'CLEAR_CURRENT_BOARD_ID';\r\nexport const SET_CURRENT_LIST_ID = 'SET_CURRENT_LIST_ID';\r\nexport const CLEAR_CURRENT_LIST_ID = 'CLEAR_CURRENT_LIST_ID';\r\nexport const SET_RECENT_IDS = 'SET_RECENT_IDS';\r\nexport const SET_MODAL = 'SET_MODAL';\r\nexport const SET_MODAL_TYPE = 'SET_MODAL_TYPE';\r\nexport const SET_OPTIONS_MODAL = 'SET_OPTIONS_MODAL';\r\nexport const SET_OPTIONS_MODAL_TYPE = 'SET_OPTIONS_MODAL_TYPE';\r\nexport const SET_FAST_EDIT_MODAL_POS = 'SET_FAST_EDIT_MODAL_POS';\r\nexport const SET_CURRENT_CARD = 'SET_CURRENT_CARD';\r\nexport const CLEAR_CURRENT_CARD = 'CLEAR_CURRENT_CARD';\r\nexport const SET_MOUSE_POS = 'S`ET_MOUSE_POS';\r\nexport const SET_BIG_LABELS = 'SET_BIG_LABELS';\r\nexport const SET_OPTIONS_MODAL_STEP = 'SET_OPTIONS_MODAL_STEP';\r\nexport const SET_OPTIONS_MODAL_STEP_TYPE = 'SET_OPTIONS_MODAL_STEP_TYPE';\r\nexport const SET_OPTIONS_MODAL_STEP_DATA = 'SET_OPTIONS_MODAL_STEP_DATA';\r\nexport const SET_DATA = 'SET_DATA';\r\nexport const SET_SHOW_MENU = 'SET_SHOW_MENU';\r\nexport const TOGGLE_SHOW_BOARDS = 'TOGGLE_SHOW_BOARDS';\r\nexport const TOGGLE_KEEP_BOARDS = 'TOGGLE_KEEP_BOARDS';\r\n\r\n// \r\nexport const TEST = 'TEST';\r\n","import React, { useReducer } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport BoardContext from './boardContext';\r\nimport boardReducer from './boardReducer';\r\nimport {\r\n  DELETE_ALL_BOARDS,\r\n  SET_BOARDS,\r\n  ADD_BOARD,\r\n  DELETE_BOARD,\r\n  CLEAR_BOARD,\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_BOARD_WATCHING,\r\n  SET_WATCHING,\r\n  SET_DESCRIBTION,\r\n  SET_COLOR,\r\n  ADD_LIST,\r\n  DELETE_LIST,\r\n  DELETE_ALL_CARDS,\r\n  MOVE_ALL_CARDS,\r\n  SET_LIST_TITLE,\r\n  COPY_LIST,\r\n  SORT_LIST,\r\n  MOVE_LIST,\r\n  ADD_CARD,\r\n  UPDATE_CARD,\r\n  DELETE_CARD,\r\n  MOVE_CARD,\r\n  SET_LABELS,\r\n  ADD_LABEL,\r\n  UPDATE_LABEL,\r\n  DELETE_LABEL,\r\n} from '../types';\r\n\r\nconst BoardState = props => {\r\n  const initialState = {\r\n    boards: [],\r\n    labels: [\r\n      {\r\n        id: 1,\r\n        color: '#61bd4f',\r\n        colorName: 'green',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 2,\r\n        color: '#f2d600',\r\n        colorName: 'yellow',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 3,\r\n        color: '#ff9f1a',\r\n        colorName: 'orange',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 4,\r\n        color: '#eb5a46',\r\n        colorName: 'red',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 5,\r\n        color: '#c377e0',\r\n        colorName: 'purple',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 6,\r\n        color: '#0079bf',\r\n        colorName: 'blue',\r\n        name: ''\r\n      }\r\n    ],\r\n    // this color is for boards\r\n    boardColors: [\r\n      '#0079bf',\r\n      '#d29034',\r\n      '#519839',\r\n      '#b04632',\r\n      '#89609e',\r\n      '#cd5a91',\r\n      '#4bbf6b',\r\n      '#00aecc',\r\n      '#838c91'\r\n    ],\r\n    // this color is fr labels\r\n    colors: [\r\n      {\r\n        name: 'green',\r\n        color: '#61bd4f'\r\n      },\r\n      {\r\n        name: 'yellow',\r\n        color: '#f2d600'\r\n      },\r\n      {\r\n        name: 'orange',\r\n        color: '#ff9f1a'\r\n      },\r\n      {\r\n        name: 'red',\r\n        color: '#eb5a46'\r\n      },\r\n      {\r\n        name: 'purple',\r\n        color: '#c377e0'\r\n      },\r\n      {\r\n        name: 'blue',\r\n        color: '#0079bf'\r\n      },\r\n      {\r\n        name: 'sky',\r\n        color: '#00c2e0'\r\n      },\r\n      {\r\n        name: 'lime',\r\n        color: '#51e898'\r\n      },\r\n      {\r\n        name: 'pink',\r\n        color: '#ff78cb'\r\n      },\r\n      {\r\n        name: 'black',\r\n        color: '#344563'\r\n      }\r\n    ]\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(boardReducer, initialState);\r\n\r\n  // Get data from local storage\r\n  const getBoardsData = () => {\r\n    const boards = JSON.parse(localStorage.getItem('boards'));\r\n    const labels = JSON.parse(localStorage.getItem('labels'));\r\n\r\n    if(boards) {\r\n      dispatch({\r\n        type: SET_BOARDS,\r\n        payload: boards\r\n      });\r\n    }\r\n    if(labels) {\r\n      dispatch({\r\n        type: SET_LABELS,\r\n        payload: labels\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteAllBoards = () => {\r\n    dispatch({\r\n      type: DELETE_ALL_BOARDS\r\n    });\r\n  }\r\n\r\n  const addBoard = (title, color, id) => {\r\n    const newBaord = {\r\n      title,\r\n      id,\r\n      color,\r\n      starred: false,\r\n      watching: false,\r\n      describtion: '',\r\n      lists: []\r\n    }\r\n    dispatch({\r\n      type: ADD_BOARD,\r\n      payload: newBaord\r\n    });\r\n  }\r\n\r\n  const deleteBoard = (id) => {\r\n    dispatch({\r\n      type: DELETE_BOARD,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  // send a single board to board page (returns an array with one object)\r\n  const getBoard = (id) => {\r\n    const board = state.boards.filter(b => b.id === id);\r\n\r\n    return board[0]\r\n  }\r\n\r\n  const clearBoard = (id) => {\r\n    dispatch({\r\n      type: CLEAR_BOARD,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  const setBoardWatching = (id) => {\r\n    dispatch({\r\n      type: SET_BOARD_WATCHING,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  const getList = (boardId, ListId) => {\r\n    const board = state.boards.filter(b => b.id === boardId)[0];\r\n\r\n    const list = board.lists.filter(l => l.id === ListId)[0];\r\n\r\n    return list\r\n  }\r\n\r\n  // set board title\r\n  const setTitle = (text, id) => {\r\n    dispatch({\r\n      type: SET_TITLE,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board starred or unstarred\r\n  const setStar = (id) => {\r\n    dispatch({\r\n      type: SET_STAR,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  // set watching for a list\r\n  const setWatching = (boardId, listId) => {\r\n    dispatch({\r\n      type: SET_WATCHING,\r\n      payload: {\r\n        boardId,\r\n        listId\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board describtion\r\n  const setDescribtion = (text, id) => {\r\n    dispatch({\r\n      type: SET_DESCRIBTION,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board color\r\n  const setColor = (color, id) => {\r\n    dispatch({\r\n      type: SET_COLOR,\r\n      payload: {\r\n        id,\r\n        color\r\n      }\r\n    });\r\n  }\r\n\r\n  // add List to board\r\n  const addList = (text, boardId) => {\r\n    const newList = {\r\n      title: text,\r\n      id: uniqid(),\r\n      boardId,\r\n      watching: false,\r\n      items: []\r\n    }\r\n    dispatch({\r\n      type: ADD_LIST,\r\n      payload: {\r\n        id: boardId,\r\n        newList\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteList = (boardId, listId) => {\r\n    dispatch({\r\n      type: DELETE_LIST,\r\n      payload: {\r\n        boardId,\r\n        listId\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteAllCards = (boardId, listId) => {\r\n    dispatch({\r\n      type: DELETE_ALL_CARDS,\r\n      payload: {\r\n        boardId,\r\n        listId\r\n      }\r\n    });\r\n  }\r\n\r\n  const moveAllCards = (boardId, firstListId, destListId) => {\r\n    let newItems = [];\r\n\r\n    getList(boardId, firstListId).items.forEach(item => {\r\n      newItems.push(item);\r\n    });\r\n\r\n    // make newItems equal to an array of items with new ids\r\n    newItems = newItems.map(i => {\r\n      return {\r\n        ...i,\r\n        id: uniqid(),\r\n        listId: destListId\r\n      }\r\n    })\r\n\r\n    dispatch({\r\n      type: MOVE_ALL_CARDS,\r\n      payload: {\r\n        boardId,\r\n        firstListId,\r\n        destListId,\r\n        newItems\r\n      }\r\n    });\r\n  }\r\n\r\n  const setListTitle = (boardId, listId, newTitle) => {\r\n    dispatch({\r\n      type: SET_LIST_TITLE,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        newTitle\r\n      }\r\n    });\r\n  }\r\n\r\n  const copyList = (boardId, listId, title) => {\r\n    let theList;\r\n\r\n    state.boards.forEach(b => b.id === boardId && b.lists.forEach(l => {\r\n      if(l.id === listId) {\r\n        theList = l\r\n      }\r\n    }))\r\n    \r\n    const newList = {\r\n      ...theList,\r\n      title,\r\n      id: uniqid()\r\n    }\r\n\r\n    dispatch({\r\n      type: COPY_LIST,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        newList\r\n      }\r\n    });\r\n  }\r\n\r\n  const sortList = (boardId, listId) => {\r\n    const newItems = getList(boardId, listId).items;\r\n\r\n    newItems.sort((a, b) => a.text < b.text ? -1 : a.text > b.text ? 1 : 0);\r\n\r\n    dispatch({\r\n      type: SORT_LIST,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        newItems\r\n      }\r\n    });\r\n  }\r\n\r\n  // takes in four prams: (first board id, first list id, destination board id, destionation index)\r\n  const moveList = (firstBoardId, firstListId, destBoardId, destIndex) => {\r\n    const firstIndex = getBoard(firstBoardId).lists.findIndex(l => l.id === firstListId);\r\n\r\n    const list = getList(firstBoardId, firstListId);\r\n\r\n    const newList = {\r\n      ...list,\r\n      boardId: destBoardId,\r\n    }\r\n\r\n    dispatch({\r\n      type: MOVE_LIST,\r\n      payload: {\r\n        firstBoardId,\r\n        firstIndex,\r\n        destBoardId,\r\n        destIndex,\r\n        list: newList\r\n      }\r\n    });\r\n  }\r\n\r\n  // add card to list\r\n  const addCard = (text, listId, boardId) => {\r\n    const newCard = {\r\n      text,\r\n      id: uniqid(),\r\n      listId,\r\n      boardId,\r\n      desc: '',\r\n      watching: false,\r\n      labels: [],\r\n      checklists: [],\r\n    }\r\n    dispatch({\r\n      type: ADD_CARD,\r\n      payload: {\r\n        newCard,\r\n        listId,\r\n        boardId\r\n      }\r\n    });\r\n  }\r\n\r\n  // update card\r\n  const updateCard = (boardId, listId, cardId, newCard) => {\r\n    dispatch({\r\n      type: UPDATE_CARD,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        cardId,\r\n        newCard\r\n      }\r\n    })\r\n  }\r\n\r\n  const deleteCard = (boardId, listId, cardId) => {\r\n    dispatch({\r\n      type: DELETE_CARD,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        cardId\r\n      }\r\n    });\r\n  }\r\n\r\n  const moveCard = (firstBoardId,firstListId,cardId,destBoardId,destListId,destIndex,card, isCopy) => {\r\n    // isCopy Argument is here because i use same functions for copy and move a card\r\n    // in case of copy we shouldent delete first card\r\n\r\n    !isCopy && deleteCard(firstBoardId, firstListId, cardId);\r\n\r\n    const cardWithNewId = {\r\n      ...card,\r\n      id: uniqid(),\r\n      boardId: destBoardId,\r\n      listId: destListId,\r\n    }\r\n\r\n    dispatch({\r\n      type: MOVE_CARD,\r\n      payload: {\r\n        destBoardId,\r\n        destListId,\r\n        destIndex,\r\n        card: cardWithNewId\r\n      }\r\n    });\r\n  }\r\n\r\n  const addLabel = (name, colorName, id) => {\r\n    let is = false;\r\n    const newLabel = {\r\n      id,\r\n      colorName,\r\n      name,\r\n      color: state.colors.filter(c => c.name === colorName)[0].color\r\n    };\r\n\r\n    state.labels.forEach(label => {\r\n      if(label.colorName === colorName) {\r\n        if(label.name === name) {\r\n          is = true\r\n        }\r\n      }\r\n    });\r\n\r\n    if(!is) {\r\n      dispatch({\r\n        type : ADD_LABEL,\r\n        payload: newLabel\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateLabel = (name, colorName, id) => {\r\n    dispatch({\r\n      type: UPDATE_LABEL,\r\n      payload: {\r\n        name,\r\n        colorName,\r\n        color: state.colors.filter(c => c.name === colorName)[0].color,\r\n        id\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteLabel = (id) => {\r\n    dispatch({\r\n      type: DELETE_LABEL,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <BoardContext.Provider\r\n      value={{\r\n        boards: state.boards,\r\n        labels: state.labels,\r\n        colors: state.colors,\r\n        boardColors: state.boardColors,\r\n        getBoardsData,\r\n        deleteAllBoards,\r\n        addBoard,\r\n        deleteBoard,\r\n        getBoard,\r\n        clearBoard,\r\n        getList,\r\n        setTitle,\r\n        setStar,\r\n        setBoardWatching,\r\n        setWatching,\r\n        setDescribtion,\r\n        setColor,\r\n        addList,\r\n        deleteList,\r\n        deleteAllCards,\r\n        moveAllCards,\r\n        setListTitle,\r\n        copyList,\r\n        sortList,\r\n        moveList,\r\n        addCard,\r\n        updateCard,\r\n        deleteCard,\r\n        moveCard,\r\n        addLabel,\r\n        updateLabel,\r\n        deleteLabel,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BoardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BoardState;","import { \r\n  SET_ALERT,\r\n  DELETE_ALERT\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: [action.payload]\r\n      }\r\n    case DELETE_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: state.alerts.filter(a => a.id !== action.payload)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport AlertContext from './alertContext';\r\nimport alertReducer from './alertReducer';\r\nimport { \r\n  SET_ALERT,\r\n  DELETE_ALERT\r\n} from '../types';\r\n\r\nconst AlertState = props => {\r\n  const initialState = {\r\n    alerts: []\r\n    };\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n  // Get data\r\n  const setAlert = (msg, type, time) => {\r\n    const listOfMsgs = state.alerts.map(a => a.msg);\r\n    if(listOfMsgs.indexOf(msg) === -1) {\r\n      const newAlert = {\r\n        msg,\r\n        id: uniqid(),\r\n        type,\r\n      }\r\n\r\n      dispatch({\r\n        type: SET_ALERT,\r\n        payload: newAlert\r\n      });\r\n\r\n      setTimeout(() => {\r\n        deleteAlert(newAlert.id);\r\n      }, time ? time : 3000);\r\n    }\r\n  };\r\n\r\n  const deleteAlert = (id) => {\r\n    dispatch({\r\n      type: DELETE_ALERT,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alerts: state.alerts,\r\n        setAlert,\r\n        deleteAlert\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;","import { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_CURRENT_LIST_ID,\r\n  CLEAR_CURRENT_LIST_ID,\r\n  SET_CURRENT_CARD,\r\n  CLEAR_CURRENT_CARD,\r\n  SET_RECENT_IDS,\r\n  SET_MODAL,\r\n  SET_MODAL_TYPE,\r\n  SET_OPTIONS_MODAL,\r\n  SET_OPTIONS_MODAL_TYPE,\r\n  SET_FAST_EDIT_MODAL_POS,\r\n  SET_MOUSE_POS,\r\n  SET_BIG_LABELS,\r\n  SET_OPTIONS_MODAL_STEP,\r\n  SET_OPTIONS_MODAL_STEP_TYPE,\r\n  SET_OPTIONS_MODAL_STEP_DATA,\r\n  SET_DATA,\r\n  SET_SHOW_MENU,\r\n  TOGGLE_SHOW_BOARDS,\r\n  TOGGLE_KEEP_BOARDS,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_BOARD_ID:\r\n     return {\r\n       ...state,\r\n       currentBoardId: action.payload\r\n     }\r\n    case CLEAR_CURRENT_BOARD_ID:\r\n      return {\r\n        ...state,\r\n        currentBoardId: null\r\n      }\r\n    case SET_CURRENT_LIST_ID:\r\n      return {\r\n        ...state,\r\n        currentListId: action.payload\r\n      }\r\n    case CLEAR_CURRENT_LIST_ID:\r\n      return {\r\n        ...state,\r\n        currentListId: null\r\n      }\r\n    case SET_CURRENT_CARD:\r\n      return {\r\n        ...state,\r\n        currentCard: action.payload\r\n      }\r\n    case CLEAR_CURRENT_CARD:\r\n      return {\r\n        ...state,\r\n        currentCard: null\r\n      }\r\n    case SET_RECENT_IDS:\r\n      return {\r\n        ...state,\r\n        recentIds: action.payload\r\n      }\r\n    case SET_MODAL:\r\n      return {\r\n        ...state,\r\n        modalStatus: action.payload\r\n      }\r\n    case SET_MODAL_TYPE:\r\n      return {\r\n        ...state,\r\n        modalType: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL:\r\n      return {\r\n        ...state,\r\n        optionsModalStatus: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_TYPE:\r\n      return {\r\n        ...state,\r\n        optionsModalType: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_STEP:\r\n      return {\r\n        ...state,\r\n        optionsModalStepStatus: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_STEP_TYPE:\r\n      return {\r\n        ...state,\r\n        optionsModalStepType: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_STEP_DATA:\r\n      return {\r\n        ...state,\r\n        optionsModalStepData: action.payload\r\n      }\r\n    case SET_FAST_EDIT_MODAL_POS:\r\n      return {\r\n        ...state,\r\n        fastEditModalPos: action.payload\r\n      }\r\n    case SET_MOUSE_POS:\r\n      return {\r\n        ...state,\r\n        mousePos: action.payload  \r\n      }\r\n    case SET_BIG_LABELS:\r\n      return {\r\n        ...state,\r\n        bigLabels: action.payload\r\n      }\r\n    case 'setAddCardFromListActions':\r\n      return {\r\n        ...state,\r\n        addCardFromListActions: action.payload\r\n      }\r\n    case SET_DATA:\r\n      return {\r\n        ...state,\r\n        data: action.payload\r\n      }\r\n    case SET_SHOW_MENU:\r\n      return {\r\n        ...state,\r\n        showMenu: action.payload\r\n      }\r\n    case TOGGLE_KEEP_BOARDS:\r\n      return {\r\n        ...state,\r\n        keepBoardsList: !state.keepBoardsList\r\n      }\r\n    case TOGGLE_SHOW_BOARDS:\r\n      return {\r\n        ...state,\r\n        showBoardsList: !state.showBoardsList\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer } from 'react';\r\nimport UserContext from './userContext';\r\nimport userReducer from './userReducer';\r\nimport { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_CURRENT_LIST_ID,\r\n  CLEAR_CURRENT_LIST_ID,\r\n  SET_CURRENT_CARD,\r\n  CLEAR_CURRENT_CARD,\r\n  SET_RECENT_IDS,\r\n  SET_MODAL,\r\n  SET_MODAL_TYPE,\r\n  SET_OPTIONS_MODAL,\r\n  SET_OPTIONS_MODAL_TYPE,\r\n  SET_OPTIONS_MODAL_STEP,\r\n  SET_OPTIONS_MODAL_STEP_TYPE,\r\n  SET_OPTIONS_MODAL_STEP_DATA,\r\n  SET_FAST_EDIT_MODAL_POS,\r\n  SET_MOUSE_POS,\r\n  SET_BIG_LABELS,\r\n  SET_DATA,\r\n  SET_SHOW_MENU,\r\n  TOGGLE_SHOW_BOARDS, \r\n  TOGGLE_KEEP_BOARDS, \r\n} from '../types';\r\n\r\nconst UserState = props => {\r\n  const initialState = {\r\n    currentBoardId: null,\r\n    currentListId: null,\r\n    currentCard: null,\r\n    recentIds: [],\r\n    ModalStatus: 'off',\r\n    modalType: null,\r\n    optionsModalStatus: 'off',\r\n    optionsModaltype: null,\r\n    optionsModalStepStatus: 'off',\r\n    optionsModalStepType: null,\r\n    optionsModalStepData: null,\r\n    fastEditModalPos: null,\r\n    mosuePos: {},\r\n    bigLabels: false,\r\n    addCardFromListActions: null,\r\n    data: null,\r\n    showMenu: false,\r\n    showBoardsList: false,\r\n    keepBoardsList: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(userReducer, initialState);\r\n\r\n  const getUserdata = () => {\r\n    const bigLabels = JSON.parse(localStorage.getItem('bigLabels'));\r\n    const recentIds = JSON.parse(localStorage.getItem('recentIds'));\r\n\r\n    if(bigLabels) {\r\n      dispatch({\r\n        type: SET_BIG_LABELS,\r\n        payload: bigLabels\r\n      });\r\n    }\r\n    if(recentIds) {\r\n      dispatch({\r\n        type: SET_RECENT_IDS,\r\n        payload: recentIds\r\n      });\r\n    }\r\n  }\r\n\r\n  const setCurrentBoardId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_BOARD_ID,\r\n      payload: id\r\n    });\r\n    setRecentBaord(id);\r\n  }\r\n\r\n  // set new board to recent\r\n  const setRecentBaord = (id) => {\r\n    const newRecentIds = state.recentIds;\r\n    if(newRecentIds.length === 6 && id !== null) {\r\n      newRecentIds.shift();\r\n      newRecentIds.push(id);\r\n    } else if(id !== null) {\r\n      newRecentIds.push(id);\r\n    }\r\n    dispatch({\r\n      type: SET_RECENT_IDS,\r\n      payload: newRecentIds\r\n    });\r\n\r\n    // set recents to local storage\r\n    localStorage.setItem('recentIds', JSON.stringify(newRecentIds))\r\n  }\r\n\r\n  const deleteFromRecent = (id) => {\r\n    const newRecentIds = state.recentIds.filter(i => i !== id);\r\n\r\n    dispatch({\r\n      type: SET_RECENT_IDS,\r\n      payload: newRecentIds\r\n    });\r\n\r\n    // set recents to local storage\r\n    localStorage.setItem('recentIds', JSON.stringify(newRecentIds))\r\n  }\r\n\r\n  const clearRecent = () => {\r\n    dispatch({\r\n      type: SET_RECENT_IDS,\r\n      payload: []\r\n    });\r\n\r\n    localStorage.setItem('recentIds', '[]')\r\n  }\r\n\r\n  // also can be done with \"setCurrentBoardId(null)\"\r\n  const clearCurrentBoardId = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_BOARD_ID\r\n    });\r\n    setShowMenu('there is a command');\r\n  }\r\n\r\n  const setCurrentListId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_LIST_ID,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  const clearCurrentListId = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_LIST_ID\r\n    });\r\n  }\r\n\r\n  const setCurrentCard = (card) => {\r\n    dispatch({\r\n      type: SET_CURRENT_CARD,\r\n      payload: card\r\n    });\r\n  }\r\n\r\n  const clearCurrentCard = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_CARD\r\n    });\r\n  }\r\n\r\n  const setModal = (status, type) => {\r\n    dispatch({\r\n      type: SET_MODAL,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearModalType();\r\n\r\n    } else if(status === 'on') {\r\n      setModalType(type);\r\n    }\r\n  }\r\n\r\n  const setModalType = (type) => {\r\n    dispatch({\r\n      type: SET_MODAL_TYPE,\r\n      payload: type\r\n    });\r\n  }\r\n\r\n  const clearModalType = () => {\r\n    dispatch({\r\n      type: SET_MODAL_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setOptionsModal = (status, type) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearOptionsModalType();\r\n      setOptionsModalStep('off');\r\n      setData(null);\r\n    } else if(status === 'on') {\r\n      setOptionsModalType(type);\r\n    }\r\n  }\r\n\r\n  const setOptionsModalType = (type) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_TYPE,\r\n      payload: type\r\n    });\r\n  }\r\n\r\n  const clearOptionsModalType = () => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  // two prams 1. has step or not (on or off) 2. the last step\r\n  const setOptionsModalStep = (status, step, data) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearOptionsModalStepType();\r\n    } else if(status === 'on') {\r\n      setOptionsModalStepType(step);\r\n    }\r\n    if(data) {\r\n      setOptionsModalStepData(data);\r\n    } else {\r\n      clearOptionsModalStepData();\r\n    }\r\n  }\r\n\r\n  const setOptionsModalStepData = (data) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_DATA,\r\n      payload: data\r\n    });\r\n  }\r\n\r\n  const clearOptionsModalStepData = () => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_DATA,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setOptionsModalStepType = (step) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_TYPE,\r\n      payload: step\r\n    });\r\n  }\r\n\r\n  const clearOptionsModalStepType = () => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setFastEditModalPos = (pos) => {\r\n    dispatch({\r\n      type: SET_FAST_EDIT_MODAL_POS,\r\n      payload: pos\r\n    });\r\n  }\r\n\r\n  const setMousePos = (x, y) => {\r\n    dispatch({\r\n      type: SET_MOUSE_POS,\r\n      payload: {x, y}\r\n    });\r\n  }\r\n\r\n  const toggleBigLabels = () => {\r\n    dispatch({\r\n      type: SET_BIG_LABELS,\r\n      payload: !state.bigLabels\r\n    });\r\n  }\r\n\r\n  //  add card will be addeed to the list with the id that its passed in\r\n  const setAddCardFromListActions = (id) => {\r\n    dispatch({\r\n      type: 'setAddCardFromListActions',\r\n      payload: id\r\n    });\r\n  }\r\n  \r\n  const setData = (data) => {\r\n    if(data) {\r\n      dispatch({\r\n        type: SET_DATA,\r\n        payload: data\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_DATA,\r\n        payload: null\r\n      });\r\n    }\r\n  }\r\n\r\n  const setShowMenu = (command) => {\r\n    if(command) {\r\n      dispatch({\r\n        type: SET_SHOW_MENU,\r\n        payload: false\r\n      }); \r\n    } else {\r\n      dispatch({\r\n        type: SET_SHOW_MENU,\r\n        payload: !state.showMenu\r\n      });\r\n    }\r\n  }\r\n\r\n  const toggleKeepBoardsList = () => {\r\n    dispatch({\r\n      type: TOGGLE_KEEP_BOARDS\r\n    });\r\n  }\r\n\r\n  const toggleShowBoardsList = () => {\r\n    dispatch({\r\n      type: TOGGLE_SHOW_BOARDS\r\n    });\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        currentBoardId: state.currentBoardId,\r\n        currentListId: state.currentListId,\r\n        currentCard: state.currentCard,\r\n        recentIds: state.recentIds,\r\n        modalStatus: state.modalStatus,\r\n        modalType: state.modalType,\r\n        optionsModalStatus: state.optionsModalStatus,\r\n        optionsModalType: state.optionsModalType,\r\n        optionsModalStepStatus: state.optionsModalStepStatus,\r\n        optionsModalStepType: state.optionsModalStepType,\r\n        optionsModalStepData: state.optionsModalStepData,\r\n        fastEditModalPos: state.fastEditModalPos,\r\n        mousePos: state.mousePos,\r\n        bigLabels: state.bigLabels,\r\n        addCardFromListActions: state.addCardFromListActions,\r\n        data: state.data,\r\n        showMenu: state.showMenu,\r\n        showBoardsList: state.showBoardsList,\r\n        keepBoardsList: state.keepBoardsList,\r\n        getUserdata,\r\n        setCurrentBoardId,\r\n        clearCurrentBoardId,\r\n        setCurrentListId,\r\n        clearCurrentListId,\r\n        setCurrentCard,\r\n        clearCurrentCard,\r\n        setModal,\r\n        setOptionsModal,\r\n        setOptionsModalStep,\r\n        setFastEditModalPos,\r\n        setMousePos,\r\n        toggleBigLabels,\r\n        setAddCardFromListActions,\r\n        setData,\r\n        setShowMenu,\r\n        deleteFromRecent,\r\n        clearRecent,\r\n        toggleKeepBoardsList,\r\n        toggleShowBoardsList,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport BoardState from './context/board/BoardState';\nimport AlertState from './context/alert/AlertState';\nimport UserState from './context/user/UserState';\n\nconst StateContainer = () => {\n  return (\n    <BoardState>\n      <AlertState>\n        <UserState>\n          <App />\n        </UserState>\n      </AlertState>\n    </BoardState>\n  );\n}\n\nReactDOM.render(<StateContainer />, document.getElementById('root'));"],"sourceRoot":""}