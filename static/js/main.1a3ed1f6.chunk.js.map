{"version":3,"sources":["context/user/userContext.js","components/layout/Navbar.js","components/pages/home/SideListItem.js","context/board/boardContext.js","components/pages/home/HomeSideList.js","components/pages/home/Recent.js","components/pages/home/HomeMainItem.js","components/pages/home/Starred.js","components/pages/home/HomeMain.js","components/pages/home/Home.js","components/pages/board/BoardTitle.js","components/pages/board/BoardNavbar.js","components/pages/board/BoardListItem.js","components/pages/board/BoardList.js","components/pages/board/BoardMain.js","components/pages/board/Board.js","App.js","context/board/boardReducer.js","context/types.js","context/board/BoardState.js","context/alert/alertContext.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/user/userReducer.js","context/user/UserState.js","index.js"],"names":["UserContext","createContext","Navbar","clearCurrentBoardId","useContext","className","onClick","type","id","SideListItem","board","setCurrentBoardId","useState","isHover","setIsHover","hoverStyle","background","color","opacity","onMouseEnter","onMouseLeave","style","title","BoardContext","HomeSideList","boards","map","b","key","Recent","HomeMainItem","itemStyle","Starred","getStarredBoards","length","s","HomeMain","Home","BoardTitle","setTitle","currentBoardId","text","setText","isSettingTitle","setIsSettingTitle","onBlur","console","log","onChange","e","target","value","onKeyUp","keyCode","BoardNavbar","setStar","setDescription","descText","setDescText","isSettingDesc","setIsSettingDesc","onSetDesc","starred","description","document","querySelector","focus","BoardListItem","item","BoardList","list","boardFuncs","wantToAddCard","setWantToAddCard","newCardText","setNewCardText","addCard","cancelAddCard","items","i","index","placeholder","setTimeout","BoardMain","lists","l","Board","setBoard","userContext","boardContext","getBoard","useEffect","App","state","action","baords","payload","boardId","listId","push","newCard","BoardState","props","initialState","uuid","v4","labels","listOfStarredBoardsIds","useReducer","boardReducer","dispatch","Provider","getBoardsNames","filter","newListOfStarredBoardsIds","indexOf","children","AlertContext","test","AlertState","alertReducer","getData","UserState","userReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1a3ed1f6.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nconst Navbar = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { clearCurrentBoardId } = userContext;\r\n\r\n  const homeClick =() => {\r\n    clearCurrentBoardId();\r\n  }\r\n\r\n  return (\r\n    <div className=\"trello-navbar\">\r\n      <div>\r\n        <div className=\"btn btn-square btn-primary rounded-lg\" onClick={homeClick}>\r\n          <i className=\"fa fa-home\"></i>\r\n        </div>\r\n        <div className=\"btn btn-narrow btn-primary rounded-lg\">\r\n          <i className=\"mr-1 fa fa-notes-medical\"></i>\r\n          boards\r\n        </div>\r\n        <div className=\"d-i-b rounded-lg\">\r\n          <input type=\"text\" className=\"m-0 bg-primary border-0 rounded-lg\" id=\"search-input\"/>\r\n        </div>\r\n      </div>\r\n      <div className=\"mr-5\">\r\n        <div className=\"text-white text-bold cursor-p\">trello clone</div>\r\n      </div>\r\n      <div>\r\n        <div className=\"btn btn-square btn-primary rounded-lg\">\r\n          <i className=\"fa fa-plus\"></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst SideListItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n\r\n  const [isHover, setIsHover] = useState(false);\r\n\r\n  const hoverStyle = isHover ? {\r\n    background: board.color,\r\n    color: '#f4f4f4',\r\n    opacity: '0.7'\r\n  } : {\r\n    opacity: '1'\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    setIsHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setIsHover(false);\r\n  }\r\n\r\n  const onClick = () => {\r\n    setCurrentBoardId(board.id)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      onClick={onClick}\r\n      className=\"card pl-1 cursor-p p border-0 rounded-lg text-dark transition text-bold\"\r\n      style={hoverStyle}\r\n      >\r\n      {board.title}\r\n      { <i className=\"fa fa-check m-0 float-right\"></i> }\r\n    </div> \r\n  );\r\n};\r\n\r\nexport default SideListItem","import { createContext } from 'react';\r\n\r\nconst BoardContext = createContext();\r\n\r\nexport default BoardContext;\r\n","import React, { useContext } from 'react';\r\nimport SideListItem from './SideListItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst HomeSideList = () => {\r\n  const { boards } = useContext(BoardContext);\r\n\r\n  return (\r\n    <aside>\r\n      <button className=\"btn btn-block btn-primary text-left rounded-lg\">\r\n        <i className=\"fa fa-notes-medical mr-1\"></i>\r\n        <div className=\"text-bold d-i-b\">Boards</div>\r\n      </button>\r\n      { boards.map(b => (\r\n        <SideListItem key={b.id} board={b} />\r\n      )) }\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default HomeSideList\r\n","import React, { Fragment } from 'react'\r\n\r\nconst Recent = () => {\r\n  return (\r\n    <Fragment>\r\n      <i className=\"fa fa-clock mr-1\"></i>\r\n      recent\r\n      <div>\r\n        ( to be Done... )\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Recent\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst HomeMainItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n\r\n  const itemStyle = {\r\n    background: board.color\r\n  }\r\n\r\n  const onClick = () => {\r\n    setCurrentBoardId(board.id);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='trello-home-main-item mt-1 mr-1'\r\n      style={itemStyle}\r\n      onClick={onClick}>\r\n        {board.title}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeMainItem\r\n","import React, { Fragment, useContext } from 'react';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Starred = () => {\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { getStarredBoards } = boardContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      { getStarredBoards().length !== 0\r\n        &&  <div className=\"card border-top-0 border-right-0 border-left-0 pb-2\">\r\n              <i className=\"fa fa-star mr-1\"></i>\r\n              favorite borads\r\n              <div className=\"\">\r\n                { getStarredBoards().map(s => (\r\n                      <HomeMainItem key={s.id} board={s} />\r\n                    ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Starred\r\n","import React from 'react';\r\nimport Recent from './Recent';\r\nimport Starred from './Starred';\r\nimport AddBoard from '../../boards/AddBoard';\r\n\r\nconst HomeMain = () => {\r\n  return (\r\n    <main className=\"text-bold\">\r\n      <div className=\"card border-top-0 border-right-0 border-left-0 pb-2\">\r\n        <Recent />\r\n      </div>\r\n      <Starred />\r\n      <div className=\"card border-0\">\r\n        <div className=\"trello-home-main-item hover\">\r\n          {/* <AddBoard /> */}\r\n          Add Board\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default HomeMain\r\n","import React from 'react';\r\nimport HomeSideList from './HomeSideList';\r\nimport HomeMain from './HomeMain';\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container grid-1-3 mt-3\">\r\n      <HomeSideList />\r\n      <HomeMain />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst BoardTitle = ({ title, setTitle }) => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n\r\n  const [text, setText] = useState('');\r\n  const [isSettingTitle, setIsSettingTitle] = useState(false);\r\n\r\n  const onClick = () => {\r\n    setIsSettingTitle(true);\r\n    setText(title);\r\n    console.log('text filed must be filled with title')\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    if(text !== '') {\r\n      setTitle(text, currentBoardId);\r\n      setIsSettingTitle(false);\r\n    } else {\r\n      setIsSettingTitle(false);\r\n    }\r\n    console.log('id must be setted ( from user State )')\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onBlur();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-i-b\">\r\n      <div\r\n        className={`btn btn-primary btn-narrow m-0 ${isSettingTitle && 'd-n'}`}\r\n        onClick={onClick}>\r\n        { title }\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        className={`m-0 rounded ${!isSettingTitle && 'd-n'}`}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        onKeyUp={onKeyUp}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardTitle\r\n","import React, { useState } from 'react';\r\nimport BoardTitle from './BoardTitle';\r\n\r\nconst BoardNavbar = ({ board, setStar, setDescription, setTitle }) => {\r\n  const [descText, setDescText] = useState('');\r\n  const [isSettingDesc, setIsSettingDesc] = useState(false);\r\n  \r\n  const onStarClick = () => {\r\n    setStar(board.id);\r\n  }\r\n\r\n  const onDescClick =() => {\r\n    setIsSettingDesc(true);\r\n    setDescText(board.description);\r\n    document.querySelector('#description-input').focus();\r\n  }\r\n\r\n  const onDescTextChange = (e) => {\r\n    e.target.value.length < 51 && setDescText(e.target.value);\r\n    console.log('set alert for maximum length')\r\n  }\r\n\r\n  const onSetDesc = () => {\r\n    setDescription(descText, board.id);\r\n    setIsSettingDesc(false);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetDesc();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-navbar trello-navbar lighten-20'>\r\n      <div className='card border-0 m-0 p-0'>\r\n        { board && <BoardTitle title={board.title} setTitle={setTitle} /> }\r\n        <div className='btn btn-primary btn-square rounded-lg lighten-20 ml-1' onClick={onStarClick}>\r\n          <i className={`fa-star ${board && board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n        <div className='ml-1 d-i-b text-white'>\r\n          { \r\n            board\r\n            && !isSettingDesc\r\n              && (board.description ? board.description : 'no description')\r\n          }\r\n        <input\r\n          type='text'\r\n          id='description-input'\r\n          className={`m-0 rounded ${!isSettingDesc && 'd-n'}`}\r\n          value={descText}\r\n          onChange={onDescTextChange}\r\n          onBlur={onSetDesc}\r\n          onKeyUp={onKeyUp} />\r\n        </div>\r\n        <div className='btn btn-primary btn-square rounded-lg lighten-20 ml-1' onClick={onDescClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardNavbar\r\n","import React from 'react'\r\n\r\nconst BoardListItem = ({ item }) => {\r\n  return (\r\n    <div className=\"trello-board-list-item\">\r\n      { item.text }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardListItem\r\n","import React, { Fragment, useState } from 'react';\r\nimport BoardListItem from './BoardListItem';\r\n\r\nconst BoardList = ({ list, boardFuncs /* all of board context */ }) => {\r\n  const [wantToAddCard, setWantToAddCard] = useState(false);\r\n  const [newCardText, setNewCardText] = useState('');\r\n\r\n  const onAddCardClick = () => {\r\n    setWantToAddCard(true);\r\n    setTimeout(() => {\r\n      document.querySelector('#card-compose-textarea').focus();\r\n    }, 100);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setNewCardText(e.target.value);\r\n  }\r\n\r\n  const onTextareaBlur = () => {\r\n    if(newCardText !== '') {\r\n      addCard();\r\n    } else {\r\n      cancelAddCard();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      addCard();\r\n    }\r\n  }\r\n\r\n  const addCard = () => {\r\n    if(newCardText !== '') {\r\n      // three parameters 1.text 2.list id 3.board id\r\n      boardFuncs.addCard(newCardText, list.id, 1);\r\n      setNewCardText('');\r\n    }\r\n    console.log('get third id from user state');\r\n  }\r\n\r\n  const cancelAddCard = () => {\r\n    setWantToAddCard(false);\r\n    setNewCardText('');\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-list'>\r\n      <div className='trello-board-list-header'>\r\n        { list.title }\r\n      </div>\r\n      <div className='trello-board-list-items'>\r\n        { list.items.map((i, index) => (\r\n          <BoardListItem key={i.id} item={i} />\r\n        )) }\r\n        <div className={`trello-board-list-item trello-board-card-compose  ${!wantToAddCard && 'd-n'}`}>\r\n          <textarea\r\n            className='trello-board-card-compose-textarea'\r\n            id='card-compose-textarea'\r\n            placeholder='Enter a title for this card'\r\n            onBlur={onTextareaBlur}\r\n            onKeyUp={onKeyUp}\r\n            onChange={onChange}\r\n            value={newCardText}>\r\n\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n      <div className={`trello-board-footer ${!wantToAddCard && 'hover cursor-p'}`}>\r\n        { !wantToAddCard\r\n          ?  (<div onClick={onAddCardClick}>\r\n                {list.items.length === 0 ? '+ Add a card' : '+ Add another card'}\r\n              </div>) \r\n          : (\r\n            <Fragment>\r\n              <div className='btn btn-success' onClick={addCard}>\r\n                Add Card\r\n              </div>\r\n              <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddCard}>\r\n                &times;\r\n              </div>\r\n            </Fragment>\r\n          )  \r\n        }      \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardList\r\n","import React from 'react';\r\nimport BoardList from './BoardList';\r\n\r\nconst BoardMain = ({ board, boardFuncs /* contains all of board context  */ }) => {\r\n  return (\r\n    <div className='trello-board-main'>\r\n      { board &&\r\n        board.lists.map(l => (\r\n          <div key={l.id} className='trello-board-list-wrapper'>\r\n            <BoardList list={l} boardFuncs={boardFuncs} />\r\n          </div>\r\n        )) }\r\n      <div className='trello-board-list'>\r\n        <div className='trello-board-add-list'>\r\n          { board && board.lists.length === 0 ? '+ Add a list' : '+ Add another list' }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardMain\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport BoardNavbar from './BoardNavbar';\r\nimport BoardMain from './BoardMain';\r\n\r\n// context\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\n// css\r\nimport './board.css';\r\n\r\nconst Board = () => {\r\n  const [board, setBoard] = useState(null);\r\n\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { getBoard, setStar, setDescription, setTitle } = boardContext;\r\n\r\n  useEffect(() => {\r\n    setBoard(getBoard(currentBoardId)[0]);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"trello-board-row trello-board-row-1\">\r\n        <BoardNavbar\r\n          board={board}\r\n          setStar={setStar}\r\n          setDescription={setDescription}\r\n          setTitle={setTitle} />\r\n      </div>\r\n      <div className=\"trello-board-main-wrapper bg-primary lighten-20 p\">\r\n        <BoardMain boardFuncs={boardContext} board={board} />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import React, { Fragment, useEffect, useContext } from 'react';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Home from './components/pages/home/Home';\r\nimport Board from './components/pages/board/Board';\r\n\r\nimport UserContext from './context/user/userContext';\r\n\r\nimport './trello-clone.css';\r\n\r\nconst App = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setCurrentBoardId, currentBoardId } = userContext\r\n\r\n  // to display board page for development purposes\r\n  useEffect(() => {\r\n    setCurrentBoardId(null);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      { !currentBoardId\r\n          ? <Home />\r\n          : <Board />\r\n      }\r\n      {/* <Home /> */}\r\n      {/* <Board /> */}\r\n    </Fragment>\r\n  );\r\n}\r\nexport default App","import {\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_DESCRIPTION,\r\n  ADD_CARD\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_TITLE:\r\n      return {\r\n        ...state,\r\n        baords: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.title = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_STAR:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload) {\r\n            b.starred = !b.starred\r\n          }\r\n          return b\r\n        }),\r\n        // starredListIds: \r\n      }\r\n    case SET_DESCRIPTION:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.description = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items.push(action.payload.newCard);\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// board state\r\nexport const GET_BOARDS_NAMES = 'GET_BOARDS_NAMES';\r\nexport const SET_TITLE = 'SET_TITLE';\r\nexport const SET_STAR = 'SET_STAR';\r\nexport const SET_DESCRIPTION = 'SET_DESCRIPTION';\r\nexport const ADD_CARD = 'ADD_CARD';\r\n\r\n// alert state\r\n\r\n// user state\r\nexport const SET_CURRENT_BOARD_ID = 'SET_CURRENT_BOARD_ID';\r\nexport const CLEAR_CURRENT_BOARD_ID = 'CLEAR_CURRENT_BOARD_ID';\r\n\r\n// \r\nexport const TEST = 'TEST';\r\n","import React, { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\nimport BoardContext from './boardContext';\r\nimport boardReducer from './boardReducer';\r\nimport {\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_DESCRIPTION,\r\n  ADD_CARD\r\n} from '../types';\r\n\r\nconst BoardState = props => {\r\n  const initialState = {\r\n    boards: [\r\n      {\r\n        title: 'my nice board',\r\n        id: 1,\r\n        color: '#e27b47',\r\n        starred: true,\r\n        description: 'board description goes here',\r\n        lists: [\r\n          {\r\n            title: 'todos',\r\n            id: uuid.v4(),\r\n            items: [\r\n              {\r\n                text: 'todo 1',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 1',\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n            ]\r\n          },\r\n          {\r\n            title: 'doing',\r\n            id: uuid.v4(),\r\n            items: [\r\n              {\r\n                text: 'doing 1',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 3',\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 3',\r\n                  'label 4'\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 3',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 4',\r\n                  'label 2'\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            title: 'new list',\r\n            id: uuid.v4(),\r\n            items: [\r\n\r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        title: 'test empty',\r\n        id: 2,\r\n        starred: false,\r\n        color: '#475969',\r\n        lists: [\r\n\r\n        ]\r\n      }\r\n    ],\r\n    listOfStarredBoardsIds: []\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(boardReducer, initialState);\r\n\r\n  // Get data\r\n  const getBoardsNames = () => {\r\n    const list = state.boards.map(b => b.title);\r\n    \r\n    return list\r\n  };\r\n\r\n  // get boards with starred = true\r\n  const getStarredBoards = () => {\r\n    return state.boards.filter(b => b.starred);\r\n  }\r\n\r\n  // send a single board to board page (returns an array with one object)\r\n  const getBoard = (id) => {\r\n    const board = state.boards.filter(b => b.id === id);\r\n\r\n    return board\r\n  }\r\n\r\n  // set board title\r\n  const setTitle = (text, id) => {\r\n    dispatch({\r\n      type: SET_TITLE,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board starred or unstarred\r\n  const setStar = (id) => {\r\n    let newListOfStarredBoardsIds = state.listOfStarredBoardsIds;\r\n    console.log(newListOfStarredBoardsIds)\r\n    if(state.listOfStarredBoardsIds.indexOf(id) !== -1) {\r\n\r\n    } else {\r\n\r\n    }\r\n    \r\n    dispatch({\r\n      type: SET_STAR,\r\n      payload: {\r\n        id,\r\n        newListOfStarredBoardsIds\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board description\r\n  const setDescription = (text, id) => {\r\n    dispatch({\r\n      type: SET_DESCRIPTION,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // add card to list\r\n  const addCard = (text, listId, boardId) => {\r\n    const newCard = {\r\n      text,\r\n      id: uuid.v4(),\r\n      labels: []\r\n    }\r\n    dispatch({\r\n      type: ADD_CARD,\r\n      payload: {\r\n        newCard,\r\n        listId,\r\n        boardId\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <BoardContext.Provider\r\n      value={{\r\n        boards: state.boards,\r\n        getBoardsNames,\r\n        getStarredBoards,\r\n        getBoard,\r\n        setTitle,\r\n        setStar,\r\n        setDescription,\r\n        addCard\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BoardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BoardState;","import { createContext } from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext;","import { \r\n  TEST\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case TEST:\r\n      return {\r\n        ...state,\r\n        test: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport alertReducer from './alertReducer';\r\nimport { \r\n  TEST\r\n } from '../types';\r\n\r\nconst AlertState = props => {\r\n  const initialState = {\r\n    test: 'test'\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n  // Get data\r\n  const getData = () => {\r\n    dispatch({\r\n      type: TEST,\r\n      payload: 'new test'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        test: state.test,\r\n        getData\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;","import { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  TEST\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case TEST:\r\n      return {\r\n        ...state,\r\n        test: action.payload\r\n      }\r\n    case SET_CURRENT_BOARD_ID:\r\n     return {\r\n       ...state,\r\n       currentBoardId: action.payload\r\n     }\r\n    case CLEAR_CURRENT_BOARD_ID:\r\n      return {\r\n        ...state,\r\n        currentBoardId: null\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer } from 'react';\r\nimport UserContext from './userContext';\r\nimport userReducer from './userReducer';\r\nimport { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID\r\n} from '../types';\r\n\r\nconst UserState = props => {\r\n  const initialState = {\r\n    currentBoardId: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(userReducer, initialState);\r\n\r\n  // Get data\r\n  // eslint-disable-next-line\r\n  const getData = () => {\r\n    dispatch({\r\n      type: null,\r\n      payload: 'new test'\r\n    });\r\n  };\r\n\r\n  const setCurrentBoardId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_BOARD_ID,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  // also can be done with \"setCurrentBoardId(null)\"\r\n  const clearCurrentBoardId = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_BOARD_ID\r\n    });\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        currentBoardId: state.currentBoardId,\r\n        setCurrentBoardId,\r\n        clearCurrentBoardId\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport BoardState from './context/board/BoardState';\nimport AlertState from './context/alert/AlertState';\nimport UserState from './context/user/UserState';\n\nconst StateContainer = () => {\n  return (\n    <BoardState>\n      <AlertState>\n        <UserState>\n          <App />\n        </UserState>\n      </AlertState>\n    </BoardState>\n  );\n}\n\nReactDOM.render(<StateContainer />, document.getElementById('root'));"],"sourceRoot":""}