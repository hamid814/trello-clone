{"version":3,"sources":["context/user/userContext.js","context/board/boardContext.js","components/layout/Navbar.js","components/pages/home/SideListItem.js","components/pages/home/HomeSideList.js","context/alert/alertContext.js","components/pages/home/HomeMainItem.js","components/pages/home/Recent.js","components/pages/home/Starred.js","components/pages/home/HomeMain.js","components/pages/home/Home.js","components/pages/board/BoardTitle.js","components/pages/board/BoardNavbar.js","components/pages/board/ListTitle.js","components/pages/board/BoardListItem.js","components/pages/board/BoardList.js","components/pages/board/AddList.js","components/pages/board/BoardMain.js","components/pages/board/Board.js","components/modal/AddBoardModal.js","components/modal/DetailsModal.js","components/modal/FastEditModal.js","components/modal/Modal.js","components/modal/options/DeleteCard.js","components/modal/options/EditLabels.js","components/modal/OptionsModal.js","components/alert/AlertItem.js","components/alert/Alerts.js","App.js","context/board/boardReducer.js","context/types.js","context/board/BoardState.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/user/userReducer.js","context/user/UserState.js","index.js"],"names":["UserContext","createContext","BoardContext","Navbar","userContext","useContext","boardContext","clearCurrentBoardId","currentBoardId","setModal","getBoard","navbarStyle","background","color","titleTextStyle","className","style","onClick","type","id","SideListItem","board","setCurrentBoardId","useState","isHover","setIsHover","hoverStyle","opacity","onMouseEnter","onMouseLeave","title","charAt","toUpperCase","slice","HomeSideList","boards","map","b","key","AlertContext","HomeMainItem","alertContext","setStar","setAlert","itemStyle","e","target","classList","contains","starred","Recent","getRecentBoards","recentIds","length","r","uuid","v4","Starred","getStarredBoards","s","HomeMain","Home","BoardTitle","boardId","setTitle","text","setText","isSettingTitle","setIsSettingTitle","textHasChanged","setTextHasChanged","useEffect","document","querySelector","focus","onSetTitle","onChange","value","onBlur","onKeyUp","keyCode","BoardNavbar","setDescribtion","descText","setDescText","isSettingDesc","setIsSettingDesc","onSetDesc","describtion","ListTitle","listId","setListTitle","currentListId","onSetListTitle","BoardListItem","timer","item","setCurrentCard","setFastEditModalPos","onlongtouch","alert","parentElement","onTouchStart","setTimeout","onTouchEnd","clearTimeout","desc","console","log","top","getBoundingClientRect","left","width","BoardList","list","boardFuncs","setCurrentListId","setOptionsModal","wantToAddCard","setWantToAddCard","newCardText","setNewCardText","addCard","cancelAddCard","items","i","index","autoFocus","placeholder","AddList","setScrollIflonger","addList","isAdding","setIsAdding","onAddList","cancelAddList","lists","BoardMain","setStyle","window","innerWidth","display","gridTemplateRows","gridTemplateColumns","l","Board","setBoard","boardStyle","AddBoardModal","addBoard","bg","setBg","onClose","onAdd","bgColor","backgroundColor","DetailsModal","currentCard","FastEditModal","theTextarea","useRef","fastEditModalPos","clearCurrentCard","updateCard","current","modalPos","position","rightWidth","onUpdate","newCard","ref","Modal","modalStatus","modalType","showModal","setShowModal","closeModal","modalDisplay","DeleteCard","deleteCard","EditLabels","OptionsModal","container","optionsModalStatus","optionsModalType","mousePos","pos","setPos","setOptionsPos","rect","x","innerHeight","y","height","right","bottom","AlertItem","deleteAlert","msg","Alerts","alerts","a","App","setMousePos","clientX","clientY","state","action","payload","baords","listOfStarredBoardsIds","newListOfStarredBoardsIds","push","newList","newTitle","cardId","filter","BoardState","props","initialState","labels","name","colors","useReducer","boardReducer","dispatch","Provider","newBaord","getBoardsNames","ids","forEach","indexOf","splice","children","AlertState","alertReducer","time","newAlert","UserState","userReducer","ModalStatus","optionsModaltype","mosuePos","setRecentBaord","newRecentIds","shift","setModalType","clearModalType","setOptionsModalType","clearOptionsModalType","clearCurrentListId","card","status","ReactDOM","render","getElementById"],"mappings":"+QAIeA,EAFKC,0BCELC,EAFMD,0BC6DNE,EA1DA,WACb,IAAMC,EAAcC,qBAAWL,GACzBM,EAAeD,qBAAWH,GAExBK,EAAkDH,EAAlDG,oBAAqBC,EAA6BJ,EAA7BI,eAAgBC,EAAaL,EAAbK,SACrCC,EAAaJ,EAAbI,SAUFC,EAAc,CAClBC,WAAYF,EAASF,IAAmBE,EAASF,GAAgBK,OAG7DC,EAAiB,CACrBD,MAAOH,EAASF,GAAkBE,EAASF,GAAgBK,MAAQ,WAGrE,OACE,yBAAKE,UAAU,gBAAgBC,MAAOL,GACpC,6BACE,yBAAKI,UAAU,yCAAyCE,QAnB3C,WACjBV,MAmBM,uBAAGQ,UAAU,gBAEf,yBAAKA,UAAU,0CACb,uBAAGA,UAAU,6BADf,UAIA,yBAAKA,UAAU,iBACb,2BAAOG,KAAK,OAAOH,UAAU,qCAAqCI,GAAG,mBAGzE,yBAAKJ,UAAU,QACb,yBAAKA,UAAU,qEACb,yBAAKA,UAAU,MAAf,UAGA,yBACEA,UAAU,6BACVC,MAAOF,GAFT,WAOJ,6BACE,yBAAKC,UAAU,yCAAyCE,QAvC3C,WACjBR,EAAS,KAAM,mBAuCT,uBAAGM,UAAU,mB,OCXRK,EAzCM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAGdC,EAFYjB,qBAAWL,GAEvBsB,kBAH0B,EAKJC,oBAAS,GALL,mBAK3BC,EAL2B,KAKlBC,EALkB,KAO5BC,EAAaF,EAAU,CAC3BZ,WAAYS,EAAMR,MAClBA,MAAO,UACPc,QAAS,OACP,CACFA,QAAS,KAeX,OACE,yBACEC,aAdiB,WACnBH,GAAW,IAcTI,aAXiB,WACnBJ,GAAW,IAWTR,QARY,WACdK,EAAkBD,EAAMF,KAQtBJ,UAAU,0EACVC,MAAOU,GAELL,EAAMS,MAAMC,OAAO,GAAGC,cAAgBX,EAAMS,MAAMG,MAAM,GACxD,uBAAGlB,UAAU,kCCnBNmB,EAhBM,WAAO,IAClBC,EAAW9B,qBAAWH,GAAtBiC,OAER,OACE,+BACE,4BAAQpB,UAAU,kDAChB,uBAAGA,UAAU,6BACb,yBAAKA,UAAU,mBAAf,WAEAoB,EAAOC,IAAI,SAAAC,GAAC,OACZ,kBAAC,EAAD,CAAcC,IAAKD,EAAElB,GAAIE,MAAOgB,Q,gBCXzBE,EAFMtC,0BC6CNuC,EAzCM,SAAC,GAAe,IAAbnB,EAAY,EAAZA,MAChBjB,EAAcC,qBAAWL,GACzBM,EAAeD,qBAAWH,GAC1BuC,EAAepC,qBAAWkC,GAExBjB,EAAsBlB,EAAtBkB,kBACAoB,EAAYpC,EAAZoC,QACAC,EAAaF,EAAbE,SAEFC,EAAY,CAChBhC,WAAYS,EAAMR,OAcpB,OACE,yBACEE,UAAU,kCACVC,MAAO4B,EACP3B,QAfY,SAAC4B,GACXA,EAAEC,OAAOC,UAAUC,SAAS,YAC9B1B,EAAkBD,EAAMF,MActB,yBAAKJ,UAAU,yBACXM,EAAMS,MAAMC,OAAO,GAAGC,cAAgBX,EAAMS,MAAMG,MAAM,IAE5D,yBACElB,UAAU,6BACVE,QAfc,WACpByB,EAAQrB,EAAMF,IACdwB,EAAS,GAAD,OAAItB,EAAM4B,QAAU,2BAA6B,gCAAjD,UAAsF5B,EAAM4B,QAAU,UAAY,QAAU,QAc9H,uBAAGlC,UAAS,kBAAaM,EAAM4B,QAAU,mBAAqB,YCTzDC,EAzBA,WACb,IAAM5C,EAAeD,qBAAWH,GAC1BE,EAAcC,qBAAWL,GAEvBmD,EAAoB7C,EAApB6C,gBACAC,EAAchD,EAAdgD,UAER,OACE,kBAAC,WAAD,KAC0C,IAAtCD,EAAgBC,GAAWC,QACvB,yBAAKtC,UAAU,uDACb,uBAAGA,UAAU,qBADf,gBAGE,yBAAKA,UAAU,IACXoC,EAAgBC,GAAWhB,IAAI,SAAAkB,GAAC,OAC5B,kBAAC,EAAD,CAAchB,IAAKiB,IAAKC,KAAMnC,MAAOiC,UCM5CG,EAvBC,WACd,IAEQC,EAFarD,qBAAWH,GAExBwD,iBAER,OACE,kBAAC,WAAD,KACkC,IAA9BA,IAAmBL,QACf,yBAAKtC,UAAU,uDACb,uBAAGA,UAAU,oBADf,kBAGE,yBAAKA,UAAU,IACX2C,IAAmBtB,IAAI,SAAAuB,GAAC,OACpB,kBAAC,EAAD,CAAcrB,IAAKqB,EAAExC,GAAIE,MAAOsC,UCQvCC,EApBE,WAAO,IACdnD,EAAaJ,qBAAWL,GAAxBS,SAMR,OACE,0BAAMM,UAAU,aACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,8BAA8BE,QATrC,WACZR,EAAS,KAAM,mBAQX,gBCJOoD,EATF,WACX,OACE,yBAAK9C,UAAU,2BACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCmES+C,EAvEI,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASjC,EAAsB,EAAtBA,MAAOkC,EAAe,EAAfA,SAC9B5D,EAAcC,qBAAWL,GACzByC,EAAepC,qBAAWkC,GAExB/B,EAAmBJ,EAAnBI,eACAmC,EAAaF,EAAbE,SAL2C,EAO3BpB,mBAAS,IAPkB,mBAO5C0C,EAP4C,KAOtCC,EAPsC,OAQP3C,oBAAS,GARF,mBAQ5C4C,EAR4C,KAQ5BC,EAR4B,OASP7C,oBAAS,GATF,mBAS5C8C,EAT4C,KAS5BC,EAT4B,KAWnDC,oBAAU,WACRL,EAAQpC,GACR0C,SAASC,cAAT,uBAAuCV,IAAWW,SAEjD,CAACP,IAEJ,IAmBMQ,EAAa,WACdN,EACW,KAATJ,GACDD,EAASC,EAAMzD,GACfmC,EAAS,sBAAuB,WAChCyB,GAAkB,KAElBA,GAAkB,GAClBzB,EAAS,+BAAgC,YAG3CyB,GAAkB,GAClBE,GAAkB,KAItB,OACE,yBAAKvD,UAAU,SACb,yBACEA,UAAS,8BAAyBoD,GAAkB,OACpDlD,QAvCU,WACdmD,GAAkB,KAuCZtC,EAAMC,OAAO,GAAGC,cAAgBF,EAAMG,MAAM,IAEhD,2BACEf,KAAK,OACLC,GAAE,sBAAiB4C,GACnBhD,UAAS,uBAAkBoD,GAAkB,OAC7CS,SA1CW,SAAC/B,GAChBqB,EAAQrB,EAAEC,OAAO+B,OACjBP,GAAkB,IAyCdQ,OAtCS,WACbH,KAsCIE,MAAOZ,EACPc,QApCU,SAAClC,GACE,KAAdA,EAAEmC,SACHL,SCyCSM,EAzEK,SAAC,GAAkD,IAAhD5D,EAA+C,EAA/CA,MAAOqB,EAAwC,EAAxCA,QAASwC,EAA+B,EAA/BA,eAAgBlB,EAAe,EAAfA,SAC7CrB,EAAatC,qBAAWkC,GAAxBI,SAD4D,EAGpCpB,mBAAS,IAH2B,mBAG7D4D,EAH6D,KAGnDC,EAHmD,OAI1B7D,oBAAS,GAJiB,mBAI7D8D,EAJ6D,KAI9CC,EAJ8C,KAuB9DC,EAAY,WAChBL,EAAeC,EAAU9D,EAAMF,IAC/BwB,EAAS,yCAA0C,WACnD2C,GAAiB,IASb3E,EAAc,CAClBC,WAAYS,GAASA,EAAMR,OAG7B,OACE,yBAAKE,UAAU,+CAA+CC,MAAOL,GACnE,yBAAKI,UAAU,yBACXM,GAAS,kBAAC,EAAD,CAAY0C,QAAS1C,EAAMF,GAAIW,MAAOT,EAAMS,MAAOkC,SAAUA,IACxE,yBAAKjD,UAAU,8CAA8CE,QArC/C,WAClByB,EAAQrB,EAAMF,IACdwB,EAAS,GAAD,OAAItB,EAAM4B,QAAU,2BAA6B,gCAAjD,UAAsF5B,EAAM4B,QAAU,UAAY,QAAU,OAoC9H,uBAAGlC,UAAS,kBAAaM,GAASA,EAAM4B,QAAU,mBAAqB,UAEzE,yBAAKlC,UAAU,yBAEXM,IACIgE,IACEhE,EAAMmE,YAAcnE,EAAMmE,YAAc,kBAElD,2BACEtE,KAAK,OACLC,GAAG,oBACHJ,UAAS,uBAAkBsE,GAAiB,OAC5CR,MAAOM,EACPP,SAxCiB,SAAC/B,GACxBA,EAAEC,OAAO+B,MAAMxB,OAAS,GACpB+B,EAAYvC,EAAEC,OAAO+B,OACrBlC,EAAS,iDAAkD,UAAW,MAsCpEmC,OAAQS,EACRR,QA9BQ,SAAClC,GACE,KAAdA,EAAEmC,SACHO,QA8BE,yBAAKxE,UAAU,8CAA8CE,QAlDhD,WACjBqE,GAAiB,GACjBF,EAAY/D,EAAMmE,aAClBhB,SAASC,cAAc,sBAAsBC,UAgDvC,uBAAG3D,UAAU,iBAGjB,yBAAKA,UAAU,0CACb,uBAAGA,UAAU,yBADf,eCMS0E,EAvEG,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,OAAQ5D,EAA0B,EAA1BA,MAAO6D,EAAmB,EAAnBA,aAC5BvF,EAAcC,qBAAWL,GACzByC,EAAepC,qBAAWkC,GAExB/B,EAAkCJ,EAAlCI,eAAgBoF,EAAkBxF,EAAlBwF,cAChBjD,EAAaF,EAAbE,SAL6C,EAO7BpB,mBAAS,IAPoB,mBAO9C0C,EAP8C,KAOxCC,EAPwC,OAQT3C,oBAAS,GARA,mBAQ9C4C,EAR8C,KAQ9BC,EAR8B,OAST7C,oBAAS,GATA,mBAS9C8C,EAT8C,KAS9BC,EAT8B,KAWrDC,oBAAU,WACRL,EAAQpC,GACR0C,SAASC,cAAT,sBAAsCiB,IAAUhB,SAE/C,CAACP,IAEJ,IAmBM0B,EAAiB,WAClBxB,EACW,KAATJ,GACD0B,EAAanF,EAAgBoF,EAAe3B,GAC5CtB,EAAS,qBAAsB,WAC/ByB,GAAkB,KAElBA,GAAkB,GAClBzB,EAAS,8BAA+B,aAG1CyB,GAAkB,GAClBE,GAAkB,KAItB,OACE,yBAAKvD,UAAU,aACb,yBACEA,UAAS,yBAAoBoD,GAAkB,OAC/ClD,QAvCU,WACdmD,GAAkB,KAuCZtC,GAEJ,2BACEZ,KAAK,OACLC,GAAE,qBAAgBuE,GAClBb,MAAOZ,EACPlD,UAAS,kEAA6DoD,GAAkB,OACxFS,SA3CW,SAAC/B,GAChBqB,EAAQrB,EAAEC,OAAO+B,OACjBP,GAAkB,IA0CdQ,OAvCS,WACbe,KAuCId,QApCU,SAAClC,GACE,KAAdA,EAAEmC,SACHa,SC+BSC,EAhEO,SAAC,GAAc,IA4B/BC,EA5BmBC,EAAW,EAAXA,KAAW,EACwB3F,qBAAWL,GAA7DiG,EAD0B,EAC1BA,eAAgBxF,EADU,EACVA,SAAUyF,EADA,EACAA,oBAwC5BC,EAAc,WAClBC,MAAM,eAGR,OACE,yBACErF,UAAU,yBACVE,QA7CY,SAAC4B,GACXA,EAAEC,OAAOC,UAAUC,SAAS,eAAkBH,EAAEC,OAAOuD,cAActD,UAAUC,SAAS,eAC1FvC,EAAS,KAAM,gBAEjBwF,EAAeD,IA0CbM,aAlBiB,WACnBP,EAAQQ,WAAWJ,EAHC,MAqBlBK,WAfe,WACbT,GACFU,aAAaV,KAcX,6BACIC,EAAK/B,KACP,yBAAKlD,UAAU,WACXiF,EAAKU,MAAQV,EAAKU,OAGxB,yBAAK3F,UAAU,wDAAwDE,QA/CzD,SAAC4B,GACnB8D,QAAQC,IAAI,2CACT/D,EAAEC,OAAOC,UAAUC,SAAS,cAC7BkD,EAAoB,CAClBW,IAAKhE,EAAEC,OAAOuD,cAAcS,wBAAwBD,IACpDE,KAAMlE,EAAEC,OAAOuD,cAAcS,wBAAwBC,KACrDC,MAAOnE,EAAEC,OAAOuD,cAAcS,wBAAwBE,QAGxDd,EAAoB,CAClBW,IAAKhE,EAAEC,OAAOuD,cAAcA,cAAcS,wBAAwBD,IAClEE,KAAMlE,EAAEC,OAAOuD,cAAcA,cAAcS,wBAAwBC,KACnEC,MAAOnE,EAAEC,OAAOuD,cAAcA,cAAcS,wBAAwBE,QAGxEvG,EAAS,KAAM,mBAiCT,uBAAGM,UAAU,kBCiDRkG,EAxGG,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,WACnB/G,EAAcC,qBAAWL,GACzByC,EAAepC,qBAAWkC,GAExB6E,EAAsDhH,EAAtDgH,iBAAkB5G,EAAoCJ,EAApCI,eAAgB6G,EAAoBjH,EAApBiH,gBAClC1E,EAAaF,EAAbE,SAL6D,EAO3BpB,oBAAS,GAPkB,mBAO9D+F,EAP8D,KAO/CC,EAP+C,OAQ/BhG,mBAAS,IARsB,mBAQ9DiG,EAR8D,KAQjDC,EARiD,KAkC/DC,EAAU,WACK,KAAhBF,IAEDL,EAAWO,QAAQF,EAAaN,EAAK/F,GAAIX,GACzCmC,EAAS,aAAc,WACvB8E,EAAe,MAIbE,EAAgB,WACpBJ,GAAiB,GACjBE,EAAe,KAWjB,OACE,yBAAK1G,UAAU,oBAAoBE,QATjB,WAClBmG,EAAiBF,EAAK/F,MASpB,yBAAKJ,UAAU,4BACb,kBAAC,EAAD,CAAW2E,OAAQwB,EAAK/F,GAAIW,MAAOoF,EAAKpF,MAAO6D,aAAcwB,EAAWxB,eACxE,yBAAK5E,UAAU,0DAA0DE,QARpD,WACzBoG,EAAgB,KAAM,iBAQhB,uBAAGtG,UAAU,wBAGjB,yBAAKA,UAAU,2BACXmG,EAAKU,MAAMxF,IAAI,SAACyF,EAAGC,GAAJ,OACf,kBAAC,EAAD,CAAexF,IAAKuF,EAAE1G,GAAI6E,KAAM6B,MAElC,yBAAK9G,UAAS,6DAAwDuG,GAAiB,QACrF,8BACEvG,UAAU,qCACVgH,WAAS,EACTC,YAAY,8BACZlD,OAvDa,WACF,KAAhB0C,EACDE,IAEAC,KAoDM5C,QAhDM,SAAClC,GACE,KAAdA,EAAEmC,SAAkBwC,EAAYnE,OAAS,EAC1CqE,IACsB,KAAd7E,EAAEmC,SAAyC,IAAvBwC,EAAYnE,QACxCoE,EAAe,KA6CT7C,SA7DO,SAAC/B,GAChB4E,EAAe5E,EAAEC,OAAO+B,QA6DhBA,MAAO2C,MAKb,yBACEzG,UAAS,+BAA0BuG,GAAiB,kBACpDrG,QAzEiB,YACpBqG,GAAiBC,GAAiB,KAyE5BD,EAKC,kBAAC,WAAD,KACE,yBAAKvG,UAAU,kBAAkBE,QAASyG,GAA1C,YAGA,yBAAK3G,UAAU,+CAA+CE,QAAS0G,GAAvE,SARA,6BACyB,IAAtBT,EAAKU,MAAMvE,OAAe,eAAiB,yBCZ7C4E,EA5EC,SAAC,GAAkC,IAAhC5G,EAA+B,EAA/BA,MAAO6G,EAAwB,EAAxBA,kBAClB5H,EAAeD,qBAAWH,GAC1BuC,EAAepC,qBAAWkC,GAExB4F,EAAY7H,EAAZ6H,QACAxF,EAAaF,EAAbE,SALwC,EAOhBpB,oBAAS,GAPO,mBAOzC6G,EAPyC,KAO/BC,EAP+B,OAQxB9G,mBAAS,IARe,mBAQzC0C,EARyC,KAQnCC,EARmC,KAgC1CoE,EAAY,WACJ,KAATrE,GACDkE,EAAQlE,EAAM5C,EAAMF,IACpBwB,EAAS,QAAD,OAASsB,EAAT,UAAuB,WAC/BC,EAAQ,IACRgE,KAEAvF,EAAS,8BAA+B,YAItC4F,EAAgB,WACpBF,GAAY,GACZnE,EAAQ,KAGV,OACE,kBAAC,WAAD,KACE,yBACEnD,UAAS,uEAAkEqH,GAAY,OACvFnH,QA1CU,WACdoH,GAAY,KA0CJhH,GAAgC,IAAvBA,EAAMmH,MAAMnF,OAAe,eAAiB,sBAE3D,yBACEtC,UAAS,yEAAoEqH,GAAY,QACvF,2BACElH,KAAK,OACLH,UAAU,sBACViH,YAAY,kBACZnD,MAAOZ,EACPW,SAhDO,SAAC/B,GAChBqB,EAAQrB,EAAEC,OAAO+B,QAgDTC,OA7CK,WACD,KAATb,EACDqE,IAEAC,KA0CMxD,QAtCM,SAAClC,GACE,KAAdA,EAAEmC,SACHsD,OAqCI,yBAAKvH,UAAU,kBAAkBE,QAASqH,GAA1C,YAGA,yBAAKvH,UAAU,+CAA+CE,QAASsH,GAAvE,WCnCKE,EAlCG,SAAC,GAAgE,IAA9DpH,EAA6D,EAA7DA,MAAO8F,EAAsD,EAAtDA,WAAsD,EACtD5F,mBAAS,IAD6C,mBACzEP,EADyE,KAClE0H,EADkE,KAGhFnE,oBAAU,WACR2D,KAEC,CAAC7G,IAEJ,IAAM6G,EAAoB,WAGrB,GAF2C,KAA1B7G,EAAMmH,MAAMnF,OAAS,GAEpBsF,OAAOC,YAC1BF,EAAS,CACPG,QAAS,OACTC,iBAAkB,MAClBC,oBAAoB,UAAD,OAAY1H,GAASA,EAAMmH,MAAMnF,OAAS,EAA1C,aAKzB,OACE,yBAAKtC,UAAU,oBAAoBC,MAAOA,GACtCK,EAAMmH,MAAMpG,IAAI,SAAA4G,GAAC,OACf,yBAAK1G,IAAK0G,EAAE7H,GAAIJ,UAAU,6BACxB,kBAAC,EAAD,CAAWmG,KAAM8B,EAAG7B,WAAYA,OAGtC,yBAAKpG,UAAU,6BACb,kBAAC,EAAD,CAASM,MAAOA,EAAO6G,kBAAmBA,OCWnCe,G,MAhCD,WAAO,IAAD,EACQ1H,mBAAS,MADjB,mBACXF,EADW,KACJ6H,EADI,KAGZ9I,EAAcC,qBAAWL,GACzBM,EAAeD,qBAAWH,GAExBM,EAAmBJ,EAAnBI,eACAE,EAAgDJ,EAAhDI,SAAUgC,EAAsCpC,EAAtCoC,QAASwC,EAA6B5E,EAA7B4E,eAAgBlB,EAAa1D,EAAb0D,SAE3CO,oBAAU,WACR2E,EAASxI,EAASF,KAEjB,IAEH,IAAM2I,EAAa,CACjBvI,WAAYS,GAASA,EAAMR,OAG7B,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CACEQ,MAAOA,EACPqB,QAASA,EACTwC,eAAgBA,EAChBlB,SAAUA,IACZ,yBAAKjD,UAAU,yCAAyCC,MAAOmI,GAC5D9H,GAAS,kBAAC,EAAD,CAAW8F,WAAY7G,EAAce,MAAOA,QCkD/C+H,G,KA/EO,WAAO,IAAD,EACgB/I,qBAAWL,GAA7CS,EADkB,EAClBA,SAAUF,EADQ,EACRA,oBACV8I,EAAahJ,qBAAWH,GAAxBmJ,SACA1G,EAAatC,qBAAWkC,GAAxBI,SAHkB,EAKNpB,mBAAS,WALH,mBAKnB+H,EALmB,KAKfC,EALe,OAMFhI,mBAAS,IANP,mBAMnB0C,EANmB,KAMbC,EANa,KAcpBsF,EAAU,WACd/I,EAAS,QAaLgJ,EAAQ,WACA,KAATxF,IACDoF,EAASpF,EAAMqF,GACfE,IACA7G,EAAS,SAAD,OAAUsB,EAAKlC,OAAO,GAAGC,cAAgBiC,EAAKhC,MAAM,GAApD,gBAAsE,UAAW,KACzF1B,MAIEmJ,EAAU,CACdC,gBAAiBL,GAGnB,OACE,yBAAKvI,UAAU,yCACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,0BAA0BC,MAAO0I,GAC9C,6BACE,2BACExI,KAAK,OACL8G,YAAY,kBACZnD,MAAOZ,EACPW,SAhCK,SAAC/B,GAChBqB,EAAQrB,EAAEC,OAAO+B,QAgCPE,QA7BI,SAAClC,GACE,KAAdA,EAAEmC,SACHyE,KA4BQ1I,UAAU,oDAEd,6BACE,yBAAKA,UAAU,QAAQE,QAASuI,GAAhC,UAKJ,yBAAKzI,UAAU,8BAA8BE,QApD/B,SAAC4B,GACfA,EAAEC,OAAOC,UAAUC,SAAS,kBAAqBH,EAAEC,OAAOC,UAAUC,SAAS,gBAC/EuG,EAAM1G,EAAEC,OAAO3B,MAmDX,yBAAKA,GAAG,UAAUJ,UAAU,2CAC5B,yBAAKI,GAAG,UAAUJ,UAAU,8CAC5B,yBAAKI,GAAG,UAAUJ,UAAU,8CAC5B,yBAAKI,GAAG,UAAUJ,UAAU,8CAC5B,yBAAKI,GAAG,UAAUJ,UAAU,8CAC5B,yBAAKA,UAAU,kBACf,yBAAKI,GAAG,SAASJ,UAAU,uCAG/B,yBACEE,QAASwI,EACT1I,UAAS,qCAAyC,KAATkD,EAAc,cAAgB,uBAFzE,mBCjDS2F,EAzBM,WACnB,IAAMxJ,EAAcC,qBAAWL,GAEvBS,EAA0BL,EAA1BK,SAAUoJ,EAAgBzJ,EAAhByJ,YAMlB,OACE,yBAAK9I,UAAU,2BACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,gBAAgBE,QAPrB,WACdR,EAAS,SAML,QAGA,uBAAGM,UAAU,wBACX8I,EAAY5F,MAEhB,yBAAKlD,UAAU,yB,mOCjBrB,IAuGe+I,EAvGO,WACpB,IAAMC,EAAcC,iBAAO,MADD,EAUX3J,qBAAWL,GANxBQ,EAJwB,EAIxBA,eACAoF,EALwB,EAKxBA,cACAqE,EANwB,EAMxBA,iBACAJ,EAPwB,EAOxBA,YACAK,EARwB,EAQxBA,iBACA7C,EATwB,EASxBA,gBACA5G,EAVwB,EAUxBA,SACM0J,EAAe9J,qBAAWH,GAA1BiK,WAXkB,EAaF5I,mBAAS,IAbP,mBAanB0C,EAbmB,KAabC,EAba,KAe1BK,oBAAU,WACRL,EAAQ2F,EAAY5F,MACpB8F,EAAYK,QAAQ1F,SAEnB,IAEH,IAAM2F,EAAW,CACfC,SAAU,WACVzD,IAAKoD,EAAiBpD,IAAM,KAC5BE,KAAMkD,EAAiBlD,KAAO,MAG1BwD,EAAa,CACjBvD,MAAOiD,EAAiBjD,MAAQ,MAa5BwD,EAAW,WACf,IAAMC,E,qVAAO,IACRZ,EADQ,CAEX5F,SAEFkG,EAAW3J,EAAgBoF,EAAeiE,EAAY1I,GAAIsJ,GAC1DP,IACAzJ,EAAS,QAWX,OACE,yBAAKO,MAAOqJ,EAAUtJ,UAAU,iCAC9B,yBAAKC,MAAOuJ,EAAYxJ,UAAU,yBAChC,8BACE2J,IAAKX,EACLhJ,UAAU,eACV8D,MAAOZ,EACPW,SAnCS,SAAC/B,GAChBqB,EAAQrB,EAAEC,OAAO+B,QAmCXE,QAhCQ,SAAClC,GACE,KAAdA,EAAEmC,SACHwF,OAgCE,yBAAKzJ,UAAU,uBAAuBE,QAASuJ,GAA/C,SAIF,yBAAKzJ,UAAU,mCAAmCE,QAtBhC,SAAC4B,GAClBA,EAAEC,OAAOC,UAAUC,SAAS,OAC7BqE,EAAgB,KAAMxE,EAAEC,OAAOuD,cAAclF,IACrC0B,EAAEC,OAAOC,UAAUC,SAAS,oBACpCqE,EAAgB,KAAMxE,EAAEC,OAAO3B,MAmB7B,yBAAKJ,UAAU,0BACb,yBAAKA,UAAU,6CAA6CI,GAAG,cAC7D,uBAAGJ,UAAU,kBADf,gBAKF,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,6CAA6CI,GAAG,WAC7D,uBAAGJ,UAAU,mBADf,mBAKF,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,6CAA6CI,GAAG,QAC7D,uBAAGJ,UAAU,0BADf,SAKF,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,6CAA6CI,GAAG,cAC7D,uBAAGJ,UAAU,oBADf,mBC7CK4J,EA5CD,WACZ,IAAMvK,EAAcC,qBAAWL,GAEvB4K,EAAqCxK,EAArCwK,YAAaC,EAAwBzK,EAAxByK,UAAWpK,EAAaL,EAAbK,SAHd,EAKgBc,mBAAS,OALzB,mBAKXuJ,EALW,KAKAC,EALA,KAOlBxG,oBAAU,WACRwG,EAAaH,IAEZ,CAACA,IAEJ,IAMMI,EAAa,WACjBvK,EAAS,QAGLwK,EAAe,CACnBpC,QAAuB,OAAdiC,EAAqB,QAAU,QAG1C,OACE,yBACE9J,MAAOiK,EACPlK,UAAU,QACVE,QAlBY,SAAC4B,GACZA,EAAEC,OAAOC,UAAUC,SAAS,UAC7BgI,MAkBgB,kBAAdH,GAAiC,kBAAC,EAAD,MAGnB,iBAAdA,GAAgC,kBAAC,EAAD,MAGlB,kBAAdA,GAAiC,kBAAC,EAAD,QCnB1BK,EAvBI,WAAO,IAAD,EAC2D7K,qBAAWL,GAArFQ,EADe,EACfA,eAAgBoF,EADD,EACCA,cAAeiE,EADhB,EACgBA,YAAapJ,EAD7B,EAC6BA,SAAU4G,EADvC,EACuCA,gBACtD8D,EAAe9K,qBAAWH,GAA1BiL,WAQR,OACE,6BACE,yBAAKpK,UAAU,kBAAf,4DAIA,yBAAKA,UAAU,qDAAqDE,QAZxD,WACdkK,EAAW3K,EAAgBoF,EAAeiE,EAAY1I,IACtDV,EAAS,OACT4G,EAAgB,SASd,YCHS+D,EAbI,WAAO,IAAD,EAC2D/K,qBAAWL,GADtE,EACfQ,eADe,EACCoF,cADD,EACgBiE,YADhB,EAC6BpJ,SAD7B,EACuC4G,gBACvChH,qBAAWH,GAA1BiK,WAER,OACE,uEC4GWkB,EA9GM,WACnB,IAAMC,EAAYtB,iBAAO,MAEnB5J,EAAcC,qBAAWL,GAG7BuL,EAGmBnL,EAHnBmL,mBACAC,EAEmBpL,EAFnBoL,iBACAC,EACmBrL,EADnBqL,SACApE,EAAmBjH,EAAnBiH,gBATuB,EAWS9F,mBAAS,OAXlB,mBAWlBuJ,EAXkB,KAWPC,EAXO,OAYHxJ,mBAAS,IAZN,mBAYlBmK,EAZkB,KAYbC,EAZa,KAczBpH,oBAAU,WACRwG,EAAaQ,GACbhF,WAAW,aAER,GACHqF,KAEC,CAACL,EAAoBE,IAExB,IAMMT,EAAa,WACjB3D,EAAgB,QAGZ4D,EAAe,CACnBpC,QAAuB,OAAdiC,EAAqB,QAAU,QAGpCc,EAAgB,WACpBrF,WAAW,WAEP,IAAIsF,EADHJ,IAEDI,EAAOP,EAAUlB,QAAQtD,wBAEtB6B,OAAOC,WAAa6C,EAASK,EAAID,EAAK7E,OAAS2B,OAAOoD,YAAcN,EAASO,EAAIH,EAAKI,OACvFN,EAAO,CACLO,MAAO,GACPrF,IAAK4E,EAASO,EAAI,GAAK,OAEjBrD,OAAOoD,YAAcN,EAASO,EAAIH,EAAKI,QAAUtD,OAAOC,WAAa6C,EAASK,EAAID,EAAK7E,MAC/F2E,EAAO,CACL5E,KAAM0E,EAASK,EAAI,GAAK,KACxBK,OAAQ,KAEFxD,OAAOoD,YAAcN,EAASO,EAAIH,EAAKI,QAAUtD,OAAOC,WAAa6C,EAASK,EAAID,EAAK7E,MAC7F2E,EAAO,CACPO,MAAO,GACPC,OAAQ,KAGVR,EAAO,CACL5E,KAAM0E,EAASK,EAAI,GAAK,KACxBjF,IAAK4E,EAASO,EAAI,GAAK,SAI5B,IAGL,OACE,yBACEhL,MAAOiK,EACP9J,GAAG,gBACHF,QAjDY,SAAC4B,GACI,kBAAhBA,EAAEC,OAAO3B,IACV6J,MAgDE,yBAAKN,IAAKY,EAAWvK,UAAU,0BAA0BC,MAAO0K,GAC9D,yBAAK3K,UAAU,wBACb,yBAAKA,UAAU,QAAQE,QAAS+J,GAAhC,QAIuB,eAArBQ,GAAqC,SAGhB,SAArBA,GAA+B,YAGV,YAArBA,GAAkC,UAGb,eAArBA,GAAqC,cAGhB,eAArBA,GAAqC,eAGhB,gBAArBA,GAAsC,gBAG1C,yBAAKzK,UAAU,sBAEU,eAArByK,GAAqC,kBAAC,EAAD,MAGhB,eAArBA,GAAqC,kBAAC,EAAD,UC7FpCY,EAfG,SAAC,GAA4B,IAA1BhG,EAAyB,EAAzBA,MAAOiG,EAAkB,EAAlBA,YAI1B,OACE,yBACEpL,QALY,WACdoL,EAAYjG,EAAMjF,KAKhBJ,UAAS,mDAA8CqF,EAAMlF,OAC3D,yBAAKH,UAAU,yBACXqF,EAAMkG,IAAIvK,OAAO,GAAGC,cAAgBoE,EAAMkG,IAAIrK,MAAM,MCWjDsK,EAjBA,WAAO,IAAD,EACalM,qBAAWkC,GAAnCiK,EADW,EACXA,OAAQH,EADG,EACHA,YAEhB,OACE,yBAAKtL,UAAU,yBAEXyL,EAAOpK,IAAI,SAAAqK,GAAC,OACV,kBAAC,EAAD,CACEnK,IAAKmK,EAAEtL,GACPiF,MAAOqG,EACPJ,YAAaA,QCoCVK,G,YAtCH,WACV,IAAMtM,EAAcC,qBAAWL,GAG7BsB,EAGuBlB,EAHvBkB,kBACAd,EAEuBJ,EAFvBI,eACAmM,EACuBvM,EADvBuM,YACApB,EAAuBnL,EAAvBmL,mBAGFhH,oBAAU,WACRjD,EAAkB,IAEjB,IAQH,OACE,oCACA,yBAAKL,QARS,SAAC4B,GACW,QAAvB0I,GACDoB,EAAY9J,EAAE+J,QAAS/J,EAAEgK,UAMJ1L,GAAG,eACxB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACGX,EAEG,kBAAC,EAAD,MADA,kBAAC,EAAD,U,0jBC9BG,eAACsM,EAAOC,GACrB,OAAQA,EAAO7L,MACb,ICbqB,YDcnB,OAAO,KACF4L,EADL,CAEE3K,OAAO,GAAD,mBAAM2K,EAAM3K,QAAZ,CAAoB4K,EAAOC,YAErC,IChBqB,YDiBnB,OAAO,KACFF,EADL,CAEEG,OAAQH,EAAM3K,OAAOC,IAAI,SAAAC,GAIvB,OAHGA,EAAElB,KAAO4L,EAAOC,QAAQ7L,KACzBkB,EAAEP,MAAQiL,EAAOC,QAAQ/I,MAEpB5B,MAGb,ICzBoB,WD0BlB,OAAO,KACFyK,EADL,CAEE3K,OAAQ2K,EAAM3K,OAAOC,IAAI,SAAAC,GAIvB,OAHGA,EAAElB,KAAO4L,EAAOC,QAAQ7L,KACzBkB,EAAEY,SAAWZ,EAAEY,SAEVZ,IAET6K,uBAAwBH,EAAOC,QAAQG,4BAE3C,ICnC2B,kBDoCzB,OAAO,KACFL,EADL,CAEE3K,OAAQ2K,EAAM3K,OAAOC,IAAI,SAAAC,GAIvB,OAHGA,EAAElB,KAAO4L,EAAOC,QAAQ7L,KACzBkB,EAAEmD,YAAcuH,EAAOC,QAAQ/I,MAE1B5B,MAGb,IC5CoB,WD6ClB,OAAO,KACFyK,EADL,CAEE3K,OAAQ2K,EAAM3K,OAAOC,IAAI,SAAAC,GAIvB,OAHGA,EAAElB,KAAO4L,EAAOC,QAAQ7L,IACzBkB,EAAEmG,MAAM4E,KAAKL,EAAOC,QAAQK,SAEvBhL,MAGb,ICpDoB,WDqDlB,OAAO,KACFyK,EADL,CAEE3K,OAAQ2K,EAAM3K,OAAOC,IAAI,SAAAC,GASvB,OARGA,EAAElB,KAAO4L,EAAOC,QAAQjJ,UACzB1B,EAAEmG,MAAQnG,EAAEmG,MAAMpG,IAAI,SAAA4G,GAIpB,OAHGA,EAAE7H,KAAO4L,EAAOC,QAAQtH,QACzBsD,EAAEpB,MAAMwF,KAAKL,EAAOC,QAAQvC,SAEvBzB,KAGJ3G,MAGb,ICpE0B,iBDqExB,OAAO,KACFyK,EADL,CAEE3K,OAAQ2K,EAAM3K,OAAOC,IAAI,SAAAf,GASvB,OARGA,EAAMF,KAAO4L,EAAOC,QAAQjJ,UAC7B1C,EAAMmH,MAAQnH,EAAMmH,MAAMpG,IAAI,SAAA8E,GAI5B,OAHGA,EAAK/F,KAAO4L,EAAOC,QAAQtH,SAC5BwB,EAAKpF,MAAQiL,EAAOC,QAAQM,UAEvBpG,KAGJ7F,MAGb,ICjFuB,cDkFrB,OAAO,KACFyL,EADL,CAEE3K,OAAQ2K,EAAM3K,OAAOC,IAAI,SAAAf,GAWvB,OAVGA,EAAMF,KAAO4L,EAAOC,QAAQjJ,UAC7B1C,EAAMmH,MAAQnH,EAAMmH,MAAMpG,IAAI,SAAA8E,GAM5B,OALGA,EAAK/F,KAAO4L,EAAOC,QAAQtH,SAC5BwB,EAAKU,MAAQV,EAAKU,MAAMxF,IAAI,SAAA4D,GAAI,OAC9BA,EAAK7E,KAAO4L,EAAOC,QAAQO,OAASR,EAAOC,QAAQvC,QAAUzE,KAG1DkB,KAGJ7F,MAGb,ICjGuB,cDkGrB,OAAO,KACFyL,EADL,CAEE3K,OAAQ2K,EAAM3K,OAAOC,IAAI,SAAAC,GASvB,OARGA,EAAElB,KAAO4L,EAAOC,QAAQjJ,UACzB1B,EAAEmG,MAAQnG,EAAEmG,MAAMpG,IAAI,SAAA4G,GAIpB,OAHGA,EAAE7H,KAAO4L,EAAOC,QAAQtH,SACzBsD,EAAEpB,MAAQoB,EAAEpB,MAAM4F,OAAO,SAAA3F,GAAC,OAAIA,EAAE1G,KAAO4L,EAAOC,QAAQO,UAEjDvE,KAGJ3G,MAGb,QACE,OAAOyK,IEgYEW,EA3eI,SAAAC,GACjB,IAAMC,EAAe,CACnBxL,OAAQ,CACN,CACEL,MAAO,gBACPX,GAAI,EACJN,MAAO,UACPoC,SAAS,EACTuC,YAAa,8BACbgD,MAAO,CACL,CACE1G,MAAO,QACPX,GAAIoC,IAAKC,KACToE,MAAO,CACL,CACE3D,KAAM,SACNyC,KAAM,kBACNvF,GAAIoC,IAAKC,KACToK,OAAQ,CACN,UACA,YAGJ,CACE3J,KAAM,SACN9C,GAAIoC,IAAKC,KACToK,OAAQ,CACN,YAGJ,CACE3J,KAAM,SACN9C,GAAIoC,IAAKC,KACToK,OAAQ,CACN,YAGJ,CACE3J,KAAM,SACN9C,GAAIoC,IAAKC,KACToK,OAAQ,CACN,YAGJ,CACE3J,KAAM,SACN9C,GAAIoC,IAAKC,KACToK,OAAQ,CACN,YAGJ,CACE3J,KAAM,SACN9C,GAAIoC,IAAKC,KACToK,OAAQ,CACN,YAGJ,CACE3J,KAAM,SACN9C,GAAIoC,IAAKC,KACToK,OAAQ,CACN,YAGJ,CACE3J,KAAM,SACN9C,GAAIoC,IAAKC,KACToK,OAAQ,CACN,YAGJ,CACE3J,KAAM,SACN9C,GAAIoC,IAAKC,KACToK,OAAQ,CACN,YAGJ,CACE3J,KAAM,SACN9C,GAAIoC,IAAKC,KACToK,OAAQ,CACN,YAGJ,CACE3J,KAAM,SACN9C,GAAIoC,IAAKC,KACToK,OAAQ,CACN,YAGJ,CACE3J,KAAM,SACN9C,GAAIoC,IAAKC,KACToK,OAAQ,CACN,YAGJ,CACE3J,KAAM,SACN9C,GAAIoC,IAAKC,KACToK,OAAQ,CACN,YAGJ,CACE3J,KAAM,SACN9C,GAAIoC,IAAKC,KACToK,OAAQ,CACN,YAGJ,CACE3J,KAAM,SACN9C,GAAIoC,IAAKC,KACToK,OAAQ,CACN,cAKR,CACE9L,MAAO,QACPX,GAAIoC,IAAKC,KACToE,MAAO,CACL,CACE3D,KAAM,UACN9C,GAAIoC,IAAKC,KACToK,OAAQ,CACN,UACA,YAGJ,CACE3J,KAAM,UACN9C,GAAIoC,IAAKC,KACToK,OAAQ,CACN,UACA,YAGJ,CACE3J,KAAM,UACN9C,GAAIoC,IAAKC,KACToK,OAAQ,CACN,UACA,cAKR,CACE9L,MAAO,WACPX,GAAIoC,IAAKC,KACToE,MAAO,IAIT,CACE9F,MAAO,gBACPX,GAAIoC,IAAKC,KACToE,MAAO,IAIT,CACE9F,MAAO,gBACPX,GAAIoC,IAAKC,KACToE,MAAO,IAIT,CACE9F,MAAO,gBACPX,GAAIoC,IAAKC,KACToE,MAAO,IAIT,CACE9F,MAAO,gBACPX,GAAIoC,IAAKC,KACToE,MAAO,IAIT,CACE9F,MAAO,gBACPX,GAAIoC,IAAKC,KACToE,MAAO,IAIT,CACE9F,MAAO,gBACPX,GAAIoC,IAAKC,KACToE,MAAO,IAIT,CACE9F,MAAO,gBACPX,GAAIoC,IAAKC,KACToE,MAAO,IAIT,CACE9F,MAAO,gBACPX,GAAIoC,IAAKC,KACToE,MAAO,IAIT,CACE9F,MAAO,gBACPX,GAAIoC,IAAKC,KACToE,MAAO,IAIT,CACE9F,MAAO,gBACPX,GAAIoC,IAAKC,KACToE,MAAO,IAIT,CACE9F,MAAO,gBACPX,GAAIoC,IAAKC,KACToE,MAAO,IAIT,CACE9F,MAAO,gBACPX,GAAIoC,IAAKC,KACToE,MAAO,IAIT,CACE9F,MAAO,gBACPX,GAAIoC,IAAKC,KACToE,MAAO,MAMb,CACE9F,MAAO,aACPX,GAAI,EACJ8B,SAAS,EACTpC,MAAO,UACP2E,YAAa,GACbgD,MAAO,CACL,CACE1G,MAAO,eACPX,GAAIoC,IAAKC,KACToE,MAAO,OAOfgG,OAAQ,CACN,CACEzM,GAAI,EACJN,MAAO,UACPgN,KAAM,IAER,CACE1M,GAAI,EACJN,MAAO,UACPgN,KAAM,IAER,CACE1M,GAAI,EACJN,MAAO,UACPgN,KAAM,IAER,CACE1M,GAAI,EACJN,MAAO,UACPgN,KAAM,IAER,CACE1M,GAAI,EACJN,MAAO,UACPgN,KAAM,IAER,CACE1M,GAAI,EACJN,MAAO,UACPgN,KAAM,KAGVC,OAAQ,GAGRZ,uBAAwB,IAjTA,EAqTAa,qBAAWC,EAAcL,GArTzB,mBAqTnBb,EArTmB,KAqTZmB,EArTY,KAsT1BtH,QAAQC,IAAI,8BACZD,QAAQC,IAAI,wEACZD,QAAQC,IAAIkG,EAAMgB,QAGlB,IAuCMpN,EAAW,SAACS,GAGhB,OAFc2L,EAAM3K,OAAOqL,OAAO,SAAAnL,GAAC,OAAIA,EAAElB,KAAOA,IAEnC,IA8Gf,OACE,kBAAC,EAAa+M,SAAd,CACErJ,MAAO,CACL1C,OAAQ2K,EAAM3K,OACdkH,SAtJW,SAACvH,EAAOjB,GACvB,IAAMsN,EAAW,CACfrM,QACAX,GAAIoC,IAAKC,KACT3C,QACAoC,SAAS,EACTuC,YAAa,GACbgD,MAAO,IAETyF,EAAS,CACP/M,KD1VmB,YC2VnB8L,QAASmB,KA4IPC,eA7JiB,WAGrB,OAFatB,EAAM3K,OAAOC,IAAI,SAAAC,GAAC,OAAIA,EAAEP,SA6JjCqB,gBAxIkB,SAACkL,GACvB,IAAMnH,EAAO,GAIb,OAFAmH,GAAOA,EAAIC,QAAQ,SAAAnN,GAAE,OAAI+F,EAAKkG,KAAK1M,EAASS,MAErC+F,GAoIHxD,iBAhImB,WACvB,IAAMwD,EAAO,GAGb,OAFA4F,EAAMI,uBAAuBoB,QAAQ,SAAAnN,GAAE,OAAI+F,EAAKkG,KAAK1M,EAASS,MAEvD+F,GA6HHxG,WACAsD,SAnHW,SAACC,EAAM9C,GACtB8M,EAAS,CACP/M,KDxXmB,YCyXnB8L,QAAS,CACP7L,KACA8C,WA+GAvB,QAzGU,SAACvB,GACf,IAAIgM,EAA4BL,EAAMI,wBACW,IAA9CJ,EAAMI,uBAAuBqB,QAAQpN,GACtCgM,EAA0BqB,OAAO1B,EAAMI,uBAAuBqB,QAAQpN,GAAK,GAE3EgM,EAA0BC,KAAKjM,GAEjC8M,EAAS,CACP/M,KDxYkB,WCyYlB8L,QAAS,CACP7L,KACAgM,gCA+FAjI,eAzFiB,SAACjB,EAAM9C,GAC5B8M,EAAS,CACP/M,KDlZyB,kBCmZzB8L,QAAS,CACP7L,KACA8C,WAqFAkE,QA/EU,SAAClE,EAAM9C,GACrB,IAAMkM,EAAU,CACdvL,MAAOmC,EACP9C,GAAIoC,IAAKC,KACToE,MAAO,IAETqG,EAAS,CACP/M,KDjakB,WCkalB8L,QAAS,CACP7L,KACAkM,cAsEA1H,aAjEe,SAAC5B,EAAS2B,EAAQ4H,GACrCW,EAAS,CACP/M,KD1awB,iBC2axB8L,QAAS,CACPjJ,UACA2B,SACA4H,eA4DA5F,QAtDU,SAACzD,EAAMyB,EAAQ3B,GAC7B,IAAM0G,EAAU,CACdxG,OACA9C,GAAIoC,IAAKC,KACToK,OAAQ,IAEVK,EAAS,CACP/M,KD1bkB,WC2blB8L,QAAS,CACPvC,UACA/E,SACA3B,cA4CAoG,WAtCa,SAACpG,EAAS2B,EAAQ6H,EAAQ9C,GAC3CwD,EAAS,CACP/M,KDrcqB,cCscrB8L,QAAS,CACPjJ,UACA2B,SACA6H,SACA9C,cAgCAU,WA3Ba,SAACpH,EAAS2B,EAAQ6H,GACnCU,EAAS,CACP/M,KDhdqB,cCidrB8L,QAAS,CACPjJ,UACA2B,SACA6H,eAwBDG,EAAMe,W,mjBCjfE,eAAC3B,EAAOC,GACrB,OAAQA,EAAO7L,MACb,IFMqB,YELnB,OAAO,KACF4L,EADL,CAEEN,OAAQ,CAACO,EAAOC,WAEpB,IFEwB,eEDtB,OAAO,KACFF,EADL,CAEEN,OAAQM,EAAMN,OAAOgB,OAAO,SAAAf,GAAC,OAAIA,EAAEtL,KAAO4L,EAAOC,YAErD,QACE,OAAOF,ICuCE4B,EAhDI,SAAAhB,GACjB,IAD0B,EAKAK,qBAAWY,EAJhB,CACnBnC,OAAQ,KAFgB,mBAKnBM,EALmB,KAKZmB,EALY,KA4BpB5B,EAAc,SAAClL,GACnB8M,EAAS,CACP/M,KHzBsB,eG0BtB8L,QAAS7L,KAIb,OACE,kBAAC,EAAa+M,SAAd,CACErJ,MAAO,CACL2H,OAAQM,EAAMN,OACd7J,SA/BW,SAAC2J,EAAKpL,EAAM0N,GAE3B,IAAgC,IADb9B,EAAMN,OAAOpK,IAAI,SAAAqK,GAAC,OAAIA,EAAEH,MAC7BiC,QAAQjC,GAAa,CACjC,IAAMuC,EAAW,CACfvC,MACAnL,GAAIoC,IAAKC,KACTtC,QAGF+M,EAAS,CACP/M,KHdiB,YGejB8L,QAAS6B,IAGXtI,WAAW,WACT8F,EAAYwC,EAAS1N,KACpByN,GAAc,OAgBfvC,gBAGDqB,EAAMe,W,mjBCpCE,eAAC3B,EAAOC,GACrB,OAAQA,EAAO7L,MACb,IJDgC,uBIE/B,OAAO,KACF4L,EADL,CAEEtM,eAAgBuM,EAAOC,UAE1B,IJLkC,yBIMhC,OAAO,KACFF,EADL,CAEEtM,eAAgB,OAEpB,IJT+B,sBIU7B,OAAO,KACFsM,EADL,CAEElH,cAAemH,EAAOC,UAE1B,IJbiC,wBIc/B,OAAO,KACFF,EADL,CAEElH,cAAe,OAEnB,IJX4B,mBIY1B,OAAO,KACFkH,EADL,CAEEjD,YAAakD,EAAOC,UAExB,IJf8B,qBIgB5B,OAAO,KACFF,EADL,CAEEjD,YAAa,OAEjB,IJ3B0B,iBI4BxB,OAAO,KACFiD,EADL,CAEE1J,UAAW2J,EAAOC,UAEtB,IJ/BqB,YIgCnB,OAAO,KACFF,EADL,CAEElC,YAAamC,EAAOC,UAExB,IJnC0B,iBIoCxB,OAAO,KACFF,EADL,CAEEjC,UAAWkC,EAAOC,UAEtB,IJvC6B,oBIwC3B,OAAO,KACFF,EADL,CAEEvB,mBAAoBwB,EAAOC,UAE/B,IJ3CkC,yBI4ChC,OAAO,KACFF,EADL,CAEEtB,iBAAkBuB,EAAOC,UAE7B,IJ/CmC,0BIgDjC,OAAO,KACFF,EADL,CAEE7C,iBAAkB8C,EAAOC,UAE7B,IJjDyB,gBIkDvB,OAAO,KACFF,EADL,CAEErB,SAAUsB,EAAOC,UAErB,QACE,OAAOF,ICuGEgC,EAxKG,SAAApB,GAChB,IADyB,EAcCK,qBAAWgB,EAbhB,CACnBvO,eAAgB,KAChBoF,cAAe,KACfiE,YAAa,KACbzG,UAAW,GACX4L,YAAa,MACbnE,UAAW,KACXU,mBAAoB,MACpB0D,iBAAkB,KAClBhF,iBAAkB,KAClBiF,SAAU,KAXa,mBAclBpC,EAdkB,KAcXmB,EAdW,KAyBnBkB,EAAiB,SAAChO,GACtB,IAAMiO,EAAetC,EAAM1J,UACA,IAAxBgM,EAAa/L,QAAuB,OAAPlC,GAC9BiO,EAAaC,QACbD,EAAahC,KAAKjM,IACH,OAAPA,GACRiO,EAAahC,KAAKjM,GAEpB8M,EAAS,CACP/M,KLhCwB,iBKiCxB8L,QAASoC,KAiDPE,EAAe,SAACpO,GACpB+M,EAAS,CACP/M,KLlFwB,iBKmFxB8L,QAAS9L,KAIPqO,EAAiB,WACrBtB,EAAS,CACP/M,KLzFwB,iBK0FxB8L,QAAS,QAgBPwC,EAAsB,SAACtO,GAC3B+M,EAAS,CACP/M,KL1GgC,yBK2GhC8L,QAAS9L,KAIPuO,EAAwB,WAC5BxB,EAAS,CACP/M,KLjHgC,yBKkHhC8L,QAAS,QAkBb,OACE,kBAAC,EAAYkB,SAAb,CACErJ,MAAO,CACLrE,eAAgBsM,EAAMtM,eACtBoF,cAAekH,EAAMlH,cACrBiE,YAAaiD,EAAMjD,YACnBzG,UAAW0J,EAAM1J,UACjBwH,YAAakC,EAAMlC,YACnBC,UAAWiC,EAAMjC,UACjBU,mBAAoBuB,EAAMvB,mBAC1BC,iBAAkBsB,EAAMtB,iBACxBvB,iBAAkB6C,EAAM7C,iBACxBwB,SAAUqB,EAAMrB,SAChBnK,kBAvIoB,SAACH,GACzB8M,EAAS,CACP/M,KLpB8B,uBKqB9B8L,QAAS7L,IAEXgO,EAAehO,IAmIXZ,oBAhHsB,WAC1B0N,EAAS,CACP/M,KL3CgC,4BK0J9BkG,iBA3GmB,SAACjG,GACxB8M,EAAS,CACP/M,KLhD6B,sBKiD7B8L,QAAS7L,KAyGPuO,mBArGqB,WACzBzB,EAAS,CACP/M,KLtD+B,2BK0J7B+E,eAhGiB,SAAC0J,GACtB1B,EAAS,CACP/M,KLrD0B,mBKsD1B8L,QAAS2C,KA8FPzF,iBA1FmB,WACvB+D,EAAS,CACP/M,KL3D4B,wBKoJ1BT,SArFW,SAACmP,EAAQ1O,GACxB+M,EAAS,CACP/M,KLvEmB,YKwEnB8L,QAAS4C,IAEG,QAAXA,EACDL,IACmB,OAAXK,GACRN,EAAapO,IA8EXmG,gBA5DkB,SAACuI,EAAQ1O,GAC/B+M,EAAS,CACP/M,KL/F2B,oBKgG3B8L,QAAS4C,IAEG,QAAXA,EACDH,IACmB,OAAXG,GACRJ,EAAoBtO,IAqDlBgF,oBAnCsB,SAACwF,GAC3BuC,EAAS,CACP/M,KLvHiC,0BKwHjC8L,QAAStB,KAiCPiB,YA7Bc,SAACb,EAAGE,GACtBiC,EAAS,CACP/M,KL3HuB,gBK4HvB8L,QAAS,CAAClB,IAAGE,UA6BZ0B,EAAMe,WClKboB,IAASC,OAAO,kBAZO,WACrB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,UAOM,MAAoBtL,SAASuL,eAAe,W","file":"static/js/main.63164ed6.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;","import { createContext } from 'react';\r\n\r\nconst BoardContext = createContext();\r\n\r\nexport default BoardContext;\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst Navbar = () => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { clearCurrentBoardId, currentBoardId, setModal } = userContext;\r\n  const { getBoard } = boardContext;\r\n\r\n  const homeClicked =() => {\r\n    clearCurrentBoardId();\r\n  }\r\n\r\n  const addClicked = () => {\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  const navbarStyle = {\r\n    background: getBoard(currentBoardId) && getBoard(currentBoardId).color\r\n  }\r\n\r\n  const titleTextStyle = {\r\n    color: getBoard(currentBoardId) ? getBoard(currentBoardId).color : '#388d6a'\r\n  }\r\n\r\n  return (\r\n    <div className='trello-navbar' style={navbarStyle}>\r\n      <div>\r\n        <div className='btn btn-square btn-transparent rounded' onClick={homeClicked}>\r\n          <i className='fa fa-home'></i>\r\n        </div>\r\n        <div className='btn btn-narrow btn-transparent rounded'>\r\n          <i className='mr-1 fa fa-notes-medical'></i>\r\n          boards\r\n        </div>\r\n        <div className='d-i-b rounded'>\r\n          <input type='text' className='m-0 bg-light op-8 border-0 rounded' id='search-input'/>\r\n        </div>\r\n      </div>\r\n      <div className='mr-5'>\r\n        <div className='text-white text-bold cursor-p border border-white border-bottom-0'>\r\n          <div className='mr'>\r\n            trello\r\n          </div>\r\n          <div \r\n            className='bg-white d-i-b border-0 pl'\r\n            style={titleTextStyle}>\r\n            clone\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className='btn btn-square btn-transparent rounded' onClick={addClicked}>\r\n          <i className='fa fa-plus'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst SideListItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n\r\n  const [isHover, setIsHover] = useState(false);\r\n\r\n  const hoverStyle = isHover ? {\r\n    background: board.color,\r\n    color: '#f4f4f4',\r\n    opacity: '0.7'\r\n  } : {\r\n    opacity: '1'\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    setIsHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setIsHover(false);\r\n  }\r\n\r\n  const onClick = () => {\r\n    setCurrentBoardId(board.id)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      onClick={onClick}\r\n      className=\"card pl-1 cursor-p p border-0 rounded-lg text-dark transition text-bold\"\r\n      style={hoverStyle}\r\n      >\r\n      { board.title.charAt(0).toUpperCase() + board.title.slice(1) }\r\n      { <i className=\"fa fa-check m-0 float-right\"></i> }\r\n    </div> \r\n  );\r\n};\r\n\r\nexport default SideListItem","import React, { useContext } from 'react';\r\nimport SideListItem from './SideListItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst HomeSideList = () => {\r\n  const { boards } = useContext(BoardContext);\r\n\r\n  return (\r\n    <aside>\r\n      <button className=\"btn btn-block btn-primary text-left rounded-lg\">\r\n        <i className=\"fa fa-notes-medical mr-1\"></i>\r\n        <div className=\"text-bold d-i-b\">Boards</div>\r\n      </button>\r\n      { boards.map(b => (\r\n        <SideListItem key={b.id} board={b} />\r\n      )) }\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default HomeSideList\r\n","import { createContext } from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext;","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst HomeMainItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n  const { setStar } = boardContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const itemStyle = {\r\n    background: board.color\r\n  }\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('fa-star')) {\r\n      setCurrentBoardId(board.id);\r\n    }\r\n  }\r\n\r\n  const onStarClicked = () => {\r\n    setStar(board.id);\r\n    setAlert(`${board.starred ? 'board added to favorites' : 'board removed from favorites'}`, `${board.starred ? 'success' : 'dark'}`, 2500);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='trello-home-main-item mt-1 mr-1'\r\n      style={itemStyle}\r\n      onClick={onClick}>\r\n        <div className='text-white func-title'>\r\n          { board.title.charAt(0).toUpperCase() + board.title.slice(1) }\r\n        </div>\r\n        <div\r\n          className='trello-home-main-item-star'\r\n          onClick={onStarClicked}>\r\n          <i className={`fa-star ${board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeMainItem\r\n","import React, { Fragment, useContext } from 'react';\r\nimport uuid from 'uuid';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst Recent = () => {\r\n  const boardContext = useContext(BoardContext);\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { getRecentBoards } = boardContext;\r\n  const { recentIds } = userContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      { getRecentBoards(recentIds).length !== 0\r\n        &&  <div className=\"card border-top-0 border-right-0 border-left-0 pb-2\">\r\n              <i className=\"fa fa-clock mr-1\"></i>\r\n              Recent borads\r\n              <div className=\"\">\r\n                { getRecentBoards(recentIds).map(r => (\r\n                      <HomeMainItem key={uuid.v4()} board={r} />\r\n                    ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Recent\r\n","import React, { Fragment, useContext } from 'react';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Starred = () => {\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { getStarredBoards } = boardContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      { getStarredBoards().length !== 0\r\n        &&  <div className=\"card border-top-0 border-right-0 border-left-0 pb-2\">\r\n              <i className=\"fa fa-star mr-1\"></i>\r\n              favorite borads\r\n              <div className=\"\">\r\n                { getStarredBoards().map(s => (\r\n                      <HomeMainItem key={s.id} board={s} />\r\n                    ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Starred\r\n","import React, { useContext } from 'react';\r\nimport Recent from './Recent';\r\nimport Starred from './Starred';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst HomeMain = () => {\r\n  const { setModal } = useContext(UserContext);\r\n\r\n  const onAdd = () => {\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  return (\r\n    <main className='text-bold'>\r\n      <Starred />\r\n      <Recent />\r\n      <div className='card border-0'>\r\n        <div className='trello-home-main-item hover' onClick={onAdd}>\r\n          Add Board\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default HomeMain\r\n","import React from 'react';\r\nimport HomeSideList from './HomeSideList';\r\nimport HomeMain from './HomeMain';\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container grid-1-3 mt-3\">\r\n      <HomeSideList />\r\n      <HomeMain />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardTitle = ({ boardId, title, setTitle }) => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [text, setText] = useState('');\r\n  const [isSettingTitle, setIsSettingTitle] = useState(false);\r\n  const [textHasChanged, setTextHasChanged] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setText(title);\r\n    document.querySelector(`#board-title-${boardId}`).focus()\r\n    // eslint-disable-next-line\r\n  }, [isSettingTitle])\r\n\r\n  const onClick = () => {\r\n    setIsSettingTitle(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n    setTextHasChanged(true);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    onSetTitle();\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetTitle();\r\n    }\r\n  }\r\n\r\n  const onSetTitle = () => {\r\n    if(textHasChanged) {\r\n      if(text !== '') {\r\n        setTitle(text, currentBoardId);\r\n        setAlert('board title changed', 'success');\r\n        setIsSettingTitle(false);\r\n      } else {\r\n        setIsSettingTitle(false);\r\n        setAlert('board title can not be empty', 'danger');\r\n      }\r\n    } else {\r\n      setIsSettingTitle(false);\r\n      setTextHasChanged(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='d-i-b'>\r\n      <div\r\n        className={`text-white m-0 ml-1 ${isSettingTitle && 'd-n'}`}\r\n        onClick={onClick}>\r\n        { title.charAt(0).toUpperCase() + title.slice(1) }\r\n      </div>\r\n      <input\r\n        type='text'\r\n        id={`board-title-${boardId}`}\r\n        className={`m-0 rounded ${!isSettingTitle && 'd-n'}`}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        value={text}\r\n        onKeyUp={onKeyUp}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardTitle\r\n","import React, { useState, useContext } from 'react';\r\nimport BoardTitle from './BoardTitle';\r\n\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardNavbar = ({ board, setStar, setDescribtion, setTitle }) => {\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const [descText, setDescText] = useState('');\r\n  const [isSettingDesc, setIsSettingDesc] = useState(false);\r\n  \r\n  const onStarClick = () => {\r\n    setStar(board.id);\r\n    setAlert(`${board.starred ? 'board added to favorites' : 'board removed from favorites'}`, `${board.starred ? 'success' : 'dark'}`, 2000);\r\n  }\r\n\r\n  const onDescClick =() => {\r\n    setIsSettingDesc(true);\r\n    setDescText(board.describtion);\r\n    document.querySelector('#describtion-input').focus();\r\n  }\r\n\r\n  const onDescTextChange = (e) => {\r\n    e.target.value.length < 51\r\n      ? setDescText(e.target.value)\r\n      : setAlert('describtion can not be longer than 50 chars!!!', 'warning', 4000)\r\n  }\r\n\r\n  const onSetDesc = () => {\r\n    setDescribtion(descText, board.id);\r\n    setAlert('board describtion changed successfully', 'success');\r\n    setIsSettingDesc(false);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetDesc();\r\n    }\r\n  }\r\n\r\n  const navbarStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-navbar trello-navbar lighten-20' style={navbarStyle}>\r\n      <div className='card border-0 m-0 p-0'>\r\n        { board && <BoardTitle boardId={board.id} title={board.title} setTitle={setTitle} /> }\r\n        <div className='btn btn-transparent btn-square rounded ml-1' onClick={onStarClick}>\r\n          <i className={`fa-star ${board && board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n        <div className='ml-1 d-i-b text-white'>\r\n          { \r\n            board\r\n            && !isSettingDesc\r\n              && (board.describtion ? board.describtion : 'no describtion')\r\n          }\r\n        <input\r\n          type='text'\r\n          id='describtion-input'\r\n          className={`m-0 rounded ${!isSettingDesc && 'd-n'}`}\r\n          value={descText}\r\n          onChange={onDescTextChange}\r\n          onBlur={onSetDesc}\r\n          onKeyUp={onKeyUp} />\r\n        </div>\r\n        <div className='btn btn-transparent btn-square rounded ml-1' onClick={onDescClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n      </div>\r\n      <div className='btn text-sm btn-narrow btn-transparent'>\r\n        <i className=\"fas fa-ellipsis-h mr\"></i>\r\n        Show Menu\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardNavbar\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst ListTitle = ({ listId, title, setListTitle }) => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { currentBoardId, currentListId } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [text, setText] = useState('');\r\n  const [isSettingTitle, setIsSettingTitle] = useState(false);\r\n  const [textHasChanged, setTextHasChanged] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setText(title);\r\n    document.querySelector(`#list-title-${listId}`).focus()\r\n    // eslint-disable-next-line\r\n  }, [isSettingTitle])\r\n\r\n  const onClick = () => {\r\n    setIsSettingTitle(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n    setTextHasChanged(true);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    onSetListTitle();\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetListTitle();\r\n    }\r\n  }\r\n\r\n  const onSetListTitle = () => {\r\n    if(textHasChanged) {\r\n      if(text !== '') {\r\n        setListTitle(currentBoardId, currentListId, text);\r\n        setAlert('list title changed', 'success');\r\n        setIsSettingTitle(false);\r\n      } else {\r\n        setIsSettingTitle(false);\r\n        setAlert('list title can not be empty', 'warning');\r\n      }\r\n    } else {\r\n      setIsSettingTitle(false);\r\n      setTextHasChanged(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='d-i-b m-0'>\r\n      <div\r\n        className={`pt-1 mb pl m-0 ${isSettingTitle && 'd-n'}`}\r\n        onClick={onClick}>\r\n        { title }\r\n      </div>\r\n      <input\r\n        type='text'\r\n        id={`list-title-${listId}`}\r\n        value={text}\r\n        className={`m-0 mt p-0 pt pb pl text-bold text-80 border-0 rounded ${!isSettingTitle && 'd-n'}`}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        onKeyUp={onKeyUp}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListTitle\r\n","import React, { useContext } from 'react'\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst BoardListItem = ({ item }) => {\r\n  const { setCurrentCard, setModal, setFastEditModalPos } = useContext(UserContext);\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('func-e-btn') && !e.target.parentElement.classList.contains('func-e-btn')) {\r\n      setModal('on', 'detailsModal');\r\n    }\r\n    setCurrentCard(item);\r\n  }\r\n\r\n  const onEBtnClick = (e) => {\r\n    console.log('use useRef here for setFastEditModalPos')\r\n    if(e.target.classList.contains('func-e-btn')) {\r\n      setFastEditModalPos({\r\n        top: e.target.parentElement.getBoundingClientRect().top,\r\n        left: e.target.parentElement.getBoundingClientRect().left,\r\n        width: e.target.parentElement.getBoundingClientRect().width\r\n      });\r\n    } else {\r\n      setFastEditModalPos({\r\n        top: e.target.parentElement.parentElement.getBoundingClientRect().top,\r\n        left: e.target.parentElement.parentElement.getBoundingClientRect().left,\r\n        width: e.target.parentElement.parentElement.getBoundingClientRect().width\r\n      });\r\n    }\r\n    setModal('on', 'fastEditModal');\r\n  }\r\n\r\n  let timer;\r\n  const touchduration = 500;\r\n\r\n  const onTouchStart = () => {\r\n    timer = setTimeout(onlongtouch, touchduration); \r\n  }\r\n\r\n  const onTouchEnd = () => {\r\n    if (timer) {\r\n      clearTimeout(timer); // clearTimeout, not cleartimeout..\r\n    }\r\n  }\r\n\r\n  const onlongtouch = () => {\r\n    alert('long touch');\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='trello-board-list-item'\r\n      onClick={onClick}\r\n      onTouchStart={onTouchStart}\r\n      onTouchEnd={onTouchEnd}>\r\n        <div>\r\n          { item.text }\r\n          <div className='text-sm'>\r\n            { item.desc && item.desc }\r\n          </div>\r\n        </div>\r\n        <div className='func-e-btn trello-board-list-item-edit-btn mobile-d-n' onClick={onEBtnClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardListItem\r\n","import React, { Fragment, useState, useContext } from 'react';\r\nimport ListTitle from './ListTitle';\r\nimport BoardListItem from './BoardListItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardList = ({ list, boardFuncs /* all of board context */ }) => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { setCurrentListId, currentBoardId, setOptionsModal } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [wantToAddCard, setWantToAddCard] = useState(false);\r\n  const [newCardText, setNewCardText] = useState('');\r\n\r\n  const onAddCardClick = () => {\r\n    !wantToAddCard && setWantToAddCard(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setNewCardText(e.target.value);\r\n  }\r\n\r\n  const onTextareaBlur = () => {\r\n    if(newCardText !== '') {\r\n      addCard();\r\n    } else {\r\n      cancelAddCard();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13 && newCardText.length > 1) {\r\n      addCard();\r\n    } else if(e.keyCode === 13 && newCardText.length === 1) {\r\n      setNewCardText('');\r\n    }\r\n  }\r\n\r\n  const addCard = () => {\r\n    if(newCardText !== '') {\r\n      // three parameters: 1.text 2.list id 3.board id\r\n      boardFuncs.addCard(newCardText, list.id, currentBoardId);\r\n      setAlert('card added', 'success');\r\n      setNewCardText('');\r\n    }\r\n  }\r\n\r\n  const cancelAddCard = () => {\r\n    setWantToAddCard(false);\r\n    setNewCardText('');\r\n  }\r\n\r\n  const onListCLick = () => {\r\n    setCurrentListId(list.id);\r\n  }\r\n\r\n  const onlistOptionsClick = () => {\r\n    setOptionsModal('on', 'listActions');\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-list' onClick={onListCLick}>\r\n      <div className='trello-board-list-header'>\r\n        <ListTitle listId={list.id} title={list.title} setListTitle={boardFuncs.setListTitle} />\r\n        <div className='btn bg-transparent-with-hover btn-square float-right mt' onClick={onlistOptionsClick}>\r\n          <i className='fas fa-ellipsis-h'></i>\r\n        </div>\r\n      </div>\r\n      <div className='trello-board-list-items'>\r\n        { list.items.map((i, index) => (\r\n          <BoardListItem key={i.id} item={i} />\r\n        )) }\r\n        <div className={`trello-board-list-item trello-board-card-compose  ${!wantToAddCard && 'd-n'}`}>\r\n          <textarea\r\n            className='trello-board-card-compose-textarea'\r\n            autoFocus\r\n            placeholder='Enter a title for this card'\r\n            onBlur={onTextareaBlur}\r\n            onKeyUp={onKeyUp}\r\n            onChange={onChange}\r\n            value={newCardText}>\r\n\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`trello-board-footer ${!wantToAddCard && 'hover cursor-p'}`}\r\n        onClick={onAddCardClick}>\r\n        { !wantToAddCard\r\n          ?  (<div>\r\n                {list.items.length === 0 ? '+ Add a card' : '+ Add another card'}\r\n              </div>) \r\n          : (\r\n            <Fragment>\r\n              <div className='btn btn-success' onClick={addCard}>\r\n                Add Card\r\n              </div>\r\n              <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddCard}>\r\n                &times;\r\n              </div>\r\n            </Fragment>\r\n          )  \r\n        }      \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardList\r\n","import React, { Fragment, useState, useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst AddList = ({ board, setScrollIflonger }) => {\r\n  const boardContext = useContext(BoardContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { addList } = boardContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [text, setText] = useState('')\r\n\r\n  const onClick = () => {\r\n    setIsAdding(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    if(text !== '') {\r\n      onAddList();\r\n    } else {\r\n      cancelAddList();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAddList();\r\n    }\r\n  }\r\n\r\n  const onAddList = () => {\r\n    if(text !== '') {\r\n      addList(text, board.id);\r\n      setAlert(`list ${text} added`, 'success');\r\n      setText('');\r\n      setScrollIflonger();\r\n    } else {\r\n      setAlert(`list title can not be empty`, 'warning');\r\n    }\r\n  }\r\n\r\n  const cancelAddList = () => {\r\n    setIsAdding(false);\r\n    setText('');\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`trello-board-add-list-btn btn-light op-8 darken-20 text-dark ${isAdding && 'd-n'}`}\r\n        onClick={onClick}>\r\n          { board && board.lists.length === 0 ? '+ Add a list' : '+ Add another list' }\r\n      </div>\r\n      <div\r\n        className={`trello-board-add-list-form btn-light op-9 darken-20 text-dark ${!isAdding && 'd-n'}`}>\r\n          <input\r\n            type='text'\r\n            className='m-0 rounded-lg mb-1'\r\n            placeholder='Enter list name'\r\n            value={text}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            onKeyUp={onKeyUp}/>\r\n          <div className='btn btn-success' onClick={onAddList}>\r\n            Add List\r\n          </div>\r\n          <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddList}>\r\n            &times;\r\n          </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddList\r\n","import React, { useState, useEffect } from 'react';\r\nimport BoardList from './BoardList';\r\nimport AddList from './AddList';\r\n\r\nconst BoardMain = ({ board, boardFuncs /* contains all of board context  */ }) => {\r\n  const [style, setStyle] = useState({});\r\n\r\n  useEffect(() => {\r\n    setScrollIflonger();\r\n    // eslint-disable-next-line\r\n  }, [board]);\r\n\r\n  const setScrollIflonger = () => {\r\n    const boardWidth = (board.lists.length + 1) * 270;\r\n\r\n    if(16 + boardWidth > window.innerWidth) {\r\n      setStyle({\r\n        display: 'grid',\r\n        gridTemplateRows: '1fr',\r\n        gridTemplateColumns: `repeat(${board && board.lists.length + 1}, 1fr)`\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-main' style={style}>\r\n      { board.lists.map(l => (\r\n          <div key={l.id} className='trello-board-list-wrapper'>\r\n            <BoardList list={l} boardFuncs={boardFuncs} />\r\n          </div>\r\n        )) }\r\n      <div className='trello-board-list-wrapper'>\r\n        <AddList board={board} setScrollIflonger={setScrollIflonger} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardMain\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport BoardNavbar from './BoardNavbar';\r\nimport BoardMain from './BoardMain';\r\n\r\n// context\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\n// css\r\nimport './board.css';\r\n\r\nconst Board = () => {\r\n  const [board, setBoard] = useState(null);\r\n\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { getBoard, setStar, setDescribtion, setTitle } = boardContext;\r\n\r\n  useEffect(() => {\r\n    setBoard(getBoard(currentBoardId));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const boardStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <BoardNavbar\r\n        board={board}\r\n        setStar={setStar}\r\n        setDescribtion={setDescribtion}\r\n        setTitle={setTitle} />\r\n      <div className='trello-board-main-wrapper lighten-20 p' style={boardStyle}>\r\n        {board && <BoardMain boardFuncs={boardContext} board={board} />}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nimport './modals.css';\r\n\r\nconst AddBoardModal = () => {\r\n  const { setModal, clearCurrentBoardId } = useContext(UserContext);\r\n  const { addBoard } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const [bg, setBg] = useState('#ee3a59');\r\n  const [text, setText] = useState('');\r\n\r\n  const onBgClicked = (e) => {\r\n    if(!e.target.classList.contains('func-no-click') && !e.target.classList.contains('func-colors')) {\r\n      setBg(e.target.id);\r\n    }\r\n  }\r\n\r\n  const onClose = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAdd();\r\n    }\r\n  }\r\n\r\n  const onAdd = () => {\r\n    if(text !== '') {\r\n      addBoard(text, bg);\r\n      onClose();\r\n      setAlert(`board ${text.charAt(0).toUpperCase() + text.slice(1)} was created`, 'success', 4000);\r\n      clearCurrentBoardId();\r\n    }\r\n  }\r\n\r\n  const bgColor = {\r\n    backgroundColor: bg\r\n  }\r\n\r\n  return (\r\n    <div className='modal-content add-board-modal-content'>\r\n      <div className='grid-3-1'>\r\n        <div className='p-1 grid-3-1 rounded-lg' style={bgColor}>\r\n          <div>\r\n            <input\r\n              type='text'\r\n              placeholder='Add board title'\r\n              value={text}\r\n              onChange={onChange}\r\n              onKeyUp={onKeyUp}\r\n              className='m-0 border-0 text-bold text-light pl-1 rounded'/>\r\n          </div>\r\n          <div>\r\n            <div className='close' onClick={onClose}>\r\n              &times;\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='func-colors grid-3 gap-half' onClick={onBgClicked}>\r\n          <div id='#ee3a59' className='rounded-lg p-1 background-red cursor-p'></div>\r\n          <div id='#e27b47' className='rounded-lg p-1 background-orange cursor-p'></div>\r\n          <div id='#efca58' className='rounded-lg p-1 background-yellow cursor-p'></div>\r\n          <div id='#46b29e' className='rounded-lg p-1 background-blue-l cursor-p'></div>\r\n          <div id='#344e5c' className='rounded-lg p-1 background-blue-d cursor-p'></div>\r\n          <div className='func-no-click'></div>\r\n          <div id='custom' className='rounded-lg p-1 bg-light cursor-p'></div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        onClick={onAdd}\r\n        className={`btn btn-narrow m text-bold ${text !== '' ? 'btn-success' : 'cursor-not-allowed'}`}>\r\n          Create Board\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddBoardModal\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nconst DetailsModal = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setModal, currentCard } = userContext;\r\n\r\n  const onClose = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  return (\r\n    <div className='details-modal-container'>\r\n      <div className='details-modal-header'>\r\n        <div className='close text-lg' onClick={onClose}>\r\n          &times;\r\n        </div>\r\n        <i className='fas fa-th-list mr-1'></i>\r\n        { currentCard.text }\r\n      </div>\r\n      <div className='details-modal-body'>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailsModal\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst FastEditModal = () => {\r\n  const theTextarea = useRef(null);\r\n\r\n  const {\r\n    currentBoardId,\r\n    currentListId,\r\n    fastEditModalPos,\r\n    currentCard,\r\n    clearCurrentCard,\r\n    setOptionsModal,\r\n    setModal } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  useEffect(() => {\r\n    setText(currentCard.text);\r\n    theTextarea.current.focus();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const modalPos = {\r\n    position: 'absolute',\r\n    top: fastEditModalPos.top + 'px',\r\n    left: fastEditModalPos.left + 'px'\r\n  }\r\n\r\n  const rightWidth = {\r\n    width: fastEditModalPos.width + 'px'\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onUpdate();\r\n    }\r\n  }\r\n\r\n  const onUpdate = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      text\r\n    }\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    clearCurrentCard();\r\n    setModal('off');\r\n  }\r\n\r\n  const onAtionsClick = (e) => {\r\n    if(e.target.classList.contains('fas')) {\r\n      setOptionsModal('on', e.target.parentElement.id);\r\n    } else if(e.target.classList.contains('func-action-btn')) {\r\n      setOptionsModal('on', e.target.id);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={modalPos} className='modal-content grid-2 gap-half'>\r\n      <div style={rightWidth} className='fast-edit-modal-right'>\r\n        <textarea\r\n          ref={theTextarea}\r\n          className='m-0 border-0'\r\n          value={text}\r\n          onChange={onChange}\r\n          onKeyUp={onKeyUp}>\r\n        </textarea>\r\n        <div className='btn btn-success mt-1' onClick={onUpdate}>\r\n          Save\r\n        </div>\r\n      </div>\r\n      <div className='fast-edit-modal-action-container' onClick={onAtionsClick}>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='editLabels'>\r\n            <i className='fas fa-tag mr'></i>\r\n            Edit labels\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='members'>\r\n            <i className='fas fa-user mr'></i>\r\n            Change members\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='move'>\r\n            <i className='fas fa-arrow-right mr'></i>\r\n            Move\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='deleteCard'>\r\n            <i className='fas fa-trash mr'></i>\r\n            Delete card\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FastEditModal\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport AddBoardModal from './AddBoardModal';\r\nimport DetailsModal from './DetailsModal';\r\nimport FastEditModal from './FastEditModal';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nimport './modals.css';\r\n\r\nconst Modal = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { modalStatus, modalType, setModal } = userContext;\r\n\r\n  const [showModal, setShowModal] = useState('off');\r\n  \r\n  useEffect(() => {\r\n    setShowModal(modalStatus/* from useState */);\r\n    // eslint-disable-next-line\r\n  }, [modalStatus])\r\n\r\n  const onClick = (e) => {\r\n    if(e.target.classList.contains('modal')) {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const modalDisplay = {\r\n    display: showModal === 'on' ? 'block' : 'none'\r\n  }\r\n\r\n  return (\r\n    <div \r\n      style={modalDisplay}\r\n      className='modal'\r\n      onClick={onClick}>\r\n      {\r\n        modalType === 'addBoardModal' && <AddBoardModal />\r\n      }\r\n      {\r\n        modalType === 'detailsModal' && <DetailsModal />\r\n      }\r\n      {\r\n        modalType === 'fastEditModal' && <FastEditModal />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useContext } from 'react'\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst DeleteCard = () => {\r\n  const { currentBoardId, currentListId, currentCard, setModal, setOptionsModal } = useContext(UserContext);\r\n  const { deleteCard } = useContext(BoardContext);\r\n\r\n  const onClick = () => {\r\n    deleteCard(currentBoardId, currentListId, currentCard.id);\r\n    setModal('off');\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='text-85 m mb-1'>\r\n        are you sure you want to delete this card?\r\n        its permanent\r\n      </div>\r\n      <div className='btn btn-danger btn-block hover-op-10 hover-lighten' onClick={onClick}>\r\n        Delete\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteCard\r\n","import React, { useContext } from 'react'\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst EditLabels = () => {\r\n  const { currentBoardId, currentListId, currentCard, setModal, setOptionsModal } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  return (\r\n    <div>\r\n      search labels\r\n      add labels\r\n      create label\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditLabels\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport DeleteCard from './options/DeleteCard';\r\nimport EditLabels from './options/EditLabels';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nimport './modals.css';\r\n\r\nconst OptionsModal = () => {\r\n  const container = useRef(null);\r\n\r\n  const userContext = useContext(UserContext);\r\n\r\n  const {\r\n    optionsModalStatus,\r\n    optionsModalType,\r\n    mousePos,\r\n    setOptionsModal} = userContext;\r\n\r\n  const [showModal, setShowModal] = useState('off');\r\n  const [pos, setPos] = useState({});\r\n  \r\n  useEffect(() => {\r\n    setShowModal(optionsModalStatus/* from useState */);\r\n    setTimeout(() => {\r\n      // console.log(container.current ? container.current.getBoundingClientRect() : null)\r\n    }, 0);\r\n    setOptionsPos();\r\n    // eslint-disable-next-line\r\n  }, [optionsModalStatus, mousePos])\r\n\r\n  const onClick = (e) => {\r\n    if(e.target.id === 'options-modal') {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const modalDisplay = {\r\n    display: showModal === 'on' ? 'block' : 'none'\r\n  }\r\n\r\n  const setOptionsPos = () => {\r\n    setTimeout(() => {\r\n      if(mousePos) {\r\n        let rect;\r\n        rect = container.current.getBoundingClientRect();\r\n\r\n        if(window.innerWidth - mousePos.x < rect.width && window.innerHeight - mousePos.y > rect.height) {\r\n          setPos({\r\n            right: 10,\r\n            top: mousePos.y + 10 + 'px'\r\n          });\r\n        } else if(window.innerHeight - mousePos.y < rect.height && window.innerWidth - mousePos.x > rect.width) {\r\n          setPos({\r\n            left: mousePos.x + 10 + 'px',\r\n            bottom: 10\r\n          })\r\n        } else if(window.innerHeight - mousePos.y < rect.height && window.innerWidth - mousePos.x < rect.width) {\r\n            setPos({\r\n            right: 10,\r\n            bottom: 10\r\n          })\r\n        } else {\r\n          setPos({\r\n            left: mousePos.x + 10 + 'px',\r\n            top: mousePos.y + 10 + 'px'\r\n          })\r\n        }\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  return (\r\n    <div \r\n      style={modalDisplay}\r\n      id='options-modal'\r\n      onClick={onClick}>\r\n        <div ref={container} className='options-modal-container' style={pos}>\r\n          <div className='options-modal-header'>\r\n            <div className=\"close\" onClick={closeModal}>\r\n              &times;\r\n            </div>\r\n            {\r\n              optionsModalType === 'editLabels' && 'Labels'\r\n            }\r\n            {\r\n              optionsModalType === 'move' && 'Move card'\r\n            }\r\n            {\r\n              optionsModalType === 'members' && 'Members'\r\n            }\r\n            {\r\n              optionsModalType === 'deleteCard' && 'Delete card'\r\n            }\r\n            {\r\n              optionsModalType === 'deleteList' && 'Delete list?'\r\n            }\r\n            {\r\n              optionsModalType === 'listActions' && 'List actions'\r\n            }\r\n          </div>\r\n          <div className='options-modal-body'>\r\n            {\r\n              optionsModalType === 'deleteCard' && <DeleteCard />\r\n            }\r\n            {\r\n              optionsModalType === 'editLabels' && <EditLabels />\r\n            }\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OptionsModal\r\n","import React from 'react'\r\n\r\nconst AlertItem = ({ alert, deleteAlert }) => {\r\n  const onClick = () => {\r\n    deleteAlert(alert.id);\r\n  }\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      className={`trello-alert-item alert rounded-lg alert-${alert.type}`}>\r\n        <div className='trello-alert-item-msg'>\r\n          { alert.msg.charAt(0).toUpperCase() + alert.msg.slice(1) }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertItem\r\n","import React, { useContext } from 'react';\r\nimport AlertItem from './AlertItem';\r\n\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alerts = () => {\r\n  const { alerts, deleteAlert } = useContext(AlertContext);\r\n\r\n  return (\r\n    <div className='trello-alerts-wrapper'>\r\n      {\r\n        alerts.map(a => (\r\n          <AlertItem\r\n            key={a.id}\r\n            alert={a}\r\n            deleteAlert={deleteAlert} />\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alerts\r\n","import React, { useEffect, useContext } from 'react';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Home from './components/pages/home/Home';\r\nimport Board from './components/pages/board/Board';\r\nimport Modal from './components/modal/Modal';\r\nimport OptionsModal from './components/modal/OptionsModal';\r\nimport Alerts from './components/alert/Alerts';\r\n\r\nimport UserContext from './context/user/userContext';\r\n\r\nimport './trello-clone.css';\r\nimport './trello-clone-keyframes.css';\r\n\r\nconst App = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const {\r\n    setCurrentBoardId,\r\n    currentBoardId,\r\n    setMousePos,\r\n    optionsModalStatus } = userContext\r\n\r\n  // to display board page for development purposes\r\n  useEffect(() => {\r\n    setCurrentBoardId(1);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onClick = (e) => {\r\n    if(optionsModalStatus === 'off') {\r\n      setMousePos(e.clientX, e.clientY)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div onClick={onClick} id='all-wrapper'>\r\n      <Navbar />\r\n      <Modal />\r\n      <OptionsModal />\r\n      <Alerts />\r\n      { !currentBoardId\r\n          ? <Home />\r\n          : <Board />\r\n      }\r\n      {/* <Home /> */}\r\n      {/* <Board /> */}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\nexport default App","import {\r\n  ADD_BOARD,\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_DESCRIBTION,\r\n  ADD_LIST,\r\n  SET_LIST_TITLE,\r\n  ADD_CARD,\r\n  UPDATE_CARD,\r\n  DELETE_CARD\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_BOARD:\r\n      return {\r\n        ...state,\r\n        boards: [...state.boards, action.payload]\r\n      }\r\n    case SET_TITLE:\r\n      return {\r\n        ...state,\r\n        baords: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.title = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_STAR:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.starred = !b.starred\r\n          }\r\n          return b\r\n        }),\r\n        listOfStarredBoardsIds: action.payload.newListOfStarredBoardsIds\r\n      }\r\n    case SET_DESCRIBTION:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.describtion = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.lists.push(action.payload.newList)\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items.push(action.payload.newCard);\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_LIST_TITLE:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.boardId) {\r\n            board.lists = board.lists.map(list => {\r\n              if(list.id === action.payload.listId) {\r\n                list.title = action.payload.newTitle\r\n              }\r\n              return list\r\n            })\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case UPDATE_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.boardId) {\r\n            board.lists = board.lists.map(list => {\r\n              if(list.id === action.payload.listId) {\r\n                list.items = list.items.map(item => (\r\n                  item.id === action.payload.cardId ? action.payload.newCard : item\r\n                ))\r\n              }\r\n              return list\r\n            })\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case DELETE_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items = l.items.filter(i => i.id !== action.payload.cardId)\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// board state\r\nexport const ADD_BOARD = 'ADD_BOARD';\r\nexport const GET_BOARDS_NAMES = 'GET_BOARDS_NAMES';\r\nexport const SET_TITLE = 'SET_TITLE';\r\nexport const SET_STAR = 'SET_STAR';\r\nexport const SET_DESCRIBTION = 'SET_DESCRIBTION';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const SET_LIST_TITLE = 'SET_LIST_TITLE';\r\nexport const ADD_CARD = 'ADD_CARD';\r\nexport const UPDATE_CARD = 'UPDATE_CARD';\r\nexport const DELETE_CARD = 'DELETE_CARD';\r\n\r\n// alert state\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const DELETE_ALERT = 'DELETE_ALERT';\r\n\r\n// user state\r\nexport const SET_CURRENT_BOARD_ID = 'SET_CURRENT_BOARD_ID';\r\nexport const CLEAR_CURRENT_BOARD_ID = 'CLEAR_CURRENT_BOARD_ID';\r\nexport const SET_CURRENT_LIST_ID = 'SET_CURRENT_LIST_ID';\r\nexport const CLEAR_CURRENT_LIST_ID = 'CLEAR_CURRENT_LIST_ID';\r\nexport const SET_RECENT_IDS = 'SET_RECENT_IDS';\r\nexport const SET_MODAL = 'SET_MODAL';\r\nexport const SET_MODAL_TYPE = 'SET_MODAL_TYPE';\r\nexport const SET_OPTIONS_MODAL = 'SET_OPTIONS_MODAL';\r\nexport const SET_OPTIONS_MODAL_TYPE = 'SET_OPTIONS_MODAL_TYPE';\r\nexport const SET_FAST_EDIT_MODAL_POS = 'SET_FAST_EDIT_MODAL_POS';\r\nexport const SET_CURRENT_CARD = 'SET_CURRENT_CARD';\r\nexport const CLEAR_CURRENT_CARD = 'CLEAR_CURRENT_CARD';\r\nexport const SET_MOUSE_POS = 'SET_MOUSE_POS';\r\n\r\n// \r\nexport const TEST = 'TEST';\r\n","import React, { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\nimport BoardContext from './boardContext';\r\nimport boardReducer from './boardReducer';\r\nimport {\r\n  ADD_BOARD,\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_DESCRIBTION,\r\n  ADD_LIST,\r\n  SET_LIST_TITLE,\r\n  ADD_CARD,\r\n  UPDATE_CARD,\r\n  DELETE_CARD\r\n} from '../types';\r\n\r\nconst BoardState = props => {\r\n  const initialState = {\r\n    boards: [\r\n      {\r\n        title: 'my nice board',\r\n        id: 1,\r\n        color: '#ee3a59',\r\n        starred: false,\r\n        describtion: 'board describtion goes here',\r\n        lists: [\r\n          {\r\n            title: 'todos',\r\n            id: uuid.v4(),\r\n            items: [\r\n              {\r\n                text: 'todo 1',\r\n                desc: 'one describtion',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 1',\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n            ]\r\n          },\r\n          {\r\n            title: 'doing',\r\n            id: uuid.v4(),\r\n            items: [\r\n              {\r\n                text: 'doing 1',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 3',\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 3',\r\n                  'label 4'\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 3',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 4',\r\n                  'label 2'\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            title: 'new list',\r\n            id: uuid.v4(),\r\n            items: [\r\n\r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        title: 'test empty',\r\n        id: 2,\r\n        starred: false,\r\n        color: '#4759a3',\r\n        describtion: '',\r\n        lists: [\r\n          {\r\n            title: 'test for one',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    labels: [\r\n      {\r\n        id: 1,\r\n        color: '#61bd4f',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 1,\r\n        color: '#f2d600',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 1,\r\n        color: '#ff9f1a',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 1,\r\n        color: '#eb5a46',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 1,\r\n        color: '#c377e0',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 1,\r\n        color: '#0079bf',\r\n        name: ''\r\n      }\r\n    ],\r\n    colors: [\r\n      \r\n    ],\r\n    listOfStarredBoardsIds: []\r\n  };\r\n\r\n\r\n  const [state, dispatch] = useReducer(boardReducer, initialState);\r\n  console.log('use colors for just colors')\r\n  console.log('add options like add label delete label edit label( name and color )')\r\n  console.log(state.colors)\r\n\r\n  // Get data\r\n  const getBoardsNames = () => {\r\n    const list = state.boards.map(b => b.title);\r\n    \r\n    return list\r\n  };\r\n\r\n  const addBoard = (title, color) => {\r\n    const newBaord = {\r\n      title,\r\n      id: uuid.v4(),\r\n      color,\r\n      starred: false,\r\n      describtion: '',\r\n      lists: []\r\n    }\r\n    dispatch({\r\n      type: ADD_BOARD,\r\n      payload: newBaord\r\n    });\r\n  }\r\n\r\n  // get  recent used boards based on user state\r\n  const getRecentBoards = (ids) => {\r\n    const list = [];\r\n\r\n    ids && ids.forEach(id => list.push(getBoard(id)));\r\n\r\n    return list\r\n  }\r\n\r\n  // get boards with starred = true\r\n  const getStarredBoards = () => {\r\n    const list = [];\r\n    state.listOfStarredBoardsIds.forEach(id => list.push(getBoard(id)));\r\n\r\n    return list;\r\n  }\r\n\r\n  // send a single board to board page (returns an array with one object)\r\n  const getBoard = (id) => {\r\n    const board = state.boards.filter(b => b.id === id);\r\n\r\n    return board[0]\r\n  }\r\n\r\n  // set board title\r\n  const setTitle = (text, id) => {\r\n    dispatch({\r\n      type: SET_TITLE,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board starred or unstarred\r\n  const setStar = (id) => {\r\n    let newListOfStarredBoardsIds = state.listOfStarredBoardsIds;\r\n    if(state.listOfStarredBoardsIds.indexOf(id) !== -1) {\r\n      newListOfStarredBoardsIds.splice(state.listOfStarredBoardsIds.indexOf(id), 1);\r\n    } else {\r\n      newListOfStarredBoardsIds.push(id);\r\n    }\r\n    dispatch({\r\n      type: SET_STAR,\r\n      payload: {\r\n        id,\r\n        newListOfStarredBoardsIds\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board describtion\r\n  const setDescribtion = (text, id) => {\r\n    dispatch({\r\n      type: SET_DESCRIBTION,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // add List to board\r\n  const addList = (text, id) => {\r\n    const newList = {\r\n      title: text,\r\n      id: uuid.v4(),\r\n      items: []\r\n    }\r\n    dispatch({\r\n      type: ADD_LIST,\r\n      payload: {\r\n        id,\r\n        newList\r\n      }\r\n    });\r\n  }\r\n\r\n  const setListTitle = (boardId, listId, newTitle) => {\r\n    dispatch({\r\n      type: SET_LIST_TITLE,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        newTitle\r\n      }\r\n    });\r\n  }\r\n\r\n  // add card to list\r\n  const addCard = (text, listId, boardId) => {\r\n    const newCard = {\r\n      text,\r\n      id: uuid.v4(),\r\n      labels: []\r\n    }\r\n    dispatch({\r\n      type: ADD_CARD,\r\n      payload: {\r\n        newCard,\r\n        listId,\r\n        boardId\r\n      }\r\n    });\r\n  }\r\n\r\n  // update card\r\n  const updateCard = (boardId, listId, cardId, newCard) => {\r\n    dispatch({\r\n      type: UPDATE_CARD,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        cardId,\r\n        newCard\r\n      }\r\n    })\r\n  }\r\n\r\n  const deleteCard = (boardId, listId, cardId) => {\r\n    dispatch({\r\n      type: DELETE_CARD,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        cardId\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <BoardContext.Provider\r\n      value={{\r\n        boards: state.boards,\r\n        addBoard,\r\n        getBoardsNames,\r\n        getRecentBoards,\r\n        getStarredBoards,\r\n        getBoard,\r\n        setTitle,\r\n        setStar,\r\n        setDescribtion,\r\n        addList,\r\n        setListTitle,\r\n        addCard,\r\n        updateCard,\r\n        deleteCard\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BoardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BoardState;","import { \r\n  SET_ALERT,\r\n  DELETE_ALERT\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: [action.payload]\r\n      }\r\n    case DELETE_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: state.alerts.filter(a => a.id !== action.payload)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\nimport AlertContext from './alertContext';\r\nimport alertReducer from './alertReducer';\r\nimport { \r\n  SET_ALERT,\r\n  DELETE_ALERT\r\n} from '../types';\r\n\r\nconst AlertState = props => {\r\n  const initialState = {\r\n    alerts: []\r\n    };\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n  // Get data\r\n  const setAlert = (msg, type, time) => {\r\n    const listOfMsgs = state.alerts.map(a => a.msg);\r\n    if(listOfMsgs.indexOf(msg) === -1) {\r\n      const newAlert = {\r\n        msg,\r\n        id: uuid.v4(),\r\n        type,\r\n      }\r\n\r\n      dispatch({\r\n        type: SET_ALERT,\r\n        payload: newAlert\r\n      });\r\n\r\n      setTimeout(() => {\r\n        deleteAlert(newAlert.id);\r\n      }, time ? time : 3000);\r\n    }\r\n  };\r\n\r\n  const deleteAlert = (id) => {\r\n    dispatch({\r\n      type: DELETE_ALERT,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alerts: state.alerts,\r\n        setAlert,\r\n        deleteAlert\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;","import { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_CURRENT_LIST_ID,\r\n  CLEAR_CURRENT_LIST_ID,\r\n  SET_CURRENT_CARD,\r\n  CLEAR_CURRENT_CARD,\r\n  SET_RECENT_IDS,\r\n  SET_MODAL,\r\n  SET_MODAL_TYPE,\r\n  SET_OPTIONS_MODAL,\r\n  SET_OPTIONS_MODAL_TYPE,\r\n  SET_FAST_EDIT_MODAL_POS,\r\n  SET_MOUSE_POS\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_BOARD_ID:\r\n     return {\r\n       ...state,\r\n       currentBoardId: action.payload\r\n     }\r\n    case CLEAR_CURRENT_BOARD_ID:\r\n      return {\r\n        ...state,\r\n        currentBoardId: null\r\n      }\r\n    case SET_CURRENT_LIST_ID:\r\n      return {\r\n        ...state,\r\n        currentListId: action.payload\r\n      }\r\n    case CLEAR_CURRENT_LIST_ID:\r\n      return {\r\n        ...state,\r\n        currentListId: null\r\n      }\r\n    case SET_CURRENT_CARD:\r\n      return {\r\n        ...state,\r\n        currentCard: action.payload\r\n      }\r\n    case CLEAR_CURRENT_CARD:\r\n      return {\r\n        ...state,\r\n        currentCard: null\r\n      }\r\n    case SET_RECENT_IDS:\r\n      return {\r\n        ...state,\r\n        recentIds: action.payload\r\n      }\r\n    case SET_MODAL:\r\n      return {\r\n        ...state,\r\n        modalStatus: action.payload\r\n      }\r\n    case SET_MODAL_TYPE:\r\n      return {\r\n        ...state,\r\n        modalType: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL:\r\n      return {\r\n        ...state,\r\n        optionsModalStatus: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_TYPE:\r\n      return {\r\n        ...state,\r\n        optionsModalType: action.payload\r\n      }\r\n    case SET_FAST_EDIT_MODAL_POS:\r\n      return {\r\n        ...state,\r\n        fastEditModalPos: action.payload\r\n      }\r\n    case SET_MOUSE_POS:\r\n      return {\r\n        ...state,\r\n        mousePos: action.payload  \r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer } from 'react';\r\nimport UserContext from './userContext';\r\nimport userReducer from './userReducer';\r\nimport { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_CURRENT_LIST_ID,\r\n  CLEAR_CURRENT_LIST_ID,\r\n  SET_CURRENT_CARD,\r\n  CLEAR_CURRENT_CARD,\r\n  SET_RECENT_IDS,\r\n  SET_MODAL,\r\n  SET_MODAL_TYPE,\r\n  SET_OPTIONS_MODAL,\r\n  SET_OPTIONS_MODAL_TYPE,\r\n  SET_FAST_EDIT_MODAL_POS,\r\n  SET_MOUSE_POS\r\n} from '../types';\r\n\r\nconst UserState = props => {\r\n  const initialState = {\r\n    currentBoardId: null,\r\n    currentListId: null,\r\n    currentCard: null,\r\n    recentIds: [],\r\n    ModalStatus: 'off',\r\n    modalType: null,\r\n    optionsModalStatus: 'off',\r\n    optionsModaltype: null,\r\n    fastEditModalPos: null,\r\n    mosuePos: {},\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(userReducer, initialState);\r\n\r\n  const setCurrentBoardId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_BOARD_ID,\r\n      payload: id\r\n    });\r\n    setRecentBaord(id);\r\n  }\r\n\r\n  // set new board to recent\r\n  const setRecentBaord = (id) => {\r\n    const newRecentIds = state.recentIds;\r\n    if(newRecentIds.length === 3 && id !== null) {\r\n      newRecentIds.shift();\r\n      newRecentIds.push(id);\r\n    } else if(id !== null) {\r\n      newRecentIds.push(id);\r\n    }\r\n    dispatch({\r\n      type: SET_RECENT_IDS,\r\n      payload: newRecentIds\r\n    });\r\n  }\r\n\r\n  // also can be done with \"setCurrentBoardId(null)\"\r\n  const clearCurrentBoardId = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_BOARD_ID\r\n    });\r\n  }\r\n\r\n  const setCurrentListId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_LIST_ID,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  const clearCurrentListId = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_LIST_ID\r\n    });\r\n  }\r\n\r\n  const setCurrentCard = (card) => {\r\n    dispatch({\r\n      type: SET_CURRENT_CARD,\r\n      payload: card\r\n    });\r\n  }\r\n\r\n  const clearCurrentCard = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_CARD\r\n    });\r\n  }\r\n\r\n  const setModal = (status, type) => {\r\n    dispatch({\r\n      type: SET_MODAL,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearModalType();\r\n    } else if(status === 'on') {\r\n      setModalType(type);\r\n    }\r\n  }\r\n\r\n  const setModalType = (type) => {\r\n    dispatch({\r\n      type: SET_MODAL_TYPE,\r\n      payload: type\r\n    });\r\n  }\r\n\r\n  const clearModalType = () => {\r\n    dispatch({\r\n      type: SET_MODAL_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setOptionsModal = (status, type) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearOptionsModalType();\r\n    } else if(status === 'on') {\r\n      setOptionsModalType(type);\r\n    }\r\n  }\r\n\r\n  const setOptionsModalType = (type) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_TYPE,\r\n      payload: type\r\n    });\r\n  }\r\n\r\n  const clearOptionsModalType = () => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setFastEditModalPos = (pos) => {\r\n    dispatch({\r\n      type: SET_FAST_EDIT_MODAL_POS,\r\n      payload: pos\r\n    });\r\n  }\r\n\r\n  const setMousePos = (x, y) => {\r\n    dispatch({\r\n      type: SET_MOUSE_POS,\r\n      payload: {x, y}\r\n    });\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        currentBoardId: state.currentBoardId,\r\n        currentListId: state.currentListId,\r\n        currentCard: state.currentCard,\r\n        recentIds: state.recentIds,\r\n        modalStatus: state.modalStatus,\r\n        modalType: state.modalType,\r\n        optionsModalStatus: state.optionsModalStatus,\r\n        optionsModalType: state.optionsModalType,\r\n        fastEditModalPos: state.fastEditModalPos,\r\n        mousePos: state.mousePos,\r\n        setCurrentBoardId,\r\n        clearCurrentBoardId,\r\n        setCurrentListId,\r\n        clearCurrentListId,\r\n        setCurrentCard,\r\n        clearCurrentCard,\r\n        setModal,\r\n        setOptionsModal,\r\n        setFastEditModalPos,\r\n        setMousePos\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport BoardState from './context/board/BoardState';\nimport AlertState from './context/alert/AlertState';\nimport UserState from './context/user/UserState';\n\nconst StateContainer = () => {\n  return (\n    <BoardState>\n      <AlertState>\n        <UserState>\n          <App />\n        </UserState>\n      </AlertState>\n    </BoardState>\n  );\n}\n\nReactDOM.render(<StateContainer />, document.getElementById('root'));"],"sourceRoot":""}