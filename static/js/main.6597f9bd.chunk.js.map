{"version":3,"sources":["context/user/userContext.js","context/board/boardContext.js","components/layout/Navbar.js","components/layout/ListOfBoardsItem.js","components/layout/RecentInList.js","components/layout/StarredInList.js","components/layout/Boards.js","components/layout/ListOfBoards.js","components/pages/home/SideListItem.js","components/pages/home/HomeSideList.js","context/alert/alertContext.js","components/pages/home/HomeMainItem.js","components/pages/home/Recent.js","components/pages/home/Starred.js","components/pages/home/HomeMain.js","components/pages/home/Home.js","components/pages/board/BoardTitle.js","components/pages/board/BoardNavbar.js","components/pages/board/ListTitle.js","components/pages/board/CardLabel.js","components/pages/board/ListItemLabels.js","components/pages/board/BoardListItem.js","components/pages/board/BoardList.js","components/pages/board/AddList.js","components/pages/board/BoardMenu.js","components/pages/board/BoardMain.js","components/pages/board/Board.js","components/modal/AddBoardModal.js","components/modal/details/LabelItem.js","components/modal/details/Labels.js","components/modal/details/Description.js","components/modal/details/CheckListItem.js","components/modal/details/Checklist.js","components/modal/details/Checklists.js","components/modal/details/DetailsRightPanel.js","components/modal/DetailsModal.js","components/modal/FastEditModal.js","components/modal/Modal.js","components/modal/options/DeleteAllBoards.js","components/modal/options/ConfirmDeleteAllBoards.js","components/modal/options/DeleteBoard.js","components/modal/options/ClearBoard.js","components/modal/options/SetBoardWatching.js","components/modal/options/DeleteCard.js","components/modal/options/MoveCard.js","components/modal/options/CopyCard.js","components/modal/options/AddChecklist.js","components/modal/options/DeleteChecklist.js","components/modal/options/ChecklistItemActions.js","components/modal/options/EditCardLabelItem.js","components/modal/options/EditCardLabels.js","components/modal/options/EditLabel.js","components/modal/options/ListActions.js","components/modal/options/DeleteList.js","components/modal/options/CopyList.js","components/modal/options/MoveList.js","components/modal/options/DeleteAllCards.js","components/modal/options/MoveAllCards.js","components/modal/options/NewCardOptions.js","components/modal/OptionsModal.js","components/alert/AlertItem.js","components/alert/Alerts.js","App.js","context/board/boardReducer.js","context/types.js","context/board/BoardState.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/user/userReducer.js","context/user/UserState.js","index.js"],"names":["UserContext","createContext","BoardContext","Navbar","userContext","useContext","boardContext","clearCurrentBoardId","currentBoardId","setModal","toggleShowBoardsList","keepBoardsList","getBoard","navbarStyle","background","color","titleTextStyle","className","id","style","onClick","ListOfBoardsItem","board","isRecent","console","log","setCurrentBoardId","deleteFromRecent","setStar","thisStyle","e","target","classList","contains","title","starred","RecentInList","searchText","useState","collapse","setCollapse","recentIds","length","map","i","key","uniqid","StarredInList","boards","listOfStarred","forEach","b","push","Boards","ListOfBoards","text","setText","topDistance","setTopDistance","showBoardsList","toggleKeepBoardsList","setOptionsModal","useEffect","setTimeout","document","querySelector","getBoundingClientRect","height","top","thisStyle1","window","innerHeight","thisStyle2","minHeight","type","placeholder","value","onChange","SideListItem","isHover","setIsHover","hoverStyle","opacity","onMouseEnter","onMouseLeave","charAt","toUpperCase","slice","HomeSideList","AlertContext","HomeMainItem","alertContext","setAlert","itemStyle","Recent","r","Starred","list","setList","l","filter","HomeMain","Home","BoardTitle","setTitle","isSettingTitle","setIsSettingTitle","textHasChanged","setTextHasChanged","focus","onSetTitle","onBlur","onKeyUp","keyCode","BoardNavbar","setShowMenu","setDescribtion","descText","setDescText","isSettingDesc","setIsSettingDesc","onSetDesc","describtion","watching","ListTitle","listId","setListTitle","currentListId","onSetListTitle","CardLabel","label","bigLabels","thisLabel","labels","colorName","name","ListItemLabels","toggleBigLabels","father","hover","setHover","makeLabelsGrid","display","gridGap","gridTemplateColumns","BoardListItem","item","listItem","useRef","setCurrentCard","setFastEditModalPos","setData","data","getList","moveCard","getNumberOfChecklistItems","num","checklists","c","items","getNumberOfDoneChecklistItems","done","draggable","ref","onDragStart","thisE","add","onDragOver","preventDefault","onDragEnd","remove","destCardIndex","destListId","findIndex","destItemId","onDrop","elem","parentElement","firstElementChild","innerText","correctDrop","desc","current","left","width","BoardList","boardFuncs","setCurrentListId","addCardFromListActions","wantToAddCard","setWantToAddCard","newCardText","setNewCardText","addCard","cancelAddCard","onMouseDown","index","AddList","setScrollIflonger","addList","isAdding","setIsAdding","onAddList","cancelAddList","lists","BoardMenu","setBoardWatching","BoardMain","showMenu","setStyle","innerWidth","gridTemplateRows","Board","boardStyle","AddBoardModal","addBoard","bg","setBg","onClose","onAdd","bgColor","backgroundColor","Labelitem","Labels","LabelItem","Description","currentCard","updateCard","isEditing","setIsEditing","onSave","newCard","CheckListItem","clId","hideDone","ifDone","textDecoration","defaultChecked","checklistId","Checklist","checklist","onAddItem","newItem","getNumberOfDones","progress","Math","floor","Checklists","DetailsRightPanel","DetailsModal","FastEditModal","theTextarea","fastEditModalPos","clearCurrentCard","modalPos","position","rightWidth","onUpdate","Modal","modalStatus","modalType","showModal","setShowModal","closeModal","modalDisplay","DeleteAllboards","ConfirmDeleteAllBoards","deleteAllBoards","DeleteBoard","deleteBoard","ClearBoard","clearBoard","SetBoardWatching","DeleteCard","deleteCard","MoveCard","boardsSelect","listSelect","posSelect","destBoardId","setDestBoardId","setDestListId","destPos","setDestPos","Number","CopyCard","keepChecklists","setKeepChecklists","keepLabels","setKeepLabels","checked","AddChecklist","newChecklist","DeleteChecklist","newListOfChecklists","ChecklistItemActions","onDelete","EditCardLabelItem","setLabelId","goToEditLabel","indexOf","EditCardLabels","setOptionsModalStep","setLabel","EditLabel","setColorName","optionsModalStepData","colors","addLabel","updateLabel","deleteLabel","onColorClick","is","newId","ListActions","setAddCardFromListActions","setWatching","sortList","DeleteList","deleteList","CopyList","setName","copyList","MoveList","PosSelect","desPos","moveList","DeleteAllCards","deleteAllCards","MoveAllCards","moveAllCards","NewCardOptions","OptionsModal","container","optionsModalStatus","optionsModalType","optionsModalStepStatus","optionsModalStepType","mousePos","pos","setPos","setOptionsPos","rect","x","y","right","bottom","DeleteAllBoards","AlertItem","alert","deleteAlert","msg","Alerts","alerts","a","App","setMousePos","getUserdata","getBoardsData","stiringed","JSON","stringify","localStorage","setItem","clientX","clientY","state","action","payload","boardId","newList","splice","newItems","firstBoardId","firstIndex","destIndex","firstListId","concat","newTitle","cardId","card","BoardState","props","useReducer","boardReducer","dispatch","ListId","Provider","parse","getItem","theList","sort","isCopy","cardWithNewId","newLabel","children","AlertState","alertReducer","time","newAlert","UserState","userReducer","ModalStatus","optionsModaltype","mosuePos","setRecentBaord","newRecentIds","shift","setModalType","clearModalType","setOptionsModalType","clearOptionsModalType","status","step","clearOptionsModalStepType","setOptionsModalStepType","setOptionsModalStepData","clearOptionsModalStepData","command","clearCurrentListId","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6597f9bd.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;","import { createContext } from 'react';\r\n\r\nconst BoardContext = createContext();\r\n\r\nexport default BoardContext;\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst Navbar = () => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { clearCurrentBoardId, currentBoardId, setModal, toggleShowBoardsList, keepBoardsList } = userContext;\r\n  const { getBoard } = boardContext;\r\n\r\n  const homeClicked =() => {\r\n    clearCurrentBoardId();\r\n  }\r\n\r\n  const addClicked = () => {\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  const onBoardsClicked = () => {\r\n    toggleShowBoardsList();\r\n  }\r\n\r\n  const navbarStyle = {\r\n    background: getBoard(currentBoardId) && getBoard(currentBoardId).color\r\n  }\r\n\r\n  const titleTextStyle = {\r\n    color: getBoard(currentBoardId) ? getBoard(currentBoardId).color : '#388d6a'\r\n  }\r\n\r\n  return (\r\n    <div className='trello-navbar' id='main-navbar' style={navbarStyle}>\r\n      <div>\r\n        <div className='btn btn-square btn-transparent rounded' onClick={homeClicked}>\r\n          <i className='fa fa-home'></i>\r\n        </div>\r\n        <div className={`btn btn-narrow btn-transparent rounded ${keepBoardsList && 'd-n'}`} onClick={onBoardsClicked}>\r\n          <i className='mr-1 fa fa-notes-medical'></i>\r\n          boards\r\n        </div>\r\n      </div>\r\n      <div className='mr-5'>\r\n        <div className='text-white text-bold cursor-p border border-white border-bottom-0'>\r\n          <div className='mr'>\r\n            trello\r\n          </div>\r\n          <div \r\n            className='bg-white d-i-b border-0 pl'\r\n            style={titleTextStyle}>\r\n            clone\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className='btn btn-square btn-transparent rounded' onClick={addClicked}>\r\n          <i className='fa fa-plus'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useContext } from 'react';\r\n\r\nimport boardContext from '../../context/board/boardContext';\r\nimport userContext from '../../context/user/userContext';\r\n\r\nconst ListOfBoardsItem = ({ board, isRecent }) => {\r\n  isRecent && console.log('add X btn if its recent to delte from recent')\r\n\r\n  const { setCurrentBoardId, keepBoardsList, toggleShowBoardsList, deleteFromRecent } = useContext(userContext)\r\n  const { setStar } = useContext(boardContext)\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('func-icon') && !e.target.classList.contains('func-star') && !e.target.classList.contains('func-recent-x')) {\r\n      setCurrentBoardId(board.id);\r\n      !keepBoardsList && toggleShowBoardsList()\r\n    }\r\n  }\r\n\r\n  const onStarCLick = () => {\r\n    setStar(board.id);\r\n  }\r\n\r\n  const onDeleteFromRecentClick = () => {\r\n    deleteFromRecent(board.id);\r\n  }\r\n\r\n  const thisStyle = {\r\n    background: board.color\r\n  }\r\n\r\n  return (\r\n    <div style={thisStyle} className='item hover' onClick={onClick}>\r\n      <div className='left'>\r\n      \r\n      </div>\r\n      <div className='right lighten-70 height-100'>\r\n        { board.title }\r\n      </div>\r\n      <div className={`func-star star text-sm ${board.starred && 'stay text-warning darken-40'}`} onClick={onStarCLick}>\r\n        <i className='func-icon fas fa-star'>\r\n        \r\n        </i>\r\n      </div>\r\n      {\r\n        isRecent && <div className={`func-recent-x close`} onClick={onDeleteFromRecentClick}>\r\n                      &times;\r\n                    </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListOfBoardsItem\r\n","import React, { useState, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport ListOfBoardsItem from './ListOfBoardsItem';\r\n\r\nimport userContext from '../../context/user/userContext';\r\nimport boardContext from '../../context/board/boardContext';\r\n\r\nconst RecentInList = ({ searchText }) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n\r\n  const { recentIds } = useContext(userContext);\r\n  const { getBoard } = useContext(boardContext);\r\n\r\n  const onCollapse = () => {\r\n    setCollapse(!collapse);\r\n  }\r\n\r\n  return (\r\n    <div className={`mt-1 mb ${recentIds.length === 0 && 'd-n'}`}>\r\n      <div className='mb-1'>\r\n        <i className='fas fa-clock mr'></i>\r\n        recent boards\r\n        <div className='btn float-right btn-narrow text-sm' onClick={onCollapse}>\r\n          <i className={`fas ${collapse ? 'fa-plus' : 'fa-minus'}`}></i>\r\n        </div>\r\n      </div>\r\n      { !collapse\r\n         && recentIds.length !== 0\r\n          && recentIds.map(i => (\r\n              !getBoard(i).starred && <ListOfBoardsItem key={uniqid()} board={getBoard(i)} isRecent={true} />\r\n            ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RecentInList\r\n","import React, { useState, useContext } from 'react';\r\nimport ListOfBoardsItem from './ListOfBoardsItem';\r\n\r\nimport boardContext from '../../context/board/boardContext';\r\n\r\nconst StarredInList = ({ searchText }) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n\r\n  const { boards } = useContext(boardContext);\r\n\r\n  const onCollapse = () => {\r\n    setCollapse(!collapse);\r\n  }\r\n\r\n  const listOfStarred = [];\r\n\r\n  boards.forEach(b => b.starred && listOfStarred.push(b.id))\r\n\r\n  return (\r\n    <div className={`mt-1 mb ${listOfStarred.length === 0 && 'd-n'}`}>\r\n      <div className='mb-1'>\r\n        <i className='fas fa-star mr'></i>\r\n        favorite boards\r\n        <div className='btn float-right btn-narrow text-sm' onClick={onCollapse}>\r\n          <i className={`fas ${collapse ? 'fa-plus' : 'fa-minus'}`}></i>\r\n        </div>\r\n      </div>\r\n      { !collapse &&\r\n          boards.map(b => (\r\n            b.starred && <ListOfBoardsItem key={b.id} board={b} />\r\n          ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StarredInList\r\n","import React, { useState, useContext } from 'react';\r\nimport ListOfBoardsItem from './ListOfBoardsItem';\r\n\r\nimport boardContext from '../../context/board/boardContext';\r\n\r\nconst Boards = ({ searchText }) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n\r\n  const { boards } = useContext(boardContext);\r\n\r\n  const onCollapse = () => {\r\n    setCollapse(!collapse);\r\n  }\r\n\r\n  return (\r\n    <div className='mt-1 mb'>\r\n      <div className='mb-1'>\r\n        <i className='fas fa-notes-medical mr'></i>\r\n        boards\r\n        <div className='btn float-right btn-narrow text-sm' onClick={onCollapse}>\r\n          <i className={`fas ${collapse ? 'fa-plus' : 'fa-minus'}`}></i>\r\n        </div>\r\n      </div>\r\n      { !collapse &&\r\n          boards.map(b => (\r\n            <ListOfBoardsItem key={b.id} board={b} />\r\n          ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Boards\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport RecentInList from './RecentInList';\r\nimport StarredInList from './StarredInList';\r\nimport Boards from './Boards';\r\n\r\nimport userContext from '../../context/user/userContext';\r\n\r\nconst ListOfBoards = () => {\r\n  const [text, setText] = useState('');\r\n  const [topDistance, setTopDistance] = useState(0);\r\n  \r\n  const {\r\n    showBoardsList,\r\n    keepBoardsList,\r\n    toggleKeepBoardsList,\r\n    toggleShowBoardsList,\r\n    setOptionsModal,\r\n    setModal } = useContext(userContext);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTopDistance(document.querySelector('#main-navbar').getBoundingClientRect().height);\r\n    }, 100);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeepClicked = () => {\r\n    toggleKeepBoardsList();\r\n  }\r\n\r\n  const onCreateNewBordClicked = () => {\r\n    if(!keepBoardsList) {\r\n      toggleShowBoardsList();\r\n    }\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  const onDeleteClicked = () => {\r\n    setOptionsModal('on', 'deleteAllBoards');\r\n  }\r\n\r\n  const thisStyle = {\r\n    top: !keepBoardsList && topDistance\r\n  }\r\n\r\n  const thisStyle1 = {\r\n    height: keepBoardsList && window.innerHeight - topDistance\r\n  }\r\n\r\n  const thisStyle2 = {\r\n    minHeight: topDistance\r\n  }\r\n\r\n  return (\r\n    <div style={thisStyle} className={`list-of-boards ${showBoardsList ? 'show' : ''} ${keepBoardsList ? 'keep' : ''}`}>\r\n      <div style={thisStyle2} className={`header ${keepBoardsList ? '' : 'd-n'}`}>\r\n        <div className='text-bold'>\r\n          boards\r\n        </div>\r\n      </div>\r\n      <div className='main' style={thisStyle1}>\r\n        <input\r\n          type='text'\r\n          placeholder='find boards by name'\r\n          className='m-0 text-sm'\r\n          value={text}\r\n          onChange={onChange} />\r\n        <StarredInList searchText={text} />\r\n        <RecentInList searchText={text} />\r\n        <Boards searchText={text} />\r\n        <div className='text-85 underline m cursor-p mt-1' onClick={onCreateNewBordClicked}>\r\n          Create new board\r\n        </div>\r\n        <div className='text-85 underline m cursor-p' onClick={onKeepClicked}>\r\n          {\r\n            keepBoardsList\r\n              ? 'Dont keep this menu open'\r\n              : 'Always keep this menu open'\r\n          }\r\n        </div>\r\n        <div className='text-85 underline m cursor-p hover-danger' onClick={onDeleteClicked}>\r\n          Delete All Boards\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListOfBoards","import React, { useState, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst SideListItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n\r\n  const [isHover, setIsHover] = useState(false);\r\n\r\n  const hoverStyle = isHover ? {\r\n    background: board.color,\r\n    color: '#f4f4f4',\r\n    opacity: '0.7'\r\n  } : {\r\n    opacity: '1'\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    setIsHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setIsHover(false);\r\n  }\r\n\r\n  const onClick = () => {\r\n    setCurrentBoardId(board.id)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      onClick={onClick}\r\n      className=\"card pl-1 cursor-p p border-0 rounded-lg text-dark transition text-bold\"\r\n      style={hoverStyle}\r\n      >\r\n      { board.title.charAt(0).toUpperCase() + board.title.slice(1) }\r\n      { <i className=\"fa fa-check m-0 float-right\"></i> }\r\n    </div> \r\n  );\r\n};\r\n\r\nexport default SideListItem","import React, { useContext } from 'react';\r\nimport SideListItem from './SideListItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst HomeSideList = () => {\r\n  const { boards } = useContext(BoardContext);\r\n\r\n  return (\r\n    <aside className='trello-aside'>\r\n      <button className='btn btn-block btn-primary text-left rounded-lg'>\r\n        <i className='fa fa-notes-medical mr-1'></i>\r\n        <div className='text-bold d-i-b'>Boards</div>\r\n      </button>\r\n      { boards.map(b => (\r\n        <SideListItem key={b.id} board={b} />\r\n      )) }\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default HomeSideList\r\n","import { createContext } from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext;","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst HomeMainItem = ({ board }) => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { setCurrentBoardId } = userContext;\r\n  const { setStar } = boardContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const itemStyle = {\r\n    background: board.color\r\n  }\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('fa-star')) {\r\n      setCurrentBoardId(board.id);\r\n    }\r\n  }\r\n\r\n  const onStarClicked = () => {\r\n    setStar(board.id);\r\n    setAlert(`${board.starred ? 'board added to favorites' : 'board removed from favorites'}`, `${board.starred ? 'success' : 'dark'}`, 2500);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='trello-home-main-item mt-1 mr-1'\r\n      style={itemStyle}\r\n      onClick={onClick}>\r\n        <div className='text-white func-title'>\r\n          { board.title.charAt(0).toUpperCase() + board.title.slice(1) }\r\n        </div>\r\n        <div\r\n          className='trello-home-main-item-star'\r\n          onClick={onStarClicked}>\r\n          <i className={`fa-star ${board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeMainItem\r\n","import React, { Fragment, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst Recent = () => {\r\n  const boardContext = useContext(BoardContext);\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { getBoard } = boardContext;\r\n  const { recentIds } = userContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      { recentIds.length !== 0\r\n        &&  <div className='card border-top-0 border-right-0 border-left-0 pb-2'>\r\n              <i className='fa fa-clock mr-1'></i>\r\n              Recent borads\r\n              <div>\r\n                { recentIds.map(r => (\r\n                      <HomeMainItem key={uniqid()} board={getBoard(r)} />\r\n                    ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Recent\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport HomeMainItem from './HomeMainItem';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Starred = () => {\r\n  const [list, setList] = useState([])\r\n\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { boards } = boardContext;\r\n\r\n  useEffect(() => {\r\n    const l = boards.filter(b => b.starred);\r\n    setList(l)\r\n    // eslint-disable-next-line\r\n  }, [boards])\r\n\r\n  return (\r\n    <Fragment>\r\n      { list.length !== 0\r\n        &&  <div className='card border-top-0 border-right-0 border-left-0 pb-2'>\r\n              <i className='fa fa-star mr-1'></i>\r\n              favorite borads\r\n              <div>\r\n                { list.map(b => (\r\n                    <HomeMainItem key={b.id} board={b} />\r\n                  ))\r\n                }\r\n              </div>\r\n            </div>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Starred\r\n","import React, { useContext } from 'react';\r\nimport Recent from './Recent';\r\nimport Starred from './Starred';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst HomeMain = () => {\r\n  const { setModal } = useContext(UserContext);\r\n\r\n  const onAdd = () => {\r\n    setModal('on', 'addBoardModal');\r\n  }\r\n\r\n  return (\r\n    <main className='trello-home-main text-bold'>\r\n      <Starred />\r\n      <Recent />\r\n      <div className='card border-0'>\r\n        <div className='trello-home-main-item hover' onClick={onAdd}>\r\n          Add Board\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default HomeMain\r\n","import React from 'react';\r\nimport HomeSideList from './HomeSideList';\r\nimport HomeMain from './HomeMain';\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className='container grid-1-3 gap-half mt-3'>\r\n      <HomeSideList />\r\n      <HomeMain />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\nimport boardContext from '../../../context/board/boardContext';\r\n\r\nconst BoardTitle = () => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { setAlert } = alertContext;\r\n  const { getBoard, setTitle } = useContext(boardContext);\r\n\r\n  const [text, setText] = useState('');\r\n  const [isSettingTitle, setIsSettingTitle] = useState(false);\r\n  const [textHasChanged, setTextHasChanged] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setText(getBoard(currentBoardId).title);\r\n    document.querySelector(`#board-title-${currentBoardId}`).focus()\r\n    // eslint-disable-next-line\r\n  }, [isSettingTitle])\r\n\r\n  const onClick = () => {\r\n    setIsSettingTitle(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n    setTextHasChanged(true);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    onSetTitle();\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetTitle();\r\n    }\r\n  }\r\n\r\n  const onSetTitle = () => {\r\n    if(textHasChanged) {\r\n      if(text !== '') {\r\n        setTitle(text, currentBoardId);\r\n        setAlert('board title changed', 'success');\r\n        setIsSettingTitle(false);\r\n      } else {\r\n        setIsSettingTitle(false);\r\n        setAlert('board title can not be empty', 'danger');\r\n      }\r\n    } else {\r\n      setIsSettingTitle(false);\r\n      setTextHasChanged(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='d-i-b'>\r\n      <div\r\n        className={`text-white m-0 ml-1 ${isSettingTitle && 'd-n'}`}\r\n        onClick={onClick}>\r\n        { getBoard(currentBoardId).title.charAt(0).toUpperCase() + getBoard(currentBoardId).title.slice(1) }\r\n      </div>\r\n      <input\r\n        type='text'\r\n        id={`board-title-${currentBoardId}`}\r\n        className={`m-0 rounded ${!isSettingTitle && 'd-n'}`}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        value={text}\r\n        onKeyUp={onKeyUp}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardTitle\r\n","import React, { useState, useContext } from 'react';\r\nimport BoardTitle from './BoardTitle';\r\n\r\nimport AlertContext from '../../../context/alert/alertContext';\r\nimport userContext from '../../../context/user/userContext';\r\nimport boardContext from '../../../context/board/boardContext';\r\n\r\nconst BoardNavbar = ({ board }) => {\r\n  const { setAlert } = useContext(AlertContext);\r\n  const { setOptionsModal, setShowMenu } = useContext(userContext);\r\n  const { setStar, setDescribtion } = useContext(boardContext);\r\n\r\n  const [descText, setDescText] = useState('');\r\n  const [isSettingDesc, setIsSettingDesc] = useState(false);\r\n  \r\n  const onStarClick = () => {\r\n    setStar(board.id);\r\n    setAlert(`${board.starred ? 'board added to favorites' : 'board removed from favorites'}`, `${board.starred ? 'success' : 'dark'}`, 2000);\r\n  }\r\n\r\n  const onDescClick =() => {\r\n    setIsSettingDesc(true);\r\n    setDescText(board.describtion);\r\n    document.querySelector('#describtion-input').focus();\r\n  }\r\n\r\n  const onDescTextChange = (e) => {\r\n    e.target.value.length < 51\r\n      ? setDescText(e.target.value)\r\n      : setAlert('describtion can not be longer than 50 chars!!!', 'warning', 4000)\r\n  }\r\n\r\n  const onSetDesc = () => {\r\n    setDescribtion(descText, board.id);\r\n    setAlert('board describtion changed successfully', 'success');\r\n    setIsSettingDesc(false);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetDesc();\r\n    }\r\n  }\r\n\r\n  const onShowMenu = () => {\r\n    setShowMenu();\r\n  }\r\n\r\n  const onSetWatching = () => {\r\n    setOptionsModal('on', 'setBoardWatching');\r\n  }\r\n\r\n  const navbarStyle = {\r\n    background: board && board.color\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-navbar trello-navbar lighten-20' style={navbarStyle}>\r\n      <div className='card border-0 m-0 p-0'>\r\n        { board && <BoardTitle /> }\r\n        <div className='btn btn-transparent btn-square rounded ml-1' onClick={onStarClick}>\r\n          <i className={`fa-star ${board && board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n        <div className='ml-1 d-i-b text-white'>\r\n          { \r\n            board\r\n            && !isSettingDesc\r\n              && (board.describtion ? board.describtion : 'no describtion')\r\n          }\r\n        <input\r\n          type='text'\r\n          id='describtion-input'\r\n          className={`m-0 rounded ${!isSettingDesc && 'd-n'}`}\r\n          value={descText}\r\n          onChange={onDescTextChange}\r\n          onBlur={onSetDesc}\r\n          onKeyUp={onKeyUp} />\r\n        </div>\r\n        <div className='btn btn-transparent btn-square rounded ml-1' onClick={onDescClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className={`btn text-sm btn-narrow btn-transparent ${!board.watching && 'd-n'}`} onClick={onSetWatching}>\r\n          <i className='fas fa-eye mr'></i>\r\n          watching\r\n        </div>\r\n        <div className='btn text-sm btn-narrow btn-transparent' onClick={onShowMenu}>\r\n          <i className='fas fa-ellipsis-h mr'></i>\r\n          Show Menu\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardNavbar\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst ListTitle = ({ listId, title, setListTitle }) => {\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { currentBoardId, currentListId } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [text, setText] = useState('');\r\n  const [isSettingTitle, setIsSettingTitle] = useState(false);\r\n  const [textHasChanged, setTextHasChanged] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setText(title);\r\n    document.querySelector(`#list-title-${listId}`).focus()\r\n    // eslint-disable-next-line\r\n  }, [isSettingTitle])\r\n\r\n  const onClick = () => {\r\n    setIsSettingTitle(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n    setTextHasChanged(true);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    onSetListTitle();\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetListTitle();\r\n    }\r\n  }\r\n\r\n  const onSetListTitle = () => {\r\n    if(textHasChanged) {\r\n      if(text !== '') {\r\n        setListTitle(currentBoardId, currentListId, text);\r\n        setAlert('list title changed', 'success');\r\n        setIsSettingTitle(false);\r\n      } else {\r\n        setIsSettingTitle(false);\r\n        setAlert('list title can not be empty', 'warning');\r\n      }\r\n    } else {\r\n      setIsSettingTitle(false);\r\n      setTextHasChanged(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='d-i-b m-0'>\r\n      <div\r\n        className={`pt-1 mb pl m-0 ${isSettingTitle && 'd-n'}`}\r\n        onClick={onClick}>\r\n        { title }\r\n      </div>\r\n      <input\r\n        type='text'\r\n        id={`list-title-${listId}`}\r\n        value={text}\r\n        className={`m-0 mt p-0 pt pb pl text-bold text-80 border-0 rounded ${!isSettingTitle && 'd-n'}`}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        onKeyUp={onKeyUp}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListTitle\r\n","import React, { useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst CardLabel = ({ label, onClick, onMouseEnter, onMouseLeave, bigLabels }) => {\r\n  const { labels } = useContext(BoardContext);\r\n\r\n  const thisLabel = labels.filter(l => l.id === label)[0];\r\n\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      className={`func-card-label d-i-b label label-color-${thisLabel.colorName} ${bigLabels ? 'label-lg' : 'label-sm'}`}>\r\n      <div className='func-label-text label-text m-0'>{ bigLabels && thisLabel.name }</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardLabel\r\n","import React, { useState } from 'react';\r\nimport CardLabel from './CardLabel';\r\n\r\nconst ListItemLabels = ({ labels, toggleBigLabels, bigLabels, father }) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const onClick = () => {\r\n    father === 'boardListItem' && toggleBigLabels();\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    father === 'boardListItem' && setHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setHover(false);\r\n  }\r\n\r\n  const makeLabelsGrid = {\r\n    display: 'grid',\r\n    gridGap: `.2rem`,\r\n    gridTemplateColumns: `repeat(${labels.length}, 1fr)`\r\n  }\r\n\r\n  return (\r\n    <div style={makeLabelsGrid} className={`trello-board-list-item-labels-container m-0 p-0 ${hover && 'darken-30'}`}>\r\n      {\r\n        labels.map(l => <CardLabel key={l} label={l} onClick={onClick} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave} bigLabels={bigLabels} />)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListItemLabels\r\n","import React, { useRef, useContext } from 'react';\r\nimport ListItemLabels from './ListItemLabels';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst BoardListItem = ({ item, listId }) => {\r\n  const listItem = useRef(null);\r\n\r\n  const { currentBoardId, setCurrentCard, setModal, setFastEditModalPos, toggleBigLabels, bigLabels, setData, data } = useContext(UserContext);\r\n  const { getList, moveCard } = useContext(BoardContext);\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('func-e-btn') && !e.target.parentElement.classList.contains('func-e-btn') && !e.target.classList.contains('func-card-label') && !e.target.classList.contains('func-label-text')) {\r\n      setModal('on', 'detailsModal');\r\n    }\r\n    setCurrentCard(item);\r\n  }\r\n\r\n  const onDragStart = (e) => {\r\n    const thisE = e.target;\r\n    setTimeout(() => {\r\n      thisE.classList.add('dragging')\r\n    }, 0);\r\n  }\r\n\r\n  const onDragOver = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  const onDragEnd = (e) => {\r\n    e.target.classList.remove('dragging')\r\n\r\n    if(data) {\r\n      const destCardIndex = getList(currentBoardId, data.destListId).items.findIndex(i => i.id === data.destItemId)\r\n\r\n      moveCard(currentBoardId, listId, item.id, currentBoardId, data.destListId, destCardIndex, item);\r\n\r\n      setData(null)\r\n    }\r\n  }\r\n\r\n  const onDrop = e=> {\r\n    let elem;\r\n    if(e.target.classList.contains('func-item')) {\r\n      elem = e.target\r\n    }\r\n    if(e.target.parentElement.classList.contains('func-item')) {\r\n      elem = e.target.parentElement\r\n    }\r\n    if(e.target.parentElement.parentElement.classList.contains('func-item')) {\r\n      elem = e.target.parentElement.parentElement\r\n    }\r\n    if(e.target.parentElement.parentElement.parentElement.classList.contains('func-item')) {\r\n      elem = e.target.parentElement.parentElement.parentElement\r\n    }\r\n\r\n    const destListId = elem.firstElementChild.innerText;\r\n\r\n    setData({\r\n      destItemId: item.id,\r\n      destListId,\r\n      correctDrop: true\r\n    });\r\n  }\r\n\r\n  const onEBtnClick = (e) => {\r\n    setFastEditModalPos({\r\n        top: listItem.current.getBoundingClientRect().top,\r\n        left: listItem.current.getBoundingClientRect().left,\r\n        width: listItem.current.getBoundingClientRect().width\r\n      });\r\n    setModal('on', 'fastEditModal');\r\n  }\r\n\r\n  const getNumberOfChecklistItems = () => {\r\n    let num = 0;\r\n    item.checklists.forEach(c => {\r\n      c.items.forEach(i => {\r\n        num++\r\n      })\r\n    })\r\n\r\n    return num\r\n  }\r\n\r\n  const getNumberOfDoneChecklistItems = () => {\r\n    let num = 0;\r\n    item.checklists.forEach(c => {\r\n      c.items.forEach(i => {\r\n        i.done && num++\r\n      })\r\n    })\r\n\r\n    return num\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='func-item trello-board-list-item'\r\n      draggable='true'\r\n      ref={listItem}\r\n      onDragStart={onDragStart}\r\n      onDragOver={onDragOver}\r\n      onDragEnd={onDragEnd}\r\n      onDrop={onDrop}\r\n      onClick={onClick}>\r\n        {/* this element  has to be the exact first child of func-item */}\r\n        <div className='d-n'>{listId}</div>\r\n        <div className='drag-board'></div>\r\n        <ListItemLabels father='boardListItem' labels={item.labels} bigLabels={bigLabels} toggleBigLabels={toggleBigLabels} />\r\n        <div>\r\n          { item.text }\r\n        </div>\r\n        <div className='text-sm mt'>\r\n          {\r\n            item.desc &&\r\n              <i className='fas fa-align-left mr'></i>\r\n          }\r\n          {\r\n            item.watching &&\r\n              <i className='fas fa-eye mr'></i>\r\n          }\r\n          {\r\n            item.checklists.length > 0 &&\r\n              getNumberOfChecklistItems() !== 0 &&\r\n                <div className={`checklist-btn ${getNumberOfDoneChecklistItems() === getNumberOfChecklistItems() && getNumberOfChecklistItems() !== 0 ? 'btn-success' : 'btn-dark'}`}>\r\n                  <i className='fas fa-check-square'></i>\r\n                  {\r\n                    getNumberOfDoneChecklistItems()\r\n                  }\r\n                  /\r\n                  {\r\n                    getNumberOfChecklistItems()\r\n                  }\r\n                </div>\r\n          }\r\n        </div>\r\n        <div className='func-e-btn trello-board-list-item-edit-btn' onClick={onEBtnClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardListItem\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport ListTitle from './ListTitle';\r\nimport BoardListItem from './BoardListItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst BoardList = ({ list, boardFuncs /* all of board context */ }) => {\r\n\r\n  const userContext = useContext(UserContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { setCurrentListId, currentBoardId, setOptionsModal, addCardFromListActions } = userContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [wantToAddCard, setWantToAddCard] = useState(false);\r\n  const [newCardText, setNewCardText] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(addCardFromListActions === list.id) {\r\n      setWantToAddCard(true);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [addCardFromListActions]);\r\n\r\n  const onAddCardClick = () => {\r\n    !wantToAddCard && setWantToAddCard(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    if(e.keyCode !== 13) {\r\n      setNewCardText(e.target.value);\r\n    }\r\n  }\r\n\r\n  const onTextareaBlur = () => {\r\n    if(newCardText !== '') {\r\n      addCard();\r\n    } else {\r\n      cancelAddCard();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13 && newCardText.length > 1) {\r\n      addCard();\r\n    } else if(e.keyCode === 13 && newCardText.length === 1) {\r\n      setNewCardText('');\r\n    }\r\n  }\r\n\r\n  const addCard = () => {\r\n    if(newCardText !== '') {\r\n      // three parameters: 1.text 2.list id 3.board id\r\n      boardFuncs.addCard(newCardText, list.id, currentBoardId);\r\n      setAlert('card added', 'success');\r\n      setNewCardText('');\r\n    }\r\n  }\r\n\r\n  const cancelAddCard = () => {\r\n    setWantToAddCard(false);\r\n    setNewCardText('');\r\n  }\r\n\r\n  const onListCLick = () => {\r\n    setCurrentListId(list.id);\r\n  }\r\n\r\n  const onlistOptionsClick = () => {\r\n    setOptionsModal('on', 'listActions');\r\n  }\r\n\r\n  const onNewCardOptionsClick = () => {\r\n    setOptionsModal('on', 'newCardOptions');\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-list' onMouseDown={onListCLick}>\r\n      <div className='trello-board-list-header'>\r\n        <ListTitle listId={list.id} title={list.title} setListTitle={boardFuncs.setListTitle} />\r\n        <div className='btn bg-transparent-with-hover btn-square float-right mt' onClick={onlistOptionsClick}>\r\n          <i className='fas fa-ellipsis-h'></i>\r\n        </div>\r\n        {\r\n          list.watching &&\r\n          <div className='text-85 bg-transparent btn-square float-right mt'>\r\n            <i className='fas fa-eye'></i>\r\n          </div>\r\n        }\r\n      </div>\r\n      <div className='trello-board-list-items'>\r\n        { list.items.map((i, index) => (\r\n          <BoardListItem listId={list.id} key={i.id} item={i} />\r\n        )) }\r\n        <div className={`trello-board-list-item trello-board-card-compose  ${!wantToAddCard && 'd-n'}`}>\r\n          <textarea\r\n            className='trello-board-card-compose-textarea'\r\n            placeholder='Enter a title for this card'\r\n            onBlur={onTextareaBlur}\r\n            onKeyUp={onKeyUp}\r\n            onChange={onChange}\r\n            value={newCardText}>\r\n\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`trello-board-footer ${!wantToAddCard && 'hover cursor-p'}`}\r\n        onClick={onAddCardClick}>\r\n        { !wantToAddCard\r\n          ?  (<div>\r\n                {list.items.length === 0 ? '+ Add a card' : '+ Add another card'}\r\n              </div>) \r\n          : (\r\n            <Fragment>\r\n              <div className='btn btn-success' onClick={addCard}>\r\n                Add Card\r\n              </div>\r\n              <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddCard}>\r\n                &times;\r\n              </div>\r\n              <div className='btn bg-transparent-with-hover btn-square float-right'          onClick={onNewCardOptionsClick}>\r\n                  <i className='fas fa-ellipsis-h'></i>\r\n              </div>\r\n            </Fragment>\r\n          )  \r\n        }      \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardList\r\n","import React, { Fragment, useState, useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst AddList = ({ board, setScrollIflonger }) => {\r\n  const boardContext = useContext(BoardContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { addList } = boardContext;\r\n  const { setAlert } = alertContext;\r\n\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [text, setText] = useState('')\r\n\r\n  const onClick = () => {\r\n    setIsAdding(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    if(text !== '') {\r\n      onAddList();\r\n    } else {\r\n      cancelAddList();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAddList();\r\n    }\r\n  }\r\n\r\n  const onAddList = () => {\r\n    if(text !== '') {\r\n      addList(text, board.id);\r\n      setAlert(`list ${text} added`, 'success');\r\n      setText('');\r\n      setScrollIflonger();\r\n    } else {\r\n      setAlert(`list title can not be empty`, 'warning');\r\n    }\r\n  }\r\n\r\n  const cancelAddList = () => {\r\n    setIsAdding(false);\r\n    setText('');\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`trello-board-add-list-btn btn-light op-8 darken-20 text-dark ${isAdding && 'd-n'}`}\r\n        onClick={onClick}>\r\n          { board && board.lists.length === 0 ? '+ Add a list' : '+ Add another list' }\r\n      </div>\r\n      <div\r\n        className={`trello-board-add-list-form btn-light op-9 darken-20 text-dark ${!isAdding && 'd-n'}`}>\r\n          <input\r\n            type='text'\r\n            className='m-0 rounded-lg mb-1'\r\n            placeholder='Enter list name'\r\n            value={text}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            onKeyUp={onKeyUp}/>\r\n          <div className='btn btn-success' onClick={onAddList}>\r\n            Add List\r\n          </div>\r\n          <div className='d-i-b cursor-p ml-1 text-lg lighten-60 hover' onClick={cancelAddList}>\r\n            &times;\r\n          </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddList\r\n","import React, { useContext } from 'react';\r\n\r\nimport userContext from '../../../context/user/userContext';\r\nimport boardContext from '../../../context/board/boardContext';\r\n\r\nconst BoardMenu = () => {\r\n  const { currentBoardId, setOptionsModal, setShowMenu } = useContext(userContext)\r\n  const { getBoard, setBoardWatching } = useContext(boardContext)\r\n\r\n  const onClose = () => {\r\n    setShowMenu()\r\n  }\r\n\r\n  const onWatcingClicked = () => {\r\n    setBoardWatching(currentBoardId);\r\n  }\r\n\r\n  const onClearBoard = () => {\r\n    setOptionsModal('on', 'clearBoard')\r\n  }\r\n\r\n  const onDelete = () => {\r\n    setOptionsModal('on', 'deleteBoard')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='close' onClick={onClose}>\r\n        &times;\r\n      </div>\r\n      <h3 className='pb-1'>\r\n        Menu\r\n      </h3>\r\n      <hr/>\r\n      <div className='board-menu-list'>\r\n        <div className='board-menu-item'>\r\n          board menu\r\n        </div>\r\n        <div className='board-menu-item' onClick={onWatcingClicked}>\r\n          watch\r\n          <i className={`fas fa-check text-sm ml ${!getBoard(currentBoardId).watching && 'd-n'}`}></i>\r\n        </div>\r\n        <div className='board-menu-item'>\r\n          change board color\r\n        </div>\r\n        <div className='board-menu-item' onClick={onClearBoard}>\r\n          clear baord\r\n        </div>\r\n        <div className='board-menu-item hover-danger' onClick={onDelete}>\r\n          delete board\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BoardMenu\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport BoardList from './BoardList';\r\nimport AddList from './AddList';\r\nimport BoardMenu from './BoardMenu';\r\n\r\nimport userContext from '../../../context/user/userContext';\r\n\r\nconst BoardMain = ({ board, boardFuncs /* contains all of board context  */ }) => {\r\n  const { showMenu } = useContext(userContext)\r\n\r\n  const [style, setStyle] = useState({});\r\n\r\n  useEffect(() => {\r\n    setScrollIflonger();\r\n    // eslint-disable-next-line\r\n  }, [board]);\r\n\r\n  const setScrollIflonger = () => {\r\n    const boardWidth = (board.lists.length + 1) * 270;\r\n\r\n    if(16 + boardWidth > window.innerWidth) {\r\n      setStyle({\r\n        display: 'grid',\r\n        gridTemplateRows: '1fr',\r\n        gridTemplateColumns: `repeat(${board && board.lists.length + 1}, 1fr)`\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-main' style={style}>\r\n      { board.lists.map(l => (\r\n          <div key={l.id} className='trello-board-list-wrapper'>\r\n            <BoardList key={l.id} list={l} boardFuncs={boardFuncs} />\r\n          </div>\r\n        )) }\r\n      <div className='trello-board-list-wrapper'>\r\n        <AddList board={board} setScrollIflonger={setScrollIflonger} />\r\n      </div>\r\n      <div className={`board-menu ${!showMenu && 'd-n'}`}>\r\n        <BoardMenu />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardMain\r\n","import React, { Fragment, useContext } from 'react';\r\nimport BoardNavbar from './BoardNavbar';\r\nimport BoardMain from './BoardMain';\r\n\r\n// context\r\nimport userContext from '../../../context/user/userContext';\r\nimport boardContext from '../../../context/board/boardContext';\r\n\r\n// css\r\nimport './board.css';\r\n\r\nconst Board = () => {\r\n  const { currentBoardId } = useContext(userContext);\r\n  const BoardContext = useContext(boardContext);\r\n\r\n  const { getBoard } = BoardContext;\r\n\r\n  const boardStyle = {\r\n    background: getBoard(currentBoardId).color\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <BoardNavbar board={getBoard(currentBoardId)} />\r\n      <div className='trello-board-main-wrapper lighten-20 p' style={boardStyle}>\r\n        <BoardMain boardFuncs={BoardContext} board={getBoard(currentBoardId)} />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import React, { useState, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nimport './modals.css';\r\n\r\nconst AddBoardModal = () => {\r\n  const { setModal, setCurrentBoardId, clearCurrentBoardId } = useContext(UserContext);\r\n  const { addBoard } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const [bg, setBg] = useState('#ee3a59');\r\n  const [text, setText] = useState('');\r\n\r\n  const onBgClicked = (e) => {\r\n    if(!e.target.classList.contains('func-no-click') && !e.target.classList.contains('func-colors')) {\r\n      setBg(e.target.id);\r\n    }\r\n  }\r\n\r\n  const onClose = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAdd();\r\n    }\r\n  }\r\n\r\n  const onAdd = () => {\r\n    if(text !== '') {\r\n      const id = uniqid();\r\n      addBoard(text, bg, id);\r\n      onClose();\r\n      setAlert(`board ${text.charAt(0).toUpperCase() + text.slice(1)} was created`, 'success', 4000);\r\n      clearCurrentBoardId();\r\n      setCurrentBoardId(id);\r\n    }\r\n  }\r\n\r\n  const bgColor = {\r\n    backgroundColor: bg\r\n  }\r\n\r\n  return (\r\n    <div className='modal-content add-board-modal-content'>\r\n      <div className='grid-3-1'>\r\n        <div className='p-1 grid-3-1 rounded-lg' style={bgColor}>\r\n          <div>\r\n            <input\r\n              type='text'\r\n              placeholder='Add board title'\r\n              value={text}\r\n              onChange={onChange}\r\n              onKeyUp={onKeyUp}\r\n              className='m-0 border-0 text-bold text-light pl-1 rounded'/>\r\n          </div>\r\n          <div>\r\n            <div className='close' onClick={onClose}>\r\n              &times;\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='func-colors grid-3 gap-half' onClick={onBgClicked}>\r\n          <div id='#ee3a59' className='rounded-lg p-1 background-red cursor-p'></div>\r\n          <div id='#e27b47' className='rounded-lg p-1 background-orange cursor-p'></div>\r\n          <div id='#efca58' className='rounded-lg p-1 background-yellow cursor-p'></div>\r\n          <div id='#46b29e' className='rounded-lg p-1 background-blue-l cursor-p'></div>\r\n          <div id='#344e5c' className='rounded-lg p-1 background-blue-d cursor-p'></div>\r\n          <div className='func-no-click'></div>\r\n          <div id='custom' className='rounded-lg p-1 bg-light cursor-p'></div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        onClick={onAdd}\r\n        className={`btn btn-narrow m text-bold ${text !== '' ? 'btn-success' : 'cursor-not-allowed'}`}>\r\n          Create Board\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddBoardModal\r\n","import React, { useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Labelitem = ({ label, onClick }) => {\r\n  const { labels } = useContext(BoardContext);\r\n\r\n  const thisLabel = labels.filter(l => l.id === label)[0];\r\n\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      className={`d-i-b details-label hover label-color-${thisLabel.colorName}`}>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Labelitem\r\n","import React, { useContext } from 'react';\r\nimport LabelItem from './LabelItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n\r\nconst Labels = ({ labels }) => {\r\n  const { setOptionsModal } = useContext(UserContext);\r\n\r\n  const onClick = () => {\r\n    setOptionsModal('on', 'editCardLabels');\r\n  }\r\n\r\n  return (\r\n    <div className={`mb-2 pos-rel ${labels.length === 0 && 'd-n'}`}>\r\n      <i className='fas fa-tag top-0'></i>\r\n      <div className='ml-2'>\r\n        <div className='text-85 mb text-bold'>\r\n          labels\r\n        </div>\r\n        {\r\n          labels.map(l => (\r\n            <LabelItem key={l} label={l} onClick={onClick} />\r\n          ))\r\n        }\r\n        <div className='d-i-b hover details-label bg-light text-center' onClick={onClick}>\r\n          <i className='fas fa-plus text-lg'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Labels\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Description = () => {\r\n  const { currentBoardId, currentListId, currentCard } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const [text, setText] = useState('');\r\n  const [isEditing, setIsEditing] = useState(false)\r\n\r\n  useEffect(() => {\r\n    currentCard.desc && setText(currentCard.desc);\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const startEdit = () => {\r\n    setIsEditing(true);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    onSave();\r\n  }\r\n\r\n  const onCancel = () => {\r\n    setIsEditing(false);\r\n  }\r\n\r\n  const onSave = () => {\r\n    if(text !== currentCard.desc) {\r\n      const newCard = {\r\n        ...currentCard,\r\n        desc: text\r\n      }\r\n      updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    }\r\n\r\n    setIsEditing(false);\r\n  }\r\n\r\n  return (\r\n    <div className='pos-rel mb-2'>\r\n      <i className='fas fa-align-left top-0'></i>\r\n      <div className=\"ml-2\">\r\n        <div className='text-85 mb text-bold'>\r\n          Description\r\n        </div>\r\n        <div className={`details-desc ${isEditing && 'd-n'}`} onClick={startEdit}>\r\n          { text ? text : 'add more detailed description' }\r\n        </div>\r\n        <div className={`details-desc-compose-area ${!isEditing && 'd-n'}`}>\r\n          <textarea\r\n            placeholder='enter description'\r\n            className='widht-100 border-0'\r\n            value={text}\r\n            onChange={onChange}\r\n            onBlur={onBlur}>\r\n          </textarea>\r\n          <div className='btn btn-success m' onClick={onSave}>\r\n            Save\r\n          </div>\r\n          <div className='d-i-b text-lg cursor-p m' onClick={onCancel}>\r\n            &times;\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Description\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst CheckListItem = ({ item, clId, hideDone }) => {\r\n  const { currentBoardId, currentListId, currentCard, setOptionsModal, setData } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const onChange = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      checklists: currentCard.checklists.map(c => {\r\n        if(c.id === clId) {\r\n          c.items = c.items.map(i => {\r\n            if(i.id === item.id) {\r\n              item.done = !item.done\r\n            }\r\n            return i\r\n          })\r\n        }\r\n        return c\r\n      })\r\n    }\r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard)\r\n  }\r\n\r\n  const onOptionsClicked = () => {\r\n    setOptionsModal('on', 'checklistItemActions');\r\n    setData({\r\n      item,\r\n      checklistId: clId\r\n    });\r\n  }\r\n\r\n  const  ifDone = {\r\n    textDecoration: item.done ? 'line-through' : 'none'\r\n  }\r\n  \r\n  return (\r\n    <div className={`checklist-item ${(hideDone && item.done) && 'd-n'}`}>\r\n      <input type='checkbox' defaultChecked={item.done} onChange={onChange} className='mt-0 mb-0'/>\r\n      <div style={ifDone} className='d-i-b text-85'>\r\n        { item.text }\r\n      </div>\r\n      <div className='btn btn-narrow text-sm mt-0' onClick={onOptionsClicked}>\r\n        <i className='fas fa-ellipsis-h'></i>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckListItem\r\n","import React, { useState, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport CheckListItem from './CheckListItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst Checklist = ({ checklist }) => {\r\n  const { updateCard } = useContext(BoardContext);\r\n  const { currentBoardId, currentListId, currentCard, setCurrentCard, setOptionsModal, setData } = useContext(UserContext);\r\n\r\n  const [text, setText] = useState('')\r\n  const [isAdding, setIsAdding] = useState(false)\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onAddItem(); \r\n    }\r\n  }\r\n\r\n  const onDeleteList = () => {\r\n    setOptionsModal('on', 'deleteChecklist');\r\n    setData(checklist.id);\r\n  }\r\n\r\n  const onToggleHideDone = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      checklists: currentCard.checklists.map(c => {\r\n        if(c.id === checklist.id) {\r\n          c.hideDone = !c.hideDone\r\n        }\r\n        return c\r\n      })\r\n    }\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n  }\r\n\r\n  const onStartAdd = () => {\r\n    setIsAdding(true);\r\n  }\r\n\r\n  const onCancelAdd = () => {\r\n    setIsAdding(false);\r\n  }\r\n\r\n  const onAddItem = () => {\r\n    if(text !== '') {\r\n      const newItem = {\r\n        text,\r\n        id: uniqid(),\r\n        done: false\r\n      }\r\n\r\n      const newCard = {\r\n        ...currentCard,\r\n        checklists: currentCard.checklists.map(c => {\r\n          if(c.id === checklist.id) {\r\n            c.items = [...c.items, newItem]\r\n          }\r\n          return c\r\n        })\r\n      }\r\n\r\n      updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n      setCurrentCard(newCard);\r\n      setText('');\r\n    }\r\n  }\r\n\r\n  const getNumberOfDones = () => {\r\n    let num = 0;\r\n\r\n    checklist.items.forEach(i => {\r\n      if(i.done) {\r\n        num++\r\n      }\r\n    })\r\n\r\n    return num\r\n  }\r\n\r\n  const progress = {\r\n    width: `${Math.floor(getNumberOfDones() / checklist.items.length * 100)}%`\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='text-85 mb mt-1'>\r\n        <b>{ checklist.title }</b>\r\n        <div className='float-right'>\r\n          <div\r\n            className={`btn btn-narrow text-85 mr ${getNumberOfDones() === 0 && 'd-n'}`}\r\n            onClick={onToggleHideDone}>\r\n              { checklist.hideDone\r\n                  ? `show checked items (${getNumberOfDones()})`\r\n                  : 'hide compelted items' }\r\n          </div>\r\n          <div className='btn btn-narrow text-85 mr-0' onClick={onDeleteList}>\r\n            Delete\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={`grid-1-10 width-100 ${checklist.items.length === 0 && 'd-n'}`}>\r\n        <div className='text-85 mt'>\r\n          { `${Math.floor(getNumberOfDones() / checklist.items.length * 100)}%` }\r\n        </div>\r\n        <div className='progress-bar'>\r\n          <div style={progress} className='progress'></div>\r\n        </div>\r\n      </div>\r\n      <div className={`mt ml text-85 ${!(checklist.hideDone && getNumberOfDones() === checklist.items.length) && 'd-n'}`}>\r\n        Everything in this checklist is complete!\r\n      </div>\r\n      <div className='mt'>\r\n        {\r\n          checklist.items.map(i => (\r\n            <CheckListItem key={i.id} item={i} clId={checklist.id} hideDone={checklist.hideDone} />\r\n          ))\r\n        }\r\n      </div>\r\n      <div className={`${!isAdding && 'd-n'}`}>\r\n        <input\r\n          type='text'\r\n          className='text-85 p m-0 mt-1 mb'\r\n          placeholder='Add an item'\r\n          value={text}\r\n          onKeyUp={onKeyUp}\r\n          onChange={onChange}/>\r\n        <div className='btn btn-success' onClick={onAddItem}>\r\n          Add\r\n        </div>\r\n        <div className='d-i-b cursor-p text-lg' onClick={onCancelAdd}>\r\n          &times;\r\n        </div>\r\n      </div>\r\n      <div className={`btn mt text-85 ${isAdding && 'd-n'}`} onClick={onStartAdd}>\r\n        Add an item\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Checklist\r\n","import React from 'react';\r\n\r\nimport Checklist from './Checklist';\r\n\r\nconst Checklists = ({ checklists }) => {\r\n  return (\r\n    <div className={`pos-rel mb-2 ${checklists.length === 0 && 'd-n'}`}>\r\n      <i className='fas fa-check-square top-0'></i>\r\n      <div className=\"ml-2\">\r\n        {\r\n          checklists.map(c => (\r\n            <Checklist key={c.id} checklist={c} />\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Checklists\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\n\r\nconst DetailsRightPanel = () => {\r\n  const { currentBoardId, currentListId, currentCard,setCurrentCard, setOptionsModal } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const onLabelClick = () => {\r\n    setOptionsModal('on', 'editCardLabels');\r\n  }\r\n\r\n  const onMemberClick = () => {\r\n    setOptionsModal('on', 'members');\r\n  }\r\n\r\n  const onChecklistClick = () => {\r\n    setOptionsModal('on', 'addChecklist');\r\n  }\r\n\r\n  const onMoveClick = () => {\r\n    setOptionsModal('on', 'moveCard');\r\n  }\r\n\r\n  const onCopyClick = () => {\r\n    setOptionsModal('on', 'copyCard');\r\n  }\r\n\r\n  const onWatchClick = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      watching: !currentCard.watching\r\n    }\r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    setCurrentCard(newCard);\r\n  }\r\n\r\n  const onDeleteClick = () => {\r\n     setOptionsModal('on', 'deleteCard');\r\n  }\r\n\r\n  return (\r\n    <div className='details-right-panel'>\r\n      <section>\r\n        <h5>\r\n          ADD TO CARD\r\n        </h5>\r\n        <div onClick={onLabelClick}>\r\n          <i className='fas fa-tag'></i>\r\n          Label\r\n        </div>\r\n        <div onClick={onMemberClick}>\r\n          <i className='fas fa-user'></i>\r\n          Memeber\r\n        </div>\r\n        <div onClick={onChecklistClick}>\r\n          <i className='fas fa-check-square'></i>\r\n          checkList\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <h5>\r\n          ACTIONS\r\n        </h5>\r\n        <div onClick={onMoveClick}>\r\n          <i className='fas fa-arrow-right'></i>\r\n          move\r\n        </div>\r\n        <div onClick={onCopyClick}>\r\n          <i className='fas fa-clone'></i>\r\n          copy\r\n        </div>\r\n        <div onClick={onWatchClick} className='pos-rel'>\r\n          <i className='fas fa-eye'></i>\r\n          watch\r\n          <i className={`fas fa-check ${!currentCard.watching && 'd-n'} btn btn-success text-50 watching-check btn-square`}></i>\r\n        </div>\r\n        <div onClick={onDeleteClick} className='text-danger'>\r\n          <i className='fas fa-trash'></i>\r\n          delete\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailsRightPanel\r\n","import React, { useContext } from 'react';\r\nimport Labels from './details/Labels'\r\nimport Description from './details/Description'\r\nimport Checklists from './details/Checklists'\r\nimport DetailsRightPanel from './details/DetailsRightPanel'\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst DetailsModal = () => {\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { currentBoardId, currentListId, currentCard, setModal, setOptionsModal } = userContext;\r\n  const { getList } = boardContext;\r\n\r\n  const onClose = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const onListClick  = () => {\r\n    setOptionsModal('on', 'moveCard');\r\n  }\r\n\r\n  return (\r\n    <div className='details-modal-container'>\r\n      <div className='details-modal-header'>\r\n        <div className='close text-lg' onClick={onClose}>\r\n          &times;\r\n        </div>\r\n        <i className='fas fa-th-list mr-1'></i>\r\n        { currentCard.text }\r\n        <div className='ml-2 mt text-85'>\r\n          in the List <div onClick={onListClick} className='d-i-b mr test cursor-p text-underline'>{ getList(currentBoardId, currentListId).title }</div>\r\n          <i className={`fas fa-eye ${!currentCard.watching && 'd-n'}`}></i>\r\n        </div>\r\n      </div>\r\n      <div className='details-modal-body grid-4-1'>\r\n        {/* left column */}\r\n        <div>\r\n          <Labels labels={currentCard.labels} />\r\n          {/* <Members /> */}\r\n          <Description />\r\n          <Checklists checklists={currentCard.checklists} />\r\n        </div>\r\n        {/* right column */}\r\n        <DetailsRightPanel />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailsModal\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\n\r\nimport ListItemLabels from '../pages/board/ListItemLabels';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\nimport BoardContext from '../../context/board/boardContext';\r\n\r\nconst FastEditModal = () => {\r\n  const theTextarea = useRef(null);\r\n\r\n  const {\r\n    currentBoardId,\r\n    currentListId,\r\n    fastEditModalPos,\r\n    currentCard,\r\n    clearCurrentCard,\r\n    setOptionsModal,\r\n    setModal,\r\n    bigLabels } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  useEffect(() => {\r\n    setText(currentCard.text);\r\n    theTextarea.current.focus();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const modalPos = {\r\n    position: 'absolute',\r\n    top: fastEditModalPos.top + 'px',\r\n    left: fastEditModalPos.left + 'px'\r\n  }\r\n\r\n  const rightWidth = {\r\n    width: fastEditModalPos.width + 'px'\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onUpdate();\r\n    }\r\n  }\r\n\r\n  const onUpdate = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      text\r\n    }\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    clearCurrentCard();\r\n    setModal('off');\r\n  }\r\n\r\n  const onAtionsClick = (e) => {\r\n    if(e.target.classList.contains('fas')) {\r\n      setOptionsModal('on', e.target.parentElement.id);\r\n    } else if(e.target.classList.contains('func-action-btn')) {\r\n      setOptionsModal('on', e.target.id);\r\n    } else {\r\n      setModal('off');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={modalPos} className='modal-content grid-2 gap-half'>\r\n      <div style={rightWidth} className='fast-edit-modal-right-container'>\r\n        <div className='fast-edit-modal-right'>\r\n          <ListItemLabels father='fastEditModal' bigLabels={bigLabels} labels={currentCard.labels} />\r\n          <textarea\r\n            ref={theTextarea}\r\n            className='m-0 border-0 p-0'\r\n            value={text}\r\n            onChange={onChange}\r\n            onKeyUp={onKeyUp}>\r\n          </textarea>\r\n        </div>\r\n        <div className='btn btn-success mt' onClick={onUpdate}>\r\n          Save\r\n        </div>\r\n      </div>\r\n      <div className='fast-edit-modal-action-container' onClick={onAtionsClick}>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='editCardLabels'>\r\n            <i className='fas fa-tag mr'></i>\r\n            Edit labels\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='members'>\r\n            <i className='fas fa-user mr'></i>\r\n            Change members\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='moveCard'>\r\n            <i className='fas fa-arrow-right mr'></i>\r\n            Move\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='copyCard'>\r\n            <i className='fas fa-clone mr'></i>\r\n            copy\r\n          </div>\r\n        </div>\r\n        <div className='fast-edit-modal-action'>\r\n          <div className='func-action-btn fast-edit-modal-action-btn' id='deleteCard'>\r\n            <i className='fas fa-trash mr'></i>\r\n            Delete card\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FastEditModal\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport AddBoardModal from './AddBoardModal';\r\nimport DetailsModal from './DetailsModal';\r\nimport FastEditModal from './FastEditModal';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nimport './modals.css';\r\n\r\nconst Modal = () => {\r\n  const userContext = useContext(UserContext);\r\n\r\n  const { modalStatus, modalType, setModal } = userContext;\r\n\r\n  const [showModal, setShowModal] = useState('off');\r\n  \r\n  useEffect(() => {\r\n    setShowModal(modalStatus/* from useState */);\r\n    // eslint-disable-next-line\r\n  }, [modalStatus])\r\n\r\n  const onClick = (e) => {\r\n    if(e.target.classList.contains('modal')) {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setModal('off');\r\n  }\r\n\r\n  const modalDisplay = {\r\n    display: showModal === 'on' ? 'block' : 'none'\r\n  }\r\n\r\n  return (\r\n    <div \r\n      style={modalDisplay}\r\n      className='modal'\r\n      onClick={onClick}>\r\n      {\r\n        modalType === 'addBoardModal' && <AddBoardModal />\r\n      }\r\n      {\r\n        modalType === 'detailsModal' && <DetailsModal />\r\n      }\r\n      {\r\n        modalType === 'fastEditModal' && <FastEditModal />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useContext } from 'react';\r\n\r\nimport userContext from '../../../context/user/userContext';\r\n\r\nconst DeleteAllboards = () => {\r\n  const { setOptionsModal } = useContext(userContext);\r\n\r\n  const onClick = () => {\r\n    setOptionsModal('on', 'confirmDeleteAllBoards')\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div className='p'>\r\n        are you sure you want to delete all boards?\r\n      </div>\r\n      <div className='btn btn-block btn-danger mt-1' onClick={onClick}>\r\n        Delete All Boards\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteAllboards\r\n","import React, { useContext } from 'react';\r\n\r\nimport userContext from '../../../context/user/userContext';\r\nimport boardContext from '../../../context/board/boardContext';\r\nimport alertContext from '../../../context/alert/alertContext';\r\n\r\nconst ConfirmDeleteAllBoards = () => {\r\n  const {\r\n    recentIds,\r\n    deleteFromRecent,\r\n    setOptionsModal,\r\n    keepBoardsList,\r\n    toggleShowBoardsList,\r\n    clearCurrentBoardId } = useContext(userContext)\r\n  const { deleteAllBoards } = useContext(boardContext);\r\n  const { setAlert } = useContext(alertContext);\r\n\r\n  const onClick = () => {\r\n    // delete all recent ids to prevent error\r\n    recentIds.forEach(i => deleteFromRecent(i));\r\n\r\n    // clear the state\r\n    deleteAllBoards();\r\n\r\n    setOptionsModal('off');\r\n\r\n    if(!keepBoardsList) {\r\n      toggleShowBoardsList()\r\n    }\r\n\r\n    clearCurrentBoardId();\r\n\r\n    setAlert('all boards are deleted now, your dashboard is empty', 'light', 6000);\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div className='p'>\r\n        you should confirm to delete all boards\r\n      </div>\r\n      <div className='btn btn-block btn-danger mt-1' onClick={onClick}>\r\n        Confirm\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConfirmDeleteAllBoards\r\n","import React, { useContext } from 'react';\r\n\r\nimport boardContext from '../../../context/board/boardContext'\r\nimport userContext from '../../../context/user/userContext'\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst DeleteBoard = () => {\r\n  const { getBoard, deleteBoard } = useContext(boardContext)\r\n  const { currentBoardId, clearCurrentBoardId, setModal, setOptionsModal, deleteFromRecent } = useContext(userContext)\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const onClick = () => {\r\n    deleteBoard(currentBoardId)\r\n    deleteFromRecent(currentBoardId);\r\n    setOptionsModal('off');\r\n    setModal('off');\r\n    setAlert(`board ${getBoard(currentBoardId).title} was deleted`, 'dark');\r\n    clearCurrentBoardId();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='text-85 m mb-1'>\r\n        are you sure you want to delete this board?\r\n        its permanent\r\n      </div>\r\n      <div className='btn btn-danger btn-block hover-op-10 hover-lighten' onClick={onClick}>\r\n        Delete\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteBoard\r\n","import React, { useContext } from 'react';\r\n\r\nimport userContext from '../../../context/user/userContext';\r\nimport boardContext from '../../../context/board/boardContext';\r\nimport alertContext from '../../../context/alert/alertContext';\r\n\r\nconst ClearBoard = () => {\r\n  const { currentBoardId, setModal, setOptionsModal, setShowMenu } = useContext(userContext);\r\n  const { clearBoard } = useContext(boardContext);\r\n  const { setAlert } = useContext(alertContext);\r\n\r\n  const onClick = () => {\r\n    clearBoard(currentBoardId);\r\n    setShowMenu();\r\n    setModal('off');\r\n    setOptionsModal('off');\r\n    setAlert('board is empty now', 'dark');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='p'>\r\n        are you sure you want to delete all lists in the board?\r\n      </div>\r\n      <div className='btn btn-block btn-danger mt-1' onClick={onClick}>\r\n        Delete All lists\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ClearBoard\r\n","import React, { useContext } from 'react'\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst SetBoardWatching = () => {\r\n  const { currentBoardId, setModal, setOptionsModal } = useContext(UserContext);\r\n  const { setBoardWatching } = useContext(BoardContext);\r\n\r\n  const onClick = () => {\r\n    setBoardWatching(currentBoardId);\r\n    setModal('off');\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='text-85 m mb-1'>\r\n        You can watch again via the board menu.\r\n      </div>\r\n      <div className='btn btn-danger btn-block hover-op-10 hover-lighten' onClick={onClick}>\r\n        Stop watching\r\n      </div>\r\n    </div>  \r\n  )\r\n}\r\n\r\nexport default SetBoardWatching\r\n","import React, { useContext } from 'react'\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst DeleteCard = () => {\r\n  const { currentBoardId, currentListId, currentCard, setModal, setOptionsModal } = useContext(UserContext);\r\n  const { deleteCard } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const onClick = () => {\r\n    deleteCard(currentBoardId, currentListId, currentCard.id);\r\n    setModal('off');\r\n    setOptionsModal('off');\r\n    setAlert('card deleted', 'dark');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='text-85 m mb-1'>\r\n        are you sure you want to delete this card?\r\n        its permanent\r\n      </div>\r\n      <div className='btn btn-danger btn-block hover-op-10 hover-lighten' onClick={onClick}>\r\n        Delete\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteCard\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst MoveCard = () => {\r\n  const boardsSelect = useRef(null);\r\n  const listSelect = useRef(null);\r\n  const posSelect = useRef(null);\r\n  \r\n  const [destBoardId, setDestBoardId] = useState('');\r\n  const [destListId, setDestListId] = useState('');\r\n  const [destPos, setDestPos] = useState(0);\r\n\r\n  const { currentBoardId, currentListId, currentCard, modalType, setModal, setOptionsModal } = useContext(UserContext);\r\n  const { boards, getBoard, getList, moveCard } = useContext(BoardContext);\r\n\r\n  useEffect(() => {\r\n    setDestBoardId(currentBoardId);\r\n    setDestListId(currentListId);\r\n    setDestPos(getList(currentBoardId, currentListId).items.findIndex(i => i.id === currentCard.id) + 1);\r\n    // eslint-disable-next-line\r\n  }, [currentBoardId, currentListId]);\r\n\r\n  const onBoardDestChange = (e) => {\r\n    setDestBoardId(e.target.value);\r\n    setDestListId(getBoard(e.target.value).lists[0].id)\r\n  }\r\n\r\n  const onListDestChange = (e) => {\r\n    setDestListId(e.target.value);\r\n  }\r\n\r\n  const onPosDestChange = (e) => {\r\n    setDestPos(Number(e.target.value) - 1);\r\n  }\r\n\r\n  const onMove = () => {\r\n    moveCard(currentBoardId, currentListId, currentCard.id, destBoardId, destListId, destPos, currentCard);\r\n    setOptionsModal('off');\r\n    if(modalType === 'fastEditModal') {\r\n      setModal('off');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='move-card-modal text-85'>\r\n      {/* board selectList */}\r\n      <section>\r\n        <div className='p'>\r\n          board\r\n        </div>\r\n        <select ref={boardsSelect} value={destBoardId} onChange={onBoardDestChange} className='mb'>\r\n          {\r\n            boards.map(board => (\r\n              board.lists.length !== 0 &&\r\n              <option key={board.id} value={board.id}>{ board.title }{ board.id === currentBoardId && ' (current)' }</option>\r\n            ))\r\n          }\r\n        </select>\r\n      </section>\r\n      <div className='grid-4-1 gap-half'>\r\n        {/* list selectList */}\r\n        <section>\r\n          <div className='p'>\r\n            list\r\n          </div>\r\n          <select ref={listSelect} value={destListId} onChange={onListDestChange} className='mb'>\r\n            {\r\n              destBoardId && getBoard(destBoardId).lists.map((list, index) => (\r\n                <option key={list.id} value={list.id}>{ list.title }{ list.id === currentListId && '(current)' }</option>\r\n              ))\r\n            }\r\n          </select>\r\n        </section>\r\n        {/* posotion selectList */}\r\n        <section>\r\n          <div className='p'>\r\n            position\r\n          </div>\r\n          <select ref={posSelect} value={destPos} onChange={onPosDestChange} className='mb'>\r\n            {\r\n              destBoardId\r\n                && destListId\r\n                  && getList(destBoardId, destListId).items.map((item, index) => (\r\n                      <option key={item.id} value={index + 1}>{ index + 1 }{ item.id === currentCard.id && ' (current)' }</option>\r\n                    ))\r\n            }\r\n            {\r\n              destBoardId\r\n                && destListId\r\n                  && (destListId !== currentListId)\r\n                    &&  <option value={getList(destBoardId, destListId).items.length + 1}>{ getList(destBoardId, destListId).items.length + 1 }</option>\r\n            }\r\n          </select>\r\n        </section>\r\n      </div>\r\n      <div className='btn btn-success' onClick={onMove}>\r\n        Move\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoveCard","import React, { useState, useEffect, useRef, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\n// its a copy of MoveCard.js, so ... classes and names and... are copy\r\n\r\nconst CopyCard = () => {\r\n  const boardsSelect = useRef(null);\r\n  const listSelect = useRef(null);\r\n  const posSelect = useRef(null);\r\n  \r\n  const [text, setText] = useState('');\r\n  const [keepChecklists, setKeepChecklists] = useState(true);\r\n  const [keepLabels, setKeepLabels] = useState(true);\r\n  const [destBoardId, setDestBoardId] = useState('');\r\n  const [destListId, setDestListId] = useState('');\r\n  const [destPos, setDestPos] = useState(0);\r\n\r\n  const { currentBoardId, currentListId, currentCard, modalType, setModal, setOptionsModal } = useContext(UserContext);\r\n  const { boards, getBoard, getList, moveCard } = useContext(BoardContext);\r\n\r\n  useEffect(() => {\r\n    setDestBoardId(currentBoardId);\r\n    setDestListId(currentListId);\r\n    setDestPos(getList(currentBoardId, currentListId).items.findIndex(i => i.id === currentCard.id) + 1);\r\n    setText(currentCard.text)\r\n    // eslint-disable-next-line\r\n  }, [currentBoardId, currentListId]);\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value)\r\n  }\r\n\r\n  const onKeepChecklistsChange = e => {\r\n    setKeepChecklists(e.target.checked);\r\n  }\r\n\r\n  const onKeepLabelsChange = e => {\r\n    setKeepLabels(e.target.checked);\r\n  }\r\n\r\n  const onBoardDestChange = (e) => {\r\n    setDestBoardId(e.target.value);\r\n    setDestListId(getBoard(e.target.value).lists[0].id)\r\n  }\r\n\r\n  const onListDestChange = (e) => {\r\n    setDestListId(e.target.value);\r\n  }\r\n\r\n  const onPosDestChange = (e) => {\r\n    setDestPos(Number(e.target.value) - 1);\r\n  }\r\n\r\n  const onCopy = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      text,\r\n      labels: keepLabels ? currentCard.labels : [],\r\n      checklists: keepChecklists ? currentCard.checklists : []\r\n    }\r\n\r\n    moveCard(currentBoardId, currentListId, currentCard.id, destBoardId, destListId, destPos, newCard, true);\r\n    setOptionsModal('off');\r\n    if(modalType === 'fastEditModal') {\r\n      setModal('off');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='move-card-modal text-85'>\r\n      <div className='p'>\r\n        title\r\n      </div>\r\n      <textarea value={text} onChange={onChange}>\r\n\r\n      </textarea>\r\n      <div className={`${(currentCard.checklists.length === 0 && currentCard.labels.length === 0) && 'd-n'}`}>\r\n        <div className='p'>\r\n          Keep...\r\n        </div>\r\n        <div className={`${currentCard.checklists.length === 0 && 'd-n'}`}>\r\n          <input type='checkbox' defaultChecked={keepChecklists} onChange={onKeepChecklistsChange} className='m'/>\r\n          Keep Checklists\r\n        </div>\r\n        <div className={`${currentCard.labels.length === 0 && 'd-n'}`}>\r\n          <input type='checkbox' defaultChecked={keepLabels} onChange={onKeepLabelsChange} className='m'/>\r\n          Keep Labels\r\n        </div>\r\n      </div>\r\n      <div className='p'>\r\n        Copy to...\r\n      </div>\r\n      {/* board selectList */}\r\n      <section>\r\n        <div className='p'>\r\n          board\r\n        </div>\r\n        <select ref={boardsSelect} value={destBoardId} onChange={onBoardDestChange} className='mb'>\r\n          {\r\n            boards.map(board => (\r\n              board.lists.length !== 0 &&\r\n              <option key={board.id} value={board.id}>{ board.title }</option>\r\n            ))\r\n          }\r\n        </select>\r\n      </section>\r\n      <div className='grid-4-1 gap-half'>\r\n        {/* list selectList */}\r\n        <section>\r\n          <div className='p'>\r\n            list\r\n          </div>\r\n          <select ref={listSelect} value={destListId} onChange={onListDestChange} className='mb'>\r\n            {\r\n              destBoardId && getBoard(destBoardId).lists.map((list, index) => (\r\n                <option key={list.id} value={list.id}>{ list.title }</option>\r\n              ))\r\n            }\r\n          </select>\r\n        </section>\r\n        {/* posotion selectList */}\r\n        <section>\r\n          <div className='p'>\r\n            position\r\n          </div>\r\n          <select ref={posSelect} value={destPos} onChange={onPosDestChange} className='mb'>\r\n            {\r\n              destBoardId\r\n                && destListId\r\n                  && getList(destBoardId, destListId).items.map((item, index) => (\r\n                      <option key={item.id} value={index + 1}>{ index + 1 }</option>\r\n                    ))\r\n            }\r\n            {\r\n              destBoardId\r\n                && destListId\r\n                  && (destListId !== currentListId)\r\n                    &&  <option value={getList(destBoardId, destListId).items.length + 1}>{ getList(destBoardId, destListId).items.length + 1 }</option>\r\n            }\r\n          </select>\r\n        </section>\r\n      </div>\r\n      <div className='btn btn-success' onClick={onCopy}>\r\n        Create Card\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CopyCard","import React, { useState, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst AddChecklist = () => {\r\n  const { currentBoardId, currentListId, currentCard, setCurrentCard, setOptionsModal } = useContext(UserContext)\r\n  const { updateCard } = useContext(BoardContext)\r\n\r\n  const [text, setText] = useState('checklist');\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onAdd = () => {\r\n    const newChecklist = {\r\n      title: text,\r\n      id: uniqid(),\r\n      hideDone: false,\r\n      items: []\r\n    }\r\n\r\n    const newCard = {\r\n      ...currentCard,\r\n      checklists: [...currentCard.checklists, newChecklist]\r\n    }\r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n\r\n    setCurrentCard(newCard);\r\n\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input value={text} onChange={onChange} type='text' className='m-0 text-85 p'/>\r\n      <div className='btn mt-1 btn-success' onClick={onAdd}>\r\n        Add\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddChecklist\r\n","import React, { useContext } from 'react'\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst DeleteChecklist = () => {\r\n  const { currentBoardId, currentListId, currentCard, setCurrentCard, setOptionsModal, data, setData } = useContext(UserContext);\r\n  const { updateCard } = useContext(BoardContext);\r\n\r\n  const onClick = () => {\r\n    const newListOfChecklists = currentCard.checklists.filter(l => l.id !== data)\r\n\r\n    const newCard = {\r\n      ...currentCard,\r\n      checklists: newListOfChecklists\r\n    }    \r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    setCurrentCard(newCard);\r\n\r\n    setOptionsModal('off');\r\n\r\n    setData(null);\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div className='p text-85'>\r\n        are you sure you want to delete this checklist?\r\n      </div>\r\n      <div className='btn btn-block btn-danger mt' onClick={onClick}>\r\n        Delete Checklist\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteChecklist\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst ChecklistItemActions = () => {\r\n  const { currentBoardId, currentListId, currentCard, setOptionsModal, data, setData } = useContext(UserContext)\r\n  const { addCard, updateCard } = useContext(BoardContext)\r\n\r\n  const onDelete = () => {\r\n    const newCard = {\r\n      ...currentCard,\r\n      checklists: currentCard.checklists.map(c => {\r\n        if(c.id === data.checklistId) {\r\n          c.items = c.items.filter(i => i.id !== data.item.id)\r\n        }\r\n        return c\r\n      })\r\n    }\r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    setOptionsModal('off');\r\n\r\n    setData(null);\r\n  }\r\n\r\n  const onConvertToCard = () => {\r\n    onDelete();\r\n    addCard(data.item.text, currentListId, currentBoardId);\r\n    setOptionsModal('off');\r\n    setData(null);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='list-action-item' onClick={onConvertToCard}>\r\n        convert to card\r\n      </div>\r\n      <div className='list-action-item' onClick={onDelete}>\r\n        delete\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChecklistItemActions\r\n","import React, { useState } from 'react';\r\n\r\nconst EditCardLabelItem = ({ label, searchText, setLabelId, goToEditLabel, currentCard }) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const onClick = () => {\r\n    setLabelId(label.id);\r\n  }\r\n\r\n  const onMouseEnter = () => {\r\n    setHover(true);\r\n  }\r\n\r\n  const onMouseLeave = () => {\r\n    setHover(false);\r\n  }\r\n\r\n  const onPenClick = () => {\r\n    goToEditLabel(label);\r\n  }\r\n\r\n  return (\r\n    <div className={`label-item mb width-100 ${label.name.indexOf(searchText) === -1 && 'd-n'}`}>\r\n      <div\r\n        className={`rounded-lg d-i-b text-sm label-color label-color-${label.colorName} ${hover && `label-color-${label.colorName}-hover`}`}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n        onClick={onClick}>\r\n        {\r\n          currentCard.labels.indexOf(label.id) !== -1\r\n            && <i className='label-color-check fas fa-check text-white float-right'></i>\r\n        }\r\n        <div className='label-color-text text-85 ml text-white'>\r\n          { label.name !== '' && label.name }\r\n        </div>\r\n      </div>\r\n      <div className='btn btn-no-bg rounded-lg d-i-b float-right p' onClick={onPenClick}>\r\n        <i className='fas fa-pen text-sm'></i>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditCardLabelItem\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport EditCardLabelItem from './EditCardLabelItem';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst EditCardLabels = () => {\r\n  const [text, setText] = useState('');\r\n\r\n  const { currentBoardId, currentListId, currentCard, setCurrentCard, setOptionsModal, setOptionsModalStep } = useContext(UserContext);\r\n  const { updateCard, labels } = useContext(BoardContext);\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value)\r\n  }\r\n\r\n  const setLabel = (id) => {\r\n    let newCard;\r\n    if(currentCard.labels.indexOf(id) === -1) {\r\n      // card hasnt this id / add the id\r\n      newCard = {\r\n        ...currentCard,\r\n        labels: [...currentCard.labels, id]\r\n      }\r\n    } else {\r\n      // card has this id / remove the id\r\n      newCard = {\r\n        ...currentCard,\r\n        labels: currentCard.labels.filter(l => l !== id)\r\n      }\r\n    }\r\n\r\n    updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n    setCurrentCard(newCard);\r\n  }\r\n\r\n  const goToEditLabel = (label) => {\r\n    setOptionsModalStep('on', 'editCardLabels', {label, type: 'edit'});\r\n    setOptionsModal('on', 'editLabel');\r\n  }\r\n\r\n  const onCreateClick = () => {\r\n    setOptionsModalStep('on', 'editCardLabels', {type: 'create'});\r\n    setOptionsModal('on', 'editLabel');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type='text'\r\n        value={text}\r\n        onChange={onChange}\r\n        placeholder='search labels...'\r\n        className='mt mb-1 text-85 p'/>\r\n      <div className='text-85 mb'>\r\n        Labels\r\n      </div>\r\n      {\r\n        labels.map(l => (\r\n          <EditCardLabelItem key={l.id} searchText={text} label={l} goToEditLabel={goToEditLabel} setLabelId={setLabel} currentCard={currentCard} />\r\n        ))\r\n      }\r\n      <div className='btn btn-block mt-1 text-85 mt mb' onClick={onCreateClick}>\r\n        create new label\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditCardLabels\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport uniqid from 'uniqid';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst EditLabel = () => {\r\n  const [text, setText] = useState('');\r\n  const [colorName, setColorName] = useState(null);\r\n\r\n  const {\r\n    setOptionsModal,\r\n    setOptionsModalStep,\r\n    currentCard,\r\n    currentBoardId,\r\n    currentListId,\r\n    setCurrentCard,\r\n    optionsModalStepData: data } = useContext(UserContext);\r\n  const { labels, colors, updateCard, addLabel, updateLabel, deleteLabel } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    data.type === 'edit' && setText(data.label.name);\r\n    data.type === 'edit' ? setColorName(data.label.colorName) : setColorName('green');\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onColorClick = (e) => {\r\n    setColorName(e.target.id);\r\n  }\r\n\r\n  const onSave = () => {\r\n    if(data.type === 'edit') {\r\n      updateLabel(text, colorName, data.label.id);\r\n      setOptionsModal('on', 'editCardLabels');\r\n      setOptionsModalStep('off');\r\n      setAlert('Label updated', 'success');\r\n    } else if(data.type === 'create') {\r\n      let is = false;\r\n      \r\n      labels.forEach(label => {\r\n        if(label.colorName === colorName) {\r\n          if(label.name === text) {\r\n            is = true\r\n          }\r\n        }\r\n      });\r\n\r\n      if(!is) {\r\n        const newId = uniqid();\r\n        // add to list of labels in board state\r\n        addLabel(text, colorName, newId);\r\n        const newCard = {\r\n          ...currentCard,\r\n          labels: [...currentCard.labels, newId]\r\n        }\r\n        // add label to current board\r\n        updateCard(currentBoardId, currentListId, currentCard.id, newCard);\r\n        setCurrentCard(newCard);\r\n        setAlert('Label created', 'success');\r\n      } else {\r\n        setAlert('Label already exits', 'light');\r\n      }\r\n\r\n      setOptionsModal('on', 'editCardLabels');\r\n      setOptionsModalStep('off');\r\n    }\r\n  }\r\n\r\n  const onDelete = () => {\r\n    deleteLabel(data.label.id);\r\n    setOptionsModal('on', 'editCardLabels');\r\n    setOptionsModalStep('off');\r\n    setAlert('Label deleted', 'dark');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input type='text' className='m-0 text-85 p' value={text} placeholder='enter label name' onChange={onChange}/>\r\n      <div className='text-85 mt mb'>\r\n        pick a color\r\n      </div>\r\n      <div className='mb'>\r\n        {\r\n          colors.map(color => (\r\n            <div key={color.name} style={{ background: color.color }} className='color-for-select hover-lighten' id={color.name} onClick={onColorClick}>\r\n              { \r\n                color.name === colorName\r\n                  && <i className='fas fa-check text-85 text-white m-0'></i> \r\n              }\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n      <div>\r\n        <div className='btn btn-success' onClick={onSave}>\r\n          {\r\n            data.type === 'edit'\r\n              ? 'Save'\r\n              : 'Create'\r\n          }\r\n        </div>\r\n        {\r\n          data.type === 'edit'\r\n            &&  <div className='btn btn-danger float-right' onClick={onDelete}>\r\n                  Delete\r\n                </div>\r\n        }\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditLabel\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst ListActions = () => {\r\n  const {\r\n    currentBoardId,\r\n    currentListId,\r\n    setOptionsModal,\r\n    setOptionsModalStep,\r\n    setAddCardFromListActions\r\n  } = useContext(UserContext);\r\n  const { getList, setWatching, sortList } = useContext(BoardContext);\r\n\r\n  const onAddCardClicked = () => {\r\n    setAddCardFromListActions(currentListId);\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const onCopyClicked = () => {\r\n    setOptionsModal('on', 'copyList');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  const onMoveClicked = () => {\r\n    setOptionsModal('on', 'moveList');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  const onWatchClicked = () => {\r\n    setWatching(currentBoardId, currentListId);\r\n  }\r\n\r\n  const onMoveAllCardsClicked = () => {\r\n    setOptionsModal('on', 'moveAllCards');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  const onSortClicked = () => {\r\n    sortList(currentBoardId, currentListId);\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const onDeleteAllCardsClicked = () => {\r\n    setOptionsModal('on', 'deleteAllCards');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  const onDeleteClicked = () => {\r\n    setOptionsModal('on', 'deleteList');\r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='list-action-item' onClick={onAddCardClicked}>\r\n        add card...\r\n      </div>\r\n      <div className='list-action-item' onClick={onCopyClicked}>\r\n        copy list\r\n      </div>\r\n      <div className='list-action-item' onClick={onMoveClicked}>\r\n        move list\r\n      </div>\r\n      <div className='list-action-item' onClick={onWatchClicked}>\r\n        watch\r\n        {\r\n          getList(currentBoardId, currentListId).watching\r\n            && <i className='fas fa-check ml text-85'></i>\r\n        }\r\n      </div>\r\n      <hr />\r\n      <div className='list-action-item' onClick={onMoveAllCardsClicked}>\r\n        move all cards in this list\r\n      </div>\r\n      <div className='list-action-item' onClick={onSortClicked}>\r\n        sort...\r\n      </div>\r\n      <hr />\r\n      <div className='list-action-item delete-list' onClick={onDeleteAllCardsClicked}>\r\n        delete all cards in this list\r\n      </div>\r\n      <div className='list-action-item delete-list' onClick={onDeleteClicked}>\r\n        delete this list\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListActions\r\n","import React, { useContext } from 'react';\r\n\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport UserContext from '../../../context/user/userContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst DeleteList = () => {\r\n  const { deleteList } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n\r\n  const onClick = () => {\r\n    deleteList(currentBoardId, currentListId);\r\n    setOptionsModal('off');\r\n    setAlert('list deleted', 'dark');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-1 mt p-1\">\r\n        delete this list ?\r\n        its permanent\r\n      </div>\r\n      <div className=\"btn btn-block btn-danger\" onClick={onClick}>\r\n        Delete\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteList\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst CopyList = () => {\r\n  const [name, setName] = useState('');\r\n  \r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n  const { getList, copyList } = useContext(BoardContext);\r\n\r\n  useEffect(() => {\r\n    setName(getList(currentBoardId, currentListId).title);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onCLick = () => {\r\n    copyList(currentBoardId, currentListId, name);\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setName(e.target.value);\r\n    // console.log(e.trgte.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"text-85\">\r\n        name\r\n      </div>\r\n      <input type=\"text\" className=\"m-0 mb mt pl-1\" value={name} onChange={onChange} />\r\n      <div className=\"btn btn-success mt-1\" onClick={onCLick}>\r\n        Copy List\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CopyList\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst MoveList = () => {\r\n  const boardsSelect = useRef(null);\r\n  const PosSelect = useRef(null);\r\n  \r\n  const [destBoardId, setDestBoardId] = useState(null);\r\n  const [desPos, setDestPos] = useState(0);\r\n\r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n  const { boards, getBoard, moveList } = useContext(BoardContext);\r\n\r\n  useEffect(() => {\r\n    setDestBoardId(currentBoardId);\r\n    setDestPos(getBoard(currentBoardId).lists.findIndex(l => l.id === currentListId) + 1);\r\n    boardsSelect.current.value = currentBoardId;\r\n    // eslint-disable-next-line\r\n  }, [currentBoardId, currentListId]);\r\n\r\n  const onBoardDestChange = (e) => {\r\n    setDestBoardId(e.target.value);\r\n  }\r\n\r\n  const onListDestChange = (e) => {\r\n    setDestPos(Number(e.target.value) - 1);\r\n  }\r\n\r\n  const onMove = () => {\r\n    moveList(currentBoardId, currentListId, destBoardId, desPos);\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  return (\r\n    <div className='move-list-modal text-85'>\r\n      <section>\r\n        <div className=\"p\">\r\n          board\r\n        </div>\r\n        <select ref={boardsSelect} onChange={onBoardDestChange} className='mb'>\r\n          {\r\n            boards.map(board => (\r\n              <option key={board.id} value={board.id}>{ board.title }{ board.id === currentBoardId && ' (current)' }</option>\r\n            ))\r\n          }\r\n        </select>\r\n      </section>\r\n      <section>\r\n        <div className=\"p\">\r\n          position\r\n        </div>\r\n        <select ref={PosSelect} value={desPos} onChange={onListDestChange} className='mb'>\r\n          {\r\n            destBoardId && getBoard(destBoardId).lists.map((list, index) => (\r\n              <option key={list.id} value={index + 1}>{ index + 1 }{ list.id === currentListId && ' (current)' }</option>\r\n            ))\r\n          }\r\n          {\r\n            destBoardId\r\n              && (destBoardId !== currentBoardId)\r\n              && <option value={getBoard(destBoardId).lists.length + 1}>{ getBoard(destBoardId).lists.length + 1 }</option>\r\n          }\r\n        </select>\r\n      </section>\r\n      <div className='btn btn-success' onClick={onMove}>\r\n        Move\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoveList\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\n\r\nconst DeleteAllCards = () => {\r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n  const { getList, deleteAllCards } = useContext(BoardContext);\r\n  const { setAlert } = useContext(AlertContext);\r\n\r\n  const onClick = () => {\r\n    setOptionsModal('off');\r\n    if(getList(currentBoardId, currentListId).items.length !== 0) {\r\n      setAlert('all cards were deleted!!', 'dark');\r\n      deleteAllCards(currentBoardId, currentListId);\r\n    } else {\r\n      setAlert('no card to delete!', 'warning', 2500);\r\n      setTimeout(() => {\r\n        setAlert('enter some Card first', 'light', 2500);\r\n        setTimeout(() => {\r\n          setAlert('then try to delete cards', 'primary', 2500);\r\n          setTimeout(() => {\r\n            setAlert('you undrestand?', 'danger', 2500);\r\n            setTimeout(() => {\r\n              setAlert('what card you want me to delete?', 'danger', 2500);\r\n            }, 2500);\r\n          }, 2500);\r\n        }, 2500);\r\n      }, 2500);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='p'>\r\n        are you sure you want to delete all cards in the list <b>{ getList(currentBoardId, currentListId).title }</b>?\r\n      </div>\r\n      <div className='btn btn-block btn-danger mt-1' onClick={onClick}>\r\n        Delete All Cards\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteAllCards\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\nconst MoveAllCards = () => {\r\n  const { currentBoardId, currentListId, setOptionsModal } = useContext(UserContext);\r\n  const { getBoard, moveAllCards } = useContext(BoardContext);\r\n\r\n  const onClick = (e) => {\r\n    if(!e.target.classList.contains('func-not')) {\r\n      moveAllCards(currentBoardId, currentListId, e.target.id);\r\n      setOptionsModal('off');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='func-not text-85' onClick={onClick}>\r\n      {\r\n        getBoard(currentBoardId).lists.map(list => {\r\n          if(list.id === currentListId) {\r\n            return <div key={list.id} id={list.id} className=\"func-not list-action-item item-choosen\">\r\n                      { list.title }\r\n                   </div>\r\n          } else {\r\n            return <div key={list.id} id={list.id} className=\"list-action-item\">\r\n                      { list.title }\r\n                   </div>\r\n          }\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoveAllCards\r\n","import React, { useContext } from 'react';\r\n\r\nimport UserContext from '../../../context/user/userContext';\r\n// import BoardContext from '../../../context/board/boardContext';\r\n\r\nconst NewCardOptions = () => {\r\n  const { setOptionsModalStep } = useContext(UserContext);\r\n  // const {  } = useContext(BoardContext);\r\n\r\n  const onLabelsClicked = () => {\r\n    \r\n    \r\n  }\r\n\r\n  const dontKnow = () => {\r\n    \r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  const maybeWatch = () => {\r\n    \r\n    setOptionsModalStep('on', 'listActions');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='list-action-item' onClick={onLabelsClicked}>\r\n        labels\r\n      </div>\r\n      <div className='list-action-item' onClick={dontKnow}>\r\n        dont know\r\n      </div>\r\n      <div className='list-action-item' onClick={maybeWatch}>\r\n        maybe watch\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewCardOptions\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport DeleteAllBoards from './options/DeleteAllBoards';\r\nimport ConfirmDeleteAllBoards from './options/ConfirmDeleteAllBoards';\r\nimport DeleteBoard from './options/DeleteBoard';\r\nimport ClearBoard from './options/ClearBoard';\r\nimport SetBoardWatching from './options/SetBoardWatching';\r\nimport DeleteCard from './options/DeleteCard';\r\nimport MoveCard from './options/MoveCard';\r\nimport CopyCard from './options/CopyCard';\r\nimport AddChecklist from './options/AddChecklist';\r\nimport DeleteChecklist from './options/DeleteChecklist';\r\nimport ChecklistItemActions from './options/ChecklistItemActions';\r\nimport EditCardLabels from './options/EditCardLabels';\r\nimport EditLabel from './options/EditLabel';\r\nimport ListActions from './options/ListActions';\r\nimport DeleteList from './options/DeleteList';\r\nimport CopyList from './options/CopyList';\r\nimport MoveList from './options/MoveList';\r\nimport DeleteAllCards from './options/DeleteAllCards';\r\nimport MoveAllCards from './options/MoveAllCards';\r\nimport NewCardOptions from './options/NewCardOptions';\r\n\r\nimport UserContext from '../../context/user/userContext';\r\n\r\nimport './modals.css';\r\n\r\nconst OptionsModal = () => {\r\n  const container = useRef(null);\r\n\r\n  const userContext = useContext(UserContext);\r\n\r\n  const {\r\n    optionsModalStatus,\r\n    optionsModalType,\r\n    optionsModalStepStatus,\r\n    optionsModalStepType,\r\n    mousePos,\r\n    setOptionsModal,\r\n    setOptionsModalStep} = userContext;\r\n\r\n  const [showModal, setShowModal] = useState('off');\r\n  const [pos, setPos] = useState({});\r\n  \r\n  useEffect(() => {\r\n    setShowModal(optionsModalStatus/* from useState */);\r\n    setOptionsPos();\r\n    // eslint-disable-next-line\r\n  }, [optionsModalStatus, mousePos])\r\n\r\n  const onClick = (e) => {\r\n    if(e.target.id === 'options-modal') {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  const onBack = () => {\r\n    setOptionsModal('on', optionsModalStepType);\r\n    setOptionsModalStep('off');\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setOptionsModal('off');\r\n  }\r\n\r\n  const setOptionsPos = () => {\r\n    setTimeout(() => {\r\n      if(mousePos) {\r\n        let rect;\r\n        rect = container.current.getBoundingClientRect();\r\n\r\n        if(window.innerWidth - mousePos.x - 10 < rect.width && window.innerHeight - mousePos.y > rect.height) {\r\n          setPos({\r\n            right: 10,\r\n            top: mousePos.y + 10 + 'px'\r\n          });\r\n        } else if(window.innerHeight - mousePos.y - 10 < rect.height && window.innerWidth - mousePos.x > rect.width) {\r\n          setPos({\r\n            left: mousePos.x + 10 + 'px',\r\n            bottom: 10\r\n          })\r\n        } else if(window.innerHeight - mousePos.y - 10 < rect.height && window.innerWidth - mousePos.x - 10 < rect.width) {\r\n            setPos({\r\n            right: 10,\r\n            bottom: 10\r\n          })\r\n        } else {\r\n          setPos({\r\n            left: mousePos.x + 10 + 'px',\r\n            top: mousePos.y + 10 + 'px'\r\n          })\r\n        }\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  const modalDisplay = {\r\n    display: showModal === 'on' ? 'block' : 'none'\r\n  }\r\n\r\n  return (\r\n    <div \r\n      style={modalDisplay}\r\n      id='options-modal'\r\n      onClick={onClick}>\r\n        <div ref={container} className='options-modal-container' style={pos}>\r\n          <div className='options-modal-header'>\r\n            {\r\n              optionsModalStepStatus === 'on'\r\n                && <div className='back d-i-b float-left cursor-p lighten-30 hover-darken' onClick={onBack}>\r\n                      <i className='fas fa-angle-left'></i>\r\n                    </div>\r\n            }\r\n            <div className=\"close\" onClick={closeModal}>\r\n              &times;\r\n            </div>\r\n            { optionsModalType === 'deleteAllBoards' && 'Are you sure?' }\r\n            { optionsModalType === 'confirmDeleteAllBoards' && 'CONFIRM' }\r\n            { optionsModalType === 'deleteBoard' && 'Delete board?' }\r\n            { optionsModalType === 'clearBoard' && 'Clear board?' }\r\n            { optionsModalType === 'setBoardWatching' && 'Stop watching?' }\r\n            { optionsModalType === 'editCardLabels' && 'Labels' }\r\n            { optionsModalType === 'editLabel' && 'Edit Label' }\r\n            { optionsModalType === 'moveCard' && 'Move card' }\r\n            { optionsModalType === 'copyCard' && 'Copy card' }\r\n            { optionsModalType === 'members' && 'Members' }\r\n            { optionsModalType === 'addChecklist' && 'Add Cheklist' }\r\n            { optionsModalType === 'deleteChecklist' && 'Delete Cheklist?' }\r\n            { optionsModalType === 'checklistItemActions' && 'Item Actions' }\r\n            { optionsModalType === 'deleteCard' && 'Delete Card?' }\r\n            { optionsModalType === 'listActions' && 'List Actions' }\r\n            { optionsModalType === 'deleteList' && 'Delete List?' }\r\n            { optionsModalType === 'copyList' && 'Copy List' }\r\n            { optionsModalType === 'moveList' && 'Move List' }\r\n            { optionsModalType === 'deleteAllCards' && 'Empty the List?' }\r\n            { optionsModalType === 'moveAllCards' && 'select board' }\r\n            { optionsModalType === 'newCardOptions' && 'Card options' }\r\n          </div>\r\n          <div className='options-modal-body'>\r\n            { optionsModalType === 'deleteAllBoards' && <DeleteAllBoards /> }\r\n            { optionsModalType === 'confirmDeleteAllBoards' && <ConfirmDeleteAllBoards /> }\r\n            { optionsModalType === 'deleteBoard' && <DeleteBoard /> }\r\n            { optionsModalType === 'setBoardWatching' && <SetBoardWatching /> }\r\n            { optionsModalType === 'clearBoard' && <ClearBoard /> }\r\n            { optionsModalType === 'editCardLabels' && <EditCardLabels /> }\r\n            { optionsModalType === 'moveCard' && <MoveCard /> }\r\n            { optionsModalType === 'copyCard' && <CopyCard /> }\r\n            { optionsModalType === 'addChecklist' && <AddChecklist /> }\r\n            { optionsModalType === 'deleteChecklist' && <DeleteChecklist /> }\r\n            { optionsModalType === 'checklistItemActions' && <ChecklistItemActions /> }\r\n            { optionsModalType === 'deleteCard' && <DeleteCard /> }\r\n            { optionsModalType === 'editLabel' && <EditLabel /> }\r\n            { optionsModalType === 'listActions' && <ListActions /> }\r\n            { optionsModalType === 'deleteList' && <DeleteList /> }\r\n            { optionsModalType === 'copyList' && <CopyList /> }\r\n            { optionsModalType === 'moveList' && <MoveList /> }\r\n            { optionsModalType === 'deleteAllCards' && <DeleteAllCards /> }\r\n            { optionsModalType === 'moveAllCards' && <MoveAllCards /> }\r\n            { optionsModalType === 'newCardOptions' && <NewCardOptions /> }\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OptionsModal\r\n","import React from 'react'\r\n\r\nconst AlertItem = ({ alert, deleteAlert }) => {\r\n  const onClick = () => {\r\n    deleteAlert(alert.id);\r\n  }\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      className={`trello-alert-item alert rounded-lg alert-${alert.type}`}>\r\n        <div className='trello-alert-item-msg'>\r\n          { alert.msg.charAt(0).toUpperCase() + alert.msg.slice(1) }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertItem\r\n","import React, { useContext } from 'react';\r\nimport AlertItem from './AlertItem';\r\n\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alerts = () => {\r\n  const { alerts, deleteAlert } = useContext(AlertContext);\r\n\r\n  return (\r\n    <div className='trello-alerts-wrapper'>\r\n      {\r\n        alerts.map(a => (\r\n          <AlertItem\r\n            key={a.id}\r\n            alert={a}\r\n            deleteAlert={deleteAlert} />\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alerts\r\n","import React, { useEffect, useContext } from 'react';\r\nimport Navbar from './components/layout/Navbar';\r\nimport ListOfBoards from './components/layout/ListOfBoards';\r\nimport Home from './components/pages/home/Home';\r\nimport Board from './components/pages/board/Board';\r\nimport Modal from './components/modal/Modal';\r\nimport OptionsModal from './components/modal/OptionsModal';\r\nimport Alerts from './components/alert/Alerts';\r\n\r\nimport userContext from './context/user/userContext';\r\nimport boardContext from './context/board/boardContext';\r\n\r\nimport './trello-clone.css';\r\n\r\nconst App = () => {\r\n  const {\r\n    currentBoardId,\r\n    setMousePos,\r\n    bigLabels,\r\n    getUserdata,\r\n    keepBoardsList,\r\n    showBoardsList,\r\n    toggleShowBoardsList,\r\n    optionsModalStatus } = useContext(userContext);\r\n\r\n  const { boards, labels, getBoardsData } = useContext(boardContext)\r\n\r\n  // to display board page for development purposes\r\n  useEffect(() => {\r\n    // focus on inputs\r\n    // setScrollIfLonger if board copied\r\n    // newCardActions in boardList does nothing yet ( add card must be editted to send an object to the context not a text )\r\n    // in final deploy, must change the add functions, ex. => i have prop on cards, but in addCard func, there is no \"whatchin: false\" so it must be changed as the other, add label (probalbely not), addList, add Board, and ...\r\n    // add members to details modal next to labels\r\n    // style checkboxes\r\n    // NewCardOptions to be done (its half done)\r\n    // clear all boards to boards list in the navbar\r\n    // cahnge board color\r\n    console.log('notes ↑')\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    getBoardsData()\r\n    getUserdata()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const stiringed = JSON.stringify(boards)\r\n    \r\n    localStorage.setItem('boards', stiringed);\r\n  }, [boards]);\r\n\r\n  useEffect(() => {\r\n    const stiringed = JSON.stringify(labels)\r\n    \r\n    localStorage.setItem('labels', stiringed);\r\n  }, [labels]);\r\n\r\n  useEffect(() => {\r\n    const stiringed = JSON.stringify(bigLabels)\r\n    \r\n    localStorage.setItem('bigLabels', stiringed);\r\n  }, [bigLabels]);\r\n\r\n  const onClick = (e) => {\r\n    if(optionsModalStatus === 'off') {\r\n      setMousePos(e.clientX, e.clientY)\r\n    }\r\n  }\r\n\r\n  const CloseListOfBoards = (e) => {\r\n    if(!keepBoardsList) {\r\n      if(showBoardsList) {\r\n        toggleShowBoardsList();\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div onClick={onClick} className='all-wrapper'>\r\n      <Modal />\r\n      <OptionsModal />\r\n      <Alerts />\r\n      <div className={`all-wrapper ${keepBoardsList ? 'grid-1-4 gap-none' : ''}`}>\r\n        <div className='all-wrapper'>\r\n          <ListOfBoards />\r\n        </div>\r\n        <div className='all-wrapper' onClick={CloseListOfBoards}>\r\n          <Navbar />\r\n          { !currentBoardId\r\n              ? <Home />\r\n              : <Board />\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\nexport default App","import {\r\n  DELETE_ALL_BOARDS,\r\n  SET_BOARDS,\r\n  ADD_BOARD,\r\n  DELETE_BOARD,\r\n  CLEAR_BOARD,\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_BOARD_WATCHING,\r\n  SET_WATCHING,\r\n  SET_DESCRIBTION,\r\n  ADD_LIST,\r\n  DELETE_LIST,\r\n  DELETE_ALL_CARDS,\r\n  MOVE_ALL_CARDS,\r\n  SET_LIST_TITLE,\r\n  COPY_LIST,\r\n  SORT_LIST,\r\n  MOVE_LIST,\r\n  ADD_CARD,\r\n  UPDATE_CARD,\r\n  DELETE_CARD,\r\n  MOVE_CARD,\r\n  SET_LABELS,\r\n  ADD_LABEL,\r\n  UPDATE_LABEL,\r\n  DELETE_LABEL\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case DELETE_ALL_BOARDS:\r\n      return {\r\n        ...state,\r\n        boards: []\r\n      }\r\n    case SET_BOARDS:\r\n     return {\r\n       ...state,\r\n       boards: action.payload\r\n     }\r\n    case ADD_BOARD:\r\n      return {\r\n        ...state,\r\n        boards: [...state.boards, action.payload]\r\n      }\r\n    case DELETE_BOARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.filter(b => b.id !== action.payload)\r\n      }\r\n    case CLEAR_BOARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload) {\r\n            b.lists = []\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_TITLE:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.title = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_STAR:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload) {\r\n            b.starred = !b.starred\r\n          }\r\n          return b\r\n        })\r\n      }\r\n\r\n    case SET_BOARD_WATCHING:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload) {\r\n            b.watching = !b.watching\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_WATCHING:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.watching = !l.watching\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_DESCRIBTION:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.describtion = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.lists.push(action.payload.newList)\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case COPY_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists.splice(b.lists.findIndex(l => l.id === action.payload.listId) + 1, 0, action.payload.newList)\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SORT_LIST:\r\n     return {\r\n       ...state,\r\n       boards: state.boards.map(b => {\r\n         if(b.id === action.payload.boardId) {\r\n           b.lists = b.lists.map(l => {\r\n            if(l.id === action.payload.listId) {\r\n              l.items = action.payload.newItems\r\n            }\r\n            return l\r\n           })\r\n         }\r\n         return b\r\n       })\r\n     }\r\n    case MOVE_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.firstBoardId) {\r\n            board.lists.splice(action.payload.firstIndex, 1)\r\n          }\r\n          if(board.id === action.payload.destBoardId) {\r\n            board.lists.splice(action.payload.destIndex, 0, action.payload.list)\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.boardId) {\r\n            board.lists = board.lists.filter(list => list.id !== action.payload.listId);\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case DELETE_ALL_CARDS:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items = []\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case MOVE_ALL_CARDS:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.firstListId) {\r\n                l.items = []\r\n              }\r\n              if(l.id === action.payload.destListId) {\r\n                l.items = l.items.concat(action.payload.newItems)\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items.push(action.payload.newCard);\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    \r\n    case SET_LIST_TITLE:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.boardId) {\r\n            board.lists = board.lists.map(list => {\r\n              if(list.id === action.payload.listId) {\r\n                list.title = action.payload.newTitle\r\n              }\r\n              return list\r\n            })\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case UPDATE_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => {\r\n          if(board.id === action.payload.boardId) {\r\n            board.lists = board.lists.map(list => {\r\n              if(list.id === action.payload.listId) {\r\n                list.items = list.items.map(item => (\r\n                  item.id === action.payload.cardId ? action.payload.newCard : item\r\n                ))\r\n              }\r\n              return list\r\n            })\r\n          }\r\n          return board\r\n        })\r\n      }\r\n    case DELETE_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items = l.items.filter(i => i.id !== action.payload.cardId)\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case MOVE_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.destBoardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.destListId) {\r\n                l.items.splice(action.payload.destIndex, 0, action.payload.card)\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_LABELS:\r\n      return {\r\n        ...state,\r\n        labels: action.payload\r\n      }\r\n    case ADD_LABEL:\r\n      return {\r\n        ...state,\r\n        labels: [...state.labels, action.payload]\r\n      }\r\n    case UPDATE_LABEL:\r\n      return {\r\n        ...state,\r\n        labels: state.labels.map(label => {\r\n          if(label.id === action.payload.id) {\r\n            label.name = action.payload.name\r\n            label.color = action.payload.color\r\n            label.colorName = action.payload.colorName\r\n          }\r\n          return label\r\n        })\r\n      }\r\n    case DELETE_LABEL:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          b.lists = b.lists.map(l => {\r\n            l.items = l.items.map(i => {\r\n              i.labels = i.labels.filter(l => l !== action.payload)\r\n              return i\r\n            })\r\n            return l\r\n          })\r\n          return b\r\n        }),\r\n        labels: state.labels.filter(l => l.id !== action.payload)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// board state\r\nexport const DELETE_ALL_BOARDS = 'DELETE_ALL_BOARDS';\r\nexport const SET_BOARDS = 'SET_BOARDS';\r\nexport const ADD_BOARD = 'ADD_BOARD';\r\nexport const DELETE_BOARD = 'DELETE_BOARD';\r\nexport const CLEAR_BOARD = 'CLEAR_BOARD';\r\nexport const GET_BOARDS_NAMES = 'GET_BOARDS_NAMES';\r\nexport const SET_TITLE = 'SET_TITLE';\r\nexport const SET_STAR = 'SET_STAR';\r\nexport const SET_BOARD_WATCHING = 'SET_BOARD_WATCHING';\r\nexport const SET_WATCHING = 'SET_WATCHING';\r\nexport const SET_DESCRIBTION = 'SET_DESCRIBTION';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const DELETE_LIST = 'DELETE_LIST';\r\nexport const DELETE_ALL_CARDS = 'DELETE_ALL_CARDS';\r\nexport const MOVE_ALL_CARDS = 'MOVE_ALL_CARDS';\r\nexport const SET_LIST_TITLE = 'SET_LIST_TITLE';\r\nexport const COPY_LIST = 'COPY_LIST';\r\nexport const SORT_LIST = 'SORT_LIST';\r\nexport const MOVE_LIST = 'MOVE_LIST';\r\nexport const ADD_CARD = 'ADD_CARD';\r\nexport const UPDATE_CARD = 'UPDATE_CARD';\r\nexport const DELETE_CARD = 'DELETE_CARD';\r\nexport const MOVE_CARD = 'MOVE_CARD';\r\nexport const SET_LABELS = 'SET_LABELS';\r\nexport const ADD_LABEL = 'ADD_LABEL';\r\nexport const UPDATE_LABEL = 'UPDATE_LABEL';\r\nexport const DELETE_LABEL = 'DELETE_LABEL';\r\n\r\n// alert state\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const DELETE_ALERT = 'DELETE_ALERT';\r\n\r\n// user state\r\nexport const SET_CURRENT_BOARD_ID = 'SET_CURRENT_BOARD_ID';\r\nexport const CLEAR_CURRENT_BOARD_ID = 'CLEAR_CURRENT_BOARD_ID';\r\nexport const SET_CURRENT_LIST_ID = 'SET_CURRENT_LIST_ID';\r\nexport const CLEAR_CURRENT_LIST_ID = 'CLEAR_CURRENT_LIST_ID';\r\nexport const SET_RECENT_IDS = 'SET_RECENT_IDS';\r\nexport const SET_MODAL = 'SET_MODAL';\r\nexport const SET_MODAL_TYPE = 'SET_MODAL_TYPE';\r\nexport const SET_OPTIONS_MODAL = 'SET_OPTIONS_MODAL';\r\nexport const SET_OPTIONS_MODAL_TYPE = 'SET_OPTIONS_MODAL_TYPE';\r\nexport const SET_FAST_EDIT_MODAL_POS = 'SET_FAST_EDIT_MODAL_POS';\r\nexport const SET_CURRENT_CARD = 'SET_CURRENT_CARD';\r\nexport const CLEAR_CURRENT_CARD = 'CLEAR_CURRENT_CARD';\r\nexport const SET_MOUSE_POS = 'S`ET_MOUSE_POS';\r\nexport const SET_BIG_LABELS = 'SET_BIG_LABELS';\r\nexport const SET_OPTIONS_MODAL_STEP = 'SET_OPTIONS_MODAL_STEP';\r\nexport const SET_OPTIONS_MODAL_STEP_TYPE = 'SET_OPTIONS_MODAL_STEP_TYPE';\r\nexport const SET_OPTIONS_MODAL_STEP_DATA = 'SET_OPTIONS_MODAL_STEP_DATA';\r\nexport const SET_DATA = 'SET_DATA';\r\nexport const SET_SHOW_MENU = 'SET_SHOW_MENU';\r\nexport const TOGGLE_SHOW_BOARDS = 'TOGGLE_SHOW_BOARDS';\r\nexport const TOGGLE_KEEP_BOARDS = 'TOGGLE_KEEP_BOARDS';\r\n\r\n// \r\nexport const TEST = 'TEST';\r\n","import React, { useReducer } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport BoardContext from './boardContext';\r\nimport boardReducer from './boardReducer';\r\nimport {\r\n  DELETE_ALL_BOARDS,\r\n  SET_BOARDS,\r\n  ADD_BOARD,\r\n  DELETE_BOARD,\r\n  CLEAR_BOARD,\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_BOARD_WATCHING,\r\n  SET_WATCHING,\r\n  SET_DESCRIBTION,\r\n  ADD_LIST,\r\n  DELETE_LIST,\r\n  DELETE_ALL_CARDS,\r\n  MOVE_ALL_CARDS,\r\n  SET_LIST_TITLE,\r\n  COPY_LIST,\r\n  SORT_LIST,\r\n  MOVE_LIST,\r\n  ADD_CARD,\r\n  UPDATE_CARD,\r\n  DELETE_CARD,\r\n  MOVE_CARD,\r\n  SET_LABELS,\r\n  ADD_LABEL,\r\n  UPDATE_LABEL,\r\n  DELETE_LABEL,\r\n} from '../types';\r\n\r\nconst BoardState = props => {\r\n  const initialState = {\r\n    boards: [],\r\n    labels: [\r\n      {\r\n        id: 1,\r\n        color: '#61bd4f',\r\n        colorName: 'green',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 2,\r\n        color: '#f2d600',\r\n        colorName: 'yellow',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 3,\r\n        color: '#ff9f1a',\r\n        colorName: 'orange',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 4,\r\n        color: '#eb5a46',\r\n        colorName: 'red',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 5,\r\n        color: '#c377e0',\r\n        colorName: 'purple',\r\n        name: ''\r\n      },\r\n      {\r\n        id: 6,\r\n        color: '#0079bf',\r\n        colorName: 'blue',\r\n        name: ''\r\n      }\r\n    ],\r\n    colors: [\r\n      {\r\n        name: 'green',\r\n        color: '#61bd4f'\r\n      },\r\n      {\r\n        name: 'yellow',\r\n        color: '#f2d600'\r\n      },\r\n      {\r\n        name: 'orange',\r\n        color: '#ff9f1a'\r\n      },\r\n      {\r\n        name: 'red',\r\n        color: '#eb5a46'\r\n      },\r\n      {\r\n        name: 'purple',\r\n        color: '#c377e0'\r\n      },\r\n      {\r\n        name: 'blue',\r\n        color: '#0079bf'\r\n      },\r\n      {\r\n        name: 'sky',\r\n        color: '#00c2e0'\r\n      },\r\n      {\r\n        name: 'lime',\r\n        color: '#51e898'\r\n      },\r\n      {\r\n        name: 'pink',\r\n        color: '#ff78cb'\r\n      },\r\n      {\r\n        name: 'black',\r\n        color: '#344563'\r\n      }\r\n    ]\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(boardReducer, initialState);\r\n\r\n  // Get data from local storage\r\n  const getBoardsData = () => {\r\n    const boards = JSON.parse(localStorage.getItem('boards'));\r\n    const labels = JSON.parse(localStorage.getItem('labels'));\r\n\r\n    if(boards) {\r\n      dispatch({\r\n        type: SET_BOARDS,\r\n        payload: boards\r\n      });\r\n    }\r\n    if(labels) {\r\n      dispatch({\r\n        type: SET_LABELS,\r\n        payload: labels\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteAllBoards = () => {\r\n    dispatch({\r\n      type: DELETE_ALL_BOARDS\r\n    });\r\n  }\r\n\r\n  const addBoard = (title, color, id) => {\r\n    const newBaord = {\r\n      title,\r\n      id,\r\n      color,\r\n      starred: false,\r\n      watching: false,\r\n      describtion: '',\r\n      lists: []\r\n    }\r\n    dispatch({\r\n      type: ADD_BOARD,\r\n      payload: newBaord\r\n    });\r\n  }\r\n\r\n  const deleteBoard = (id) => {\r\n    dispatch({\r\n      type: DELETE_BOARD,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  // send a single board to board page (returns an array with one object)\r\n  const getBoard = (id) => {\r\n    const board = state.boards.filter(b => b.id === id);\r\n\r\n    return board[0]\r\n  }\r\n\r\n  const clearBoard = (id) => {\r\n    dispatch({\r\n      type: CLEAR_BOARD,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  const setBoardWatching = (id) => {\r\n    dispatch({\r\n      type: SET_BOARD_WATCHING,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  const getList = (boardId, ListId) => {\r\n    const board = state.boards.filter(b => b.id === boardId)[0];\r\n\r\n    const list = board.lists.filter(l => l.id === ListId)[0];\r\n\r\n    return list\r\n  }\r\n\r\n  // set board title\r\n  const setTitle = (text, id) => {\r\n    dispatch({\r\n      type: SET_TITLE,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board starred or unstarred\r\n  const setStar = (id) => {\r\n    dispatch({\r\n      type: SET_STAR,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  // set watching for a list\r\n  const setWatching = (boardId, listId) => {\r\n    dispatch({\r\n      type: SET_WATCHING,\r\n      payload: {\r\n        boardId,\r\n        listId\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board describtion\r\n  const setDescribtion = (text, id) => {\r\n    dispatch({\r\n      type: SET_DESCRIBTION,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // add List to board\r\n  const addList = (text, id) => {\r\n    const newList = {\r\n      title: text,\r\n      id: uniqid(),\r\n      watching: false,\r\n      items: []\r\n    }\r\n    dispatch({\r\n      type: ADD_LIST,\r\n      payload: {\r\n        id,\r\n        newList\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteList = (boardId, listId) => {\r\n    dispatch({\r\n      type: DELETE_LIST,\r\n      payload: {\r\n        boardId,\r\n        listId\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteAllCards = (boardId, listId) => {\r\n    dispatch({\r\n      type: DELETE_ALL_CARDS,\r\n      payload: {\r\n        boardId,\r\n        listId\r\n      }\r\n    });\r\n  }\r\n\r\n  const moveAllCards = (boardId, firstListId, destListId) => {\r\n    let newItems = [];\r\n\r\n    getList(boardId, firstListId).items.forEach(item => {\r\n      newItems.push(item);\r\n    });\r\n\r\n    newItems = newItems.map(i => {\r\n      return {\r\n        ...i,\r\n        id: uniqid()\r\n      }\r\n    })\r\n\r\n    // now newItems is equal to an array of items with new ids\r\n\r\n    dispatch({\r\n      type: MOVE_ALL_CARDS,\r\n      payload: {\r\n        boardId,\r\n        firstListId,\r\n        destListId,\r\n        newItems\r\n      }\r\n    });\r\n  }\r\n\r\n  const setListTitle = (boardId, listId, newTitle) => {\r\n    dispatch({\r\n      type: SET_LIST_TITLE,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        newTitle\r\n      }\r\n    });\r\n  }\r\n\r\n  const copyList = (boardId, listId, title) => {\r\n    let theList;\r\n\r\n    state.boards.forEach(b => b.id === boardId && b.lists.forEach(l => {\r\n      if(l.id === listId) {\r\n        theList = l\r\n      }\r\n    }))\r\n    \r\n    const newList = {\r\n      ...theList,\r\n      title,\r\n      id: uniqid()\r\n    }\r\n\r\n    dispatch({\r\n      type: COPY_LIST,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        newList\r\n      }\r\n    });\r\n  }\r\n\r\n  const sortList = (boardId, listId) => {\r\n    const newItems = getList(boardId, listId).items;\r\n\r\n    newItems.sort((a, b) => a.text < b.text ? -1 : a.text > b.text ? 1 : 0);\r\n\r\n    dispatch({\r\n      type: SORT_LIST,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        newItems\r\n      }\r\n    });\r\n  }\r\n\r\n  // takes in four prams: (first board id, first list id, destination board id, destionation index)\r\n  const moveList = (firstBoardId, firstListId, destBoardId, destIndex) => {\r\n    const firstIndex = getBoard(firstBoardId).lists.findIndex(l => l.id === firstListId);\r\n\r\n    const list = getList(firstBoardId, firstListId);\r\n\r\n    dispatch({\r\n      type: MOVE_LIST,\r\n      payload: {\r\n        firstBoardId,\r\n        firstIndex,\r\n        destBoardId,\r\n        destIndex,\r\n        list\r\n      }\r\n    });\r\n  }\r\n\r\n  // add card to list\r\n  const addCard = (text, listId, boardId) => {\r\n    const newCard = {\r\n      text,\r\n      desc: '',\r\n      id: uniqid(),\r\n      watching: false,\r\n      labels: [],\r\n      checklists: []\r\n    }\r\n    dispatch({\r\n      type: ADD_CARD,\r\n      payload: {\r\n        newCard,\r\n        listId,\r\n        boardId\r\n      }\r\n    });\r\n  }\r\n\r\n  // update card\r\n  const updateCard = (boardId, listId, cardId, newCard) => {\r\n    dispatch({\r\n      type: UPDATE_CARD,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        cardId,\r\n        newCard\r\n      }\r\n    })\r\n  }\r\n\r\n  const deleteCard = (boardId, listId, cardId) => {\r\n    dispatch({\r\n      type: DELETE_CARD,\r\n      payload: {\r\n        boardId,\r\n        listId,\r\n        cardId\r\n      }\r\n    });\r\n  }\r\n\r\n  const moveCard = (firstBoardId,firstListId,cardId,destBoardId,destListId,destIndex,card, isCopy) => {\r\n    // isCopy Argument is here because i use same functions for copy and move a card\r\n    // in case of copy we shouldent delete first card\r\n\r\n    !isCopy && deleteCard(firstBoardId, firstListId, cardId);\r\n\r\n    const cardWithNewId = {\r\n      ...card,\r\n      id: uniqid()\r\n    }\r\n\r\n    dispatch({\r\n      type: MOVE_CARD,\r\n      payload: {\r\n        destBoardId,\r\n        destListId,\r\n        destIndex,\r\n        card: cardWithNewId\r\n      }\r\n    });\r\n  }\r\n\r\n  const addLabel = (name, colorName, id) => {\r\n    let is = false;\r\n    const newLabel = {\r\n      id,\r\n      colorName,\r\n      name,\r\n      color: state.colors.filter(c => c.name === colorName)[0].color\r\n    };\r\n\r\n    state.labels.forEach(label => {\r\n      if(label.colorName === colorName) {\r\n        if(label.name === name) {\r\n          is = true\r\n        }\r\n      }\r\n    });\r\n\r\n    if(!is) {\r\n      dispatch({\r\n        type : ADD_LABEL,\r\n        payload: newLabel\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateLabel = (name, colorName, id) => {\r\n    dispatch({\r\n      type: UPDATE_LABEL,\r\n      payload: {\r\n        name,\r\n        colorName,\r\n        color: state.colors.filter(c => c.name === colorName)[0].color,\r\n        id\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteLabel = (id) => {\r\n    dispatch({\r\n      type: DELETE_LABEL,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <BoardContext.Provider\r\n      value={{\r\n        boards: state.boards,\r\n        labels: state.labels,\r\n        colors: state.colors,\r\n        getBoardsData,\r\n        deleteAllBoards,\r\n        addBoard,\r\n        deleteBoard,\r\n        getBoard,\r\n        clearBoard,\r\n        getList,\r\n        setTitle,\r\n        setStar,\r\n        setBoardWatching,\r\n        setWatching,\r\n        setDescribtion,\r\n        addList,\r\n        deleteList,\r\n        deleteAllCards,\r\n        moveAllCards,\r\n        setListTitle,\r\n        copyList,\r\n        sortList,\r\n        moveList,\r\n        addCard,\r\n        updateCard,\r\n        deleteCard,\r\n        moveCard,\r\n        addLabel,\r\n        updateLabel,\r\n        deleteLabel,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BoardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BoardState;","import { \r\n  SET_ALERT,\r\n  DELETE_ALERT\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: [action.payload]\r\n      }\r\n    case DELETE_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: state.alerts.filter(a => a.id !== action.payload)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport AlertContext from './alertContext';\r\nimport alertReducer from './alertReducer';\r\nimport { \r\n  SET_ALERT,\r\n  DELETE_ALERT\r\n} from '../types';\r\n\r\nconst AlertState = props => {\r\n  const initialState = {\r\n    alerts: []\r\n    };\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n  // Get data\r\n  const setAlert = (msg, type, time) => {\r\n    const listOfMsgs = state.alerts.map(a => a.msg);\r\n    if(listOfMsgs.indexOf(msg) === -1) {\r\n      const newAlert = {\r\n        msg,\r\n        id: uniqid(),\r\n        type,\r\n      }\r\n\r\n      dispatch({\r\n        type: SET_ALERT,\r\n        payload: newAlert\r\n      });\r\n\r\n      setTimeout(() => {\r\n        deleteAlert(newAlert.id);\r\n      }, time ? time : 3000);\r\n    }\r\n  };\r\n\r\n  const deleteAlert = (id) => {\r\n    dispatch({\r\n      type: DELETE_ALERT,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alerts: state.alerts,\r\n        setAlert,\r\n        deleteAlert\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;","import { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_CURRENT_LIST_ID,\r\n  CLEAR_CURRENT_LIST_ID,\r\n  SET_CURRENT_CARD,\r\n  CLEAR_CURRENT_CARD,\r\n  SET_RECENT_IDS,\r\n  SET_MODAL,\r\n  SET_MODAL_TYPE,\r\n  SET_OPTIONS_MODAL,\r\n  SET_OPTIONS_MODAL_TYPE,\r\n  SET_FAST_EDIT_MODAL_POS,\r\n  SET_MOUSE_POS,\r\n  SET_BIG_LABELS,\r\n  SET_OPTIONS_MODAL_STEP,\r\n  SET_OPTIONS_MODAL_STEP_TYPE,\r\n  SET_OPTIONS_MODAL_STEP_DATA,\r\n  SET_DATA,\r\n  SET_SHOW_MENU,\r\n  TOGGLE_SHOW_BOARDS,\r\n  TOGGLE_KEEP_BOARDS,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_BOARD_ID:\r\n     return {\r\n       ...state,\r\n       currentBoardId: action.payload\r\n     }\r\n    case CLEAR_CURRENT_BOARD_ID:\r\n      return {\r\n        ...state,\r\n        currentBoardId: null\r\n      }\r\n    case SET_CURRENT_LIST_ID:\r\n      return {\r\n        ...state,\r\n        currentListId: action.payload\r\n      }\r\n    case CLEAR_CURRENT_LIST_ID:\r\n      return {\r\n        ...state,\r\n        currentListId: null\r\n      }\r\n    case SET_CURRENT_CARD:\r\n      return {\r\n        ...state,\r\n        currentCard: action.payload\r\n      }\r\n    case CLEAR_CURRENT_CARD:\r\n      return {\r\n        ...state,\r\n        currentCard: null\r\n      }\r\n    case SET_RECENT_IDS:\r\n      return {\r\n        ...state,\r\n        recentIds: action.payload\r\n      }\r\n    case SET_MODAL:\r\n      return {\r\n        ...state,\r\n        modalStatus: action.payload\r\n      }\r\n    case SET_MODAL_TYPE:\r\n      return {\r\n        ...state,\r\n        modalType: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL:\r\n      return {\r\n        ...state,\r\n        optionsModalStatus: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_TYPE:\r\n      return {\r\n        ...state,\r\n        optionsModalType: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_STEP:\r\n      return {\r\n        ...state,\r\n        optionsModalStepStatus: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_STEP_TYPE:\r\n      return {\r\n        ...state,\r\n        optionsModalStepType: action.payload\r\n      }\r\n    case SET_OPTIONS_MODAL_STEP_DATA:\r\n      return {\r\n        ...state,\r\n        optionsModalStepData: action.payload\r\n      }\r\n    case SET_FAST_EDIT_MODAL_POS:\r\n      return {\r\n        ...state,\r\n        fastEditModalPos: action.payload\r\n      }\r\n    case SET_MOUSE_POS:\r\n      return {\r\n        ...state,\r\n        mousePos: action.payload  \r\n      }\r\n    case SET_BIG_LABELS:\r\n      return {\r\n        ...state,\r\n        bigLabels: action.payload\r\n      }\r\n    case 'setAddCardFromListActions':\r\n      return {\r\n        ...state,\r\n        addCardFromListActions: action.payload\r\n      }\r\n    case SET_DATA:\r\n      return {\r\n        ...state,\r\n        data: action.payload\r\n      }\r\n    case SET_SHOW_MENU:\r\n      return {\r\n        ...state,\r\n        showMenu: action.payload\r\n      }\r\n    case TOGGLE_KEEP_BOARDS:\r\n      return {\r\n        ...state,\r\n        keepBoardsList: !state.keepBoardsList\r\n      }\r\n    case TOGGLE_SHOW_BOARDS:\r\n      return {\r\n        ...state,\r\n        showBoardsList: !state.showBoardsList\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer } from 'react';\r\nimport UserContext from './userContext';\r\nimport userReducer from './userReducer';\r\nimport { \r\n  SET_CURRENT_BOARD_ID,\r\n  CLEAR_CURRENT_BOARD_ID,\r\n  SET_CURRENT_LIST_ID,\r\n  CLEAR_CURRENT_LIST_ID,\r\n  SET_CURRENT_CARD,\r\n  CLEAR_CURRENT_CARD,\r\n  SET_RECENT_IDS,\r\n  SET_MODAL,\r\n  SET_MODAL_TYPE,\r\n  SET_OPTIONS_MODAL,\r\n  SET_OPTIONS_MODAL_TYPE,\r\n  SET_OPTIONS_MODAL_STEP,\r\n  SET_OPTIONS_MODAL_STEP_TYPE,\r\n  SET_OPTIONS_MODAL_STEP_DATA,\r\n  SET_FAST_EDIT_MODAL_POS,\r\n  SET_MOUSE_POS,\r\n  SET_BIG_LABELS,\r\n  SET_DATA,\r\n  SET_SHOW_MENU,\r\n  TOGGLE_SHOW_BOARDS, \r\n  TOGGLE_KEEP_BOARDS, \r\n} from '../types';\r\n\r\nconst UserState = props => {\r\n  const initialState = {\r\n    currentBoardId: null,\r\n    currentListId: null,\r\n    currentCard: null,\r\n    recentIds: [],\r\n    ModalStatus: 'off',\r\n    modalType: null,\r\n    optionsModalStatus: 'off',\r\n    optionsModaltype: null,\r\n    optionsModalStepStatus: 'off',\r\n    optionsModalStepType: null,\r\n    optionsModalStepData: null,\r\n    fastEditModalPos: null,\r\n    mosuePos: {},\r\n    bigLabels: false,\r\n    addCardFromListActions: null,\r\n    data: null,\r\n    showMenu: false,\r\n    showBoardsList: false,\r\n    keepBoardsList: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(userReducer, initialState);\r\n\r\n  const getUserdata = () => {\r\n    const bigLabels = JSON.parse(localStorage.getItem('bigLabels'));\r\n    const recentIds = JSON.parse(localStorage.getItem('recentIds'));\r\n\r\n    if(bigLabels) {\r\n      dispatch({\r\n        type: SET_BIG_LABELS,\r\n        payload: bigLabels\r\n      });\r\n    }\r\n    if(recentIds) {\r\n      dispatch({\r\n        type: SET_RECENT_IDS,\r\n        payload: recentIds\r\n      });\r\n    }\r\n  }\r\n\r\n  const setCurrentBoardId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_BOARD_ID,\r\n      payload: id\r\n    });\r\n    setRecentBaord(id);\r\n  }\r\n\r\n  // set new board to recent\r\n  const setRecentBaord = (id) => {\r\n    const newRecentIds = state.recentIds;\r\n    if(newRecentIds.length === 6 && id !== null) {\r\n      newRecentIds.shift();\r\n      newRecentIds.push(id);\r\n    } else if(id !== null) {\r\n      newRecentIds.push(id);\r\n    }\r\n    dispatch({\r\n      type: SET_RECENT_IDS,\r\n      payload: newRecentIds\r\n    });\r\n\r\n    // set recents to local storage\r\n    localStorage.setItem('recentIds', JSON.stringify(newRecentIds))\r\n  }\r\n\r\n  const deleteFromRecent = (id) => {\r\n    const newRecentIds = state.recentIds.filter(i => i !== id);\r\n\r\n    dispatch({\r\n      type: SET_RECENT_IDS,\r\n      payload: newRecentIds\r\n    });\r\n\r\n    // set recents to local storage\r\n    localStorage.setItem('recentIds', JSON.stringify(newRecentIds))\r\n  }\r\n\r\n  // also can be done with \"setCurrentBoardId(null)\"\r\n  const clearCurrentBoardId = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_BOARD_ID\r\n    });\r\n    setShowMenu('there is a command');\r\n  }\r\n\r\n  const setCurrentListId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_LIST_ID,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  const clearCurrentListId = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_LIST_ID\r\n    });\r\n  }\r\n\r\n  const setCurrentCard = (card) => {\r\n    dispatch({\r\n      type: SET_CURRENT_CARD,\r\n      payload: card\r\n    });\r\n  }\r\n\r\n  const clearCurrentCard = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_CARD\r\n    });\r\n  }\r\n\r\n  const setModal = (status, type) => {\r\n    dispatch({\r\n      type: SET_MODAL,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearModalType();\r\n\r\n    } else if(status === 'on') {\r\n      setModalType(type);\r\n    }\r\n  }\r\n\r\n  const setModalType = (type) => {\r\n    dispatch({\r\n      type: SET_MODAL_TYPE,\r\n      payload: type\r\n    });\r\n  }\r\n\r\n  const clearModalType = () => {\r\n    dispatch({\r\n      type: SET_MODAL_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setOptionsModal = (status, type) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearOptionsModalType();\r\n      setOptionsModalStep('off');\r\n      setData(null);\r\n    } else if(status === 'on') {\r\n      setOptionsModalType(type);\r\n    }\r\n  }\r\n\r\n  const setOptionsModalType = (type) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_TYPE,\r\n      payload: type\r\n    });\r\n  }\r\n\r\n  const clearOptionsModalType = () => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  // two prams 1. has step or not (on or off) 2. the last step\r\n  const setOptionsModalStep = (status, step, data) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP,\r\n      payload: status\r\n    });\r\n    if(status === 'off') {\r\n      clearOptionsModalStepType();\r\n    } else if(status === 'on') {\r\n      setOptionsModalStepType(step);\r\n    }\r\n    if(data) {\r\n      setOptionsModalStepData(data);\r\n    } else {\r\n      clearOptionsModalStepData();\r\n    }\r\n  }\r\n\r\n  const setOptionsModalStepData = (data) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_DATA,\r\n      payload: data\r\n    });\r\n  }\r\n\r\n  const clearOptionsModalStepData = () => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_DATA,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setOptionsModalStepType = (step) => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_TYPE,\r\n      payload: step\r\n    });\r\n  }\r\n\r\n  const clearOptionsModalStepType = () => {\r\n    dispatch({\r\n      type: SET_OPTIONS_MODAL_STEP_TYPE,\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  const setFastEditModalPos = (pos) => {\r\n    dispatch({\r\n      type: SET_FAST_EDIT_MODAL_POS,\r\n      payload: pos\r\n    });\r\n  }\r\n\r\n  const setMousePos = (x, y) => {\r\n    dispatch({\r\n      type: SET_MOUSE_POS,\r\n      payload: {x, y}\r\n    });\r\n  }\r\n\r\n  const toggleBigLabels = () => {\r\n    dispatch({\r\n      type: SET_BIG_LABELS,\r\n      payload: !state.bigLabels\r\n    });\r\n  }\r\n\r\n  //  add card will be addeed to the list with the id that its passed in\r\n  const setAddCardFromListActions = (id) => {\r\n    dispatch({\r\n      type: 'setAddCardFromListActions',\r\n      payload: id\r\n    });\r\n  }\r\n  \r\n  const setData = (data) => {\r\n    if(data) {\r\n      dispatch({\r\n        type: SET_DATA,\r\n        payload: data\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_DATA,\r\n        payload: null\r\n      });\r\n    }\r\n  }\r\n\r\n  const setShowMenu = (command) => {\r\n    if(command) {\r\n      dispatch({\r\n        type: SET_SHOW_MENU,\r\n        payload: false\r\n      }); \r\n    } else {\r\n      dispatch({\r\n        type: SET_SHOW_MENU,\r\n        payload: !state.showMenu\r\n      });\r\n    }\r\n  }\r\n\r\n  const toggleKeepBoardsList = () => {\r\n    dispatch({\r\n      type: TOGGLE_KEEP_BOARDS\r\n    });\r\n  }\r\n\r\n  const toggleShowBoardsList = () => {\r\n    dispatch({\r\n      type: TOGGLE_SHOW_BOARDS\r\n    });\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        currentBoardId: state.currentBoardId,\r\n        currentListId: state.currentListId,\r\n        currentCard: state.currentCard,\r\n        recentIds: state.recentIds,\r\n        modalStatus: state.modalStatus,\r\n        modalType: state.modalType,\r\n        optionsModalStatus: state.optionsModalStatus,\r\n        optionsModalType: state.optionsModalType,\r\n        optionsModalStepStatus: state.optionsModalStepStatus,\r\n        optionsModalStepType: state.optionsModalStepType,\r\n        optionsModalStepData: state.optionsModalStepData,\r\n        fastEditModalPos: state.fastEditModalPos,\r\n        mousePos: state.mousePos,\r\n        bigLabels: state.bigLabels,\r\n        addCardFromListActions: state.addCardFromListActions,\r\n        data: state.data,\r\n        showMenu: state.showMenu,\r\n        showBoardsList: state.showBoardsList,\r\n        keepBoardsList: state.keepBoardsList,\r\n        getUserdata,\r\n        setCurrentBoardId,\r\n        clearCurrentBoardId,\r\n        setCurrentListId,\r\n        clearCurrentListId,\r\n        setCurrentCard,\r\n        clearCurrentCard,\r\n        setModal,\r\n        setOptionsModal,\r\n        setOptionsModalStep,\r\n        setFastEditModalPos,\r\n        setMousePos,\r\n        toggleBigLabels,\r\n        setAddCardFromListActions,\r\n        setData,\r\n        setShowMenu,\r\n        deleteFromRecent,\r\n        toggleKeepBoardsList,\r\n        toggleShowBoardsList,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport BoardState from './context/board/BoardState';\nimport AlertState from './context/alert/AlertState';\nimport UserState from './context/user/UserState';\n\nconst StateContainer = () => {\n  return (\n    <BoardState>\n      <AlertState>\n        <UserState>\n          <App />\n        </UserState>\n      </AlertState>\n    </BoardState>\n  );\n}\n\nReactDOM.render(<StateContainer />, document.getElementById('root'));"],"sourceRoot":""}