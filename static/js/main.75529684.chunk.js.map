{"version":3,"sources":["components/layout/Navbar.js","context/user/userContext.js","context/board/boardContext.js","components/pages/board/BoardTitle.js","components/pages/board/BoardNavbar.js","components/pages/board/BoardListItem.js","components/pages/board/BoardList.js","components/pages/board/BoardMain.js","components/pages/board/Board.js","App.js","context/board/boardReducer.js","context/types.js","context/board/BoardState.js","context/alert/alertContext.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/user/userReducer.js","context/user/UserState.js","index.js"],"names":["Navbar","className","type","id","UserContext","createContext","BoardContext","BoardTitle","title","setTitle","useState","text","setText","isSettingTitle","setIsSettingTitle","onBlur","console","log","onClick","onChange","e","target","value","onKeyUp","keyCode","BoardNavbar","board","setStar","setDescription","descText","setDescText","isSettingDesc","setIsSettingDesc","onSetDesc","starred","description","length","document","querySelector","focus","BoardListItem","item","BoardList","list","boardFuncs","wantToAddCard","setWantToAddCard","newCardText","setNewCardText","onTextareaBlur","addCard","items","map","i","index","key","placeholder","setTimeout","BoardMain","lists","l","Board","setBoard","userContext","useContext","boardContext","getBoard","currentBoardId","useEffect","App","state","action","baords","boards","b","payload","boardId","listId","push","newCard","BoardState","props","initialState","color","uuid","v4","labels","useReducer","boardReducer","dispatch","Provider","getBoardsNames","filter","children","AlertContext","test","AlertState","alertReducer","getData","UserState","userReducer","setCurrentBoardId","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.75529684.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"trello-navbar\">\r\n      <div>\r\n        <div className=\"btn btn-square btn-primary rounded-lg\">\r\n          <i className=\"fa fa-home\"></i>\r\n        </div>\r\n        <div className=\"btn btn-narrow btn-primary rounded-lg\">\r\n          <i className=\"mr-1 fa fa-notes-medical\"></i>\r\n          boards\r\n        </div>\r\n        <div className=\"d-i-b rounded-lg\">\r\n          <input type=\"text\" className=\"m-0 bg-primary border-0 rounded-lg\" id=\"search-input\"/>\r\n        </div>\r\n      </div>\r\n      <div className=\"mr-5\">\r\n        <div className=\"text-white text-bold cursor-p\">trello clone</div>\r\n      </div>\r\n      <div>\r\n        <div className=\"btn btn-square btn-primary rounded-lg\">\r\n          <i className=\"fa fa-plus\"></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;","import { createContext } from 'react';\r\n\r\nconst BoardContext = createContext();\r\n\r\nexport default BoardContext;\r\n","import React, { useState } from 'react'\r\n\r\nconst BoardTitle = ({ title, setTitle }) => {\r\n  const [text, setText] = useState('');\r\n  const [isSettingTitle, setIsSettingTitle] = useState(false);\r\n\r\n  const onClick = () => {\r\n    setIsSettingTitle(true);\r\n    setText(title);\r\n    console.log('text filed must be filled with title')\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  const onBlur = () => {\r\n    if(text !== '') {\r\n      setTitle(text, 1);\r\n      setIsSettingTitle(false);\r\n    } else {\r\n      setIsSettingTitle(false);\r\n    }\r\n    console.log('id must be setted ( from user State )')\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onBlur();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-i-b\">\r\n      <div\r\n        className={`btn btn-primary btn-narrow m-0 ${isSettingTitle && 'd-n'}`}\r\n        onClick={onClick}>\r\n        { title }\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        className={`m-0 rounded ${!isSettingTitle && 'd-n'}`}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        onKeyUp={onKeyUp}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardTitle\r\n","import React, { useState } from 'react';\r\nimport BoardTitle from './BoardTitle';\r\n\r\nconst BoardNavbar = ({ board, setStar, setDescription, setTitle }) => {\r\n  const [descText, setDescText] = useState('');\r\n  const [isSettingDesc, setIsSettingDesc] = useState(false);\r\n  \r\n  const onStarClick = () => {\r\n    setStar(board.id);\r\n  }\r\n\r\n  const onDescClick =() => {\r\n    setIsSettingDesc(true);\r\n    setDescText(board.description);\r\n    document.querySelector('#description-input').focus();\r\n  }\r\n\r\n  const onDescTextChange = (e) => {\r\n    e.target.value.length < 51 && setDescText(e.target.value);\r\n    console.log('set alert for maximum length')\r\n  }\r\n\r\n  const onSetDesc = () => {\r\n    setDescription(descText, board.id);\r\n    setIsSettingDesc(false);\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onSetDesc();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-navbar trello-navbar lighten-20'>\r\n      <div className='card border-0 m-0 p-0'>\r\n        { board && <BoardTitle title={board.title} setTitle={setTitle} /> }\r\n        <div className='btn btn-primary btn-square rounded-lg lighten-20 ml-1' onClick={onStarClick}>\r\n          <i className={`fa-star ${board && board.starred ? 'fas text-warning' : 'far'}`}></i>\r\n        </div>\r\n        <div className='ml-1 d-i-b text-white'>\r\n          { \r\n            board\r\n            && !isSettingDesc\r\n              && (board.description ? board.description : 'no description')\r\n          }\r\n        <input\r\n          type='text'\r\n          id='description-input'\r\n          className={`m-0 rounded ${!isSettingDesc && 'd-n'}`}\r\n          value={descText}\r\n          onChange={onDescTextChange}\r\n          onBlur={onSetDesc}\r\n          onKeyUp={onKeyUp} />\r\n        </div>\r\n        <div className='btn btn-primary btn-square rounded-lg lighten-20 ml-1' onClick={onDescClick}>\r\n          <i className='fas fa-pen'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardNavbar\r\n","import React from 'react'\r\n\r\nconst BoardListItem = ({ item }) => {\r\n  return (\r\n    <div className=\"trello-board-list-item\">\r\n      { item.text }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardListItem\r\n","import React, { useState } from 'react';\r\nimport BoardListItem from './BoardListItem';\r\n\r\nconst BoardList = ({ list, boardFuncs /* all of board context */ }) => {\r\n  const [wantToAddCard, setWantToAddCard] = useState(false);\r\n  const [newCardText, setNewCardText] = useState('');\r\n\r\n  const onAddCardClick = () => {\r\n    setWantToAddCard(true);\r\n    setTimeout(() => {\r\n      document.querySelector('#card-compose-textarea').focus();\r\n    }, 100);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setNewCardText(e.target.value);\r\n  }\r\n\r\n  const onTextareaBlur =() => {\r\n    if(newCardText !== '') {\r\n      // three parameters 1.text 2.list id 3.board id\r\n      boardFuncs.addCard(newCardText, list.id, 1);\r\n      setNewCardText('');\r\n    } else {\r\n      setWantToAddCard(false);\r\n    }\r\n    console.log('get third id from user state');\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if(e.keyCode === 13) {\r\n      onTextareaBlur();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='trello-board-list'>\r\n      <div className='trello-board-list-header'>\r\n        { list.title }\r\n      </div>\r\n      <div className='trello-board-list-items'>\r\n        { list.items.map((i, index) => (\r\n          <BoardListItem key={i.id} item={i} />\r\n        )) }\r\n        <div className={`trello-board-list-item trello-board-card-compose  ${!wantToAddCard && 'd-n'}`}>\r\n          <textarea\r\n            className='trello-board-card-compose-textarea'\r\n            id='card-compose-textarea'\r\n            placeholder='Enter a title for this card'\r\n            onBlur={onTextareaBlur}\r\n            onKeyUp={onKeyUp}\r\n            onChange={onChange}\r\n            value={newCardText}>\r\n\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n      <div className='trello-board-add-card' onClick={onAddCardClick}>\r\n        { !wantToAddCard\r\n          ? list.items.length === 0 ? '+ Add a card' : '+ Add another card'\r\n          : ('adding panel and stuff')  \r\n        }      \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardList\r\n","import React from 'react';\r\nimport BoardList from './BoardList';\r\n\r\nconst BoardMain = ({ board, boardFuncs /* contains all of board context  */ }) => {\r\n  return (\r\n    <div className=\"trello-board-main\">\r\n      { board &&\r\n        board.lists.map(l => (\r\n          <div key={l.id} className=\"trello-board-list-wrapper\">\r\n            <BoardList list={l} boardFuncs={boardFuncs} />\r\n          </div>\r\n        )) }\r\n      <div className=\"trello-board-list\">\r\n        <div className=\"trello-board-add-list\">\r\n          { board && board.lists.length === 0 ? '+ Add a list' : '+ Add another list' }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardMain\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport BoardNavbar from './BoardNavbar';\r\nimport BoardMain from './BoardMain';\r\n\r\n// context\r\nimport UserContext from '../../../context/user/userContext';\r\nimport BoardContext from '../../../context/board/boardContext';\r\n\r\n// css\r\nimport './board.css';\r\n\r\nconst Board = () => {\r\n  const [board, setBoard] = useState(null);\r\n\r\n  const userContext = useContext(UserContext);\r\n  const boardContext = useContext(BoardContext);\r\n\r\n  const { currentBoardId } = userContext;\r\n  const { getBoard, setStar, setDescription, setTitle } = boardContext;\r\n\r\n  useEffect(() => {\r\n    setBoard(getBoard(1)[0]);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"trello-board-row trello-board-row-1\">\r\n        <BoardNavbar\r\n          board={board}\r\n          setStar={setStar}\r\n          setDescription={setDescription}\r\n          setTitle={setTitle} />\r\n      </div>\r\n      <div className=\"trello-board-main-wrapper bg-primary lighten-20 p\">\r\n        <BoardMain boardFuncs={boardContext} board={board} />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import React, { Fragment } from 'react';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Home from './components/pages/home/Home';\r\nimport Board from './components/pages/board/Board';\r\n\r\nimport './trello-clone.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      {/* <Home /> */}\r\n      <Board />\r\n    </Fragment>\r\n  );\r\n}\r\nexport default App","import {\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_DESCRIPTION,\r\n  ADD_CARD\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_TITLE:\r\n      return {\r\n        ...state,\r\n        baords: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.title = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_STAR:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload) {\r\n            b.starred = !b.starred\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case SET_DESCRIPTION:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.id) {\r\n            b.description = action.payload.text\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    case ADD_CARD:\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(b => {\r\n          if(b.id === action.payload.boardId) {\r\n            b.lists = b.lists.map(l => {\r\n              if(l.id === action.payload.listId) {\r\n                l.items.push(action.payload.newCard);\r\n              }\r\n              return l\r\n            })\r\n          }\r\n          return b\r\n        })\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const GET_BOARDS_NAMES = 'GET_BOARDS_NAMES';\r\nexport const SET_CURRENT_BOARD_ID = 'SET_CURRENT_BOARD_ID';\r\nexport const SET_TITLE = 'SET_TITLE';\r\nexport const SET_STAR = 'SET_STAR';\r\nexport const SET_DESCRIPTION = 'SET_DESCRIPTION';\r\nexport const ADD_CARD = 'ADD_CARD';\r\nexport const TEST = 'TEST';","import React, { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\nimport BoardContext from './boardContext';\r\nimport boardReducer from './boardReducer';\r\nimport {\r\n  SET_TITLE,\r\n  SET_STAR,\r\n  SET_DESCRIPTION,\r\n  ADD_CARD\r\n} from '../types';\r\n\r\nconst BoardState = props => {\r\n  const initialState = {\r\n    boards: [\r\n      {\r\n        title: 'my nice board',\r\n        id: 1,\r\n        color: '#e27b47',\r\n        starred: false,\r\n        description: 'board description goes here',\r\n        lists: [\r\n          {\r\n            title: 'todos',\r\n            id: uuid.v4(),\r\n            items: [\r\n              {\r\n                text: 'todo 1',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 1',\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'todo 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 2'\r\n                ]\r\n              },\r\n            ]\r\n          },\r\n          {\r\n            title: 'doing',\r\n            id: uuid.v4(),\r\n            items: [\r\n              {\r\n                text: 'doing 1',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 3',\r\n                  'label 2'\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 2',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 3',\r\n                  'label 4'\r\n                ]\r\n              },\r\n              {\r\n                text: 'doing 3',\r\n                id: uuid.v4(),\r\n                labels: [\r\n                  'label 4',\r\n                  'label 2'\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            title: 'new list',\r\n            id: uuid.v4(),\r\n            items: [\r\n\r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          },\r\n          {\r\n            title: 'test for long',\r\n            id: uuid.v4(),\r\n            items: [\r\n              \r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        title: 'test empty',\r\n        id: 2,\r\n        color: '#ccc',\r\n        lists: [\r\n\r\n        ]\r\n      }\r\n    ],\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(boardReducer, initialState);\r\n\r\n  // Get data\r\n  const getBoardsNames = () => {\r\n    const list = state.boards.map(b => b.title);\r\n    \r\n    return list\r\n  };\r\n\r\n  // send a single board to board page (returns an array with one object)\r\n  const getBoard = (id) => {\r\n    const board = state.boards.filter(b => b.id === id);\r\n\r\n    return board\r\n  }\r\n\r\n  // set board title\r\n  const setTitle = (text, id) => {\r\n    dispatch({\r\n      type: SET_TITLE,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // set board starred or unstarred\r\n  const setStar = (id) => {\r\n    dispatch({\r\n      type: SET_STAR,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  // set board description\r\n  const setDescription = (text, id) => {\r\n    dispatch({\r\n      type: SET_DESCRIPTION,\r\n      payload: {\r\n        id,\r\n        text\r\n      }\r\n    });\r\n  }\r\n\r\n  // add card to list\r\n  const addCard = (text, listId, boardId) => {\r\n    const newCard = {\r\n      text,\r\n      id: uuid.v4(),\r\n      labels: []\r\n    }\r\n    dispatch({\r\n      type: ADD_CARD,\r\n      payload: {\r\n        newCard,\r\n        listId,\r\n        boardId\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <BoardContext.Provider\r\n      value={{\r\n        boards: state.boards,\r\n        getBoardsNames,\r\n        getBoard,\r\n        setTitle,\r\n        setStar,\r\n        setDescription,\r\n        addCard\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BoardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BoardState;","import { createContext } from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext;","import { \r\n  TEST\r\n } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case TEST:\r\n      return {\r\n        ...state,\r\n        test: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport alertReducer from './alertReducer';\r\nimport { \r\n  TEST\r\n } from '../types';\r\n\r\nconst AlertState = props => {\r\n  const initialState = {\r\n    test: 'test'\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n  // Get data\r\n  const getData = () => {\r\n    dispatch({\r\n      type: TEST,\r\n      payload: 'new test'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        test: state.test,\r\n        getData\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;","import { \r\n  SET_CURRENT_BOARD_ID,\r\n  TEST\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case TEST:\r\n      return {\r\n        ...state,\r\n        test: action.payload\r\n      }\r\n    case SET_CURRENT_BOARD_ID:\r\n     return {\r\n       ...state,\r\n       currentBoardId: action.payload\r\n     }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer } from 'react';\r\nimport UserContext from './userContext';\r\nimport userReducer from './userReducer';\r\nimport { \r\n  SET_CURRENT_BOARD_ID,\r\n  TEST\r\n} from '../types';\r\n\r\nconst UserState = props => {\r\n  const initialState = {\r\n    currentBoardId: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(userReducer, initialState);\r\n\r\n  // Get data\r\n  // eslint-disable-next-line\r\n  const getData = () => {\r\n    dispatch({\r\n      type: TEST,\r\n      payload: 'new test'\r\n    });\r\n  };\r\n\r\n  const setCurrentBoardId = (id) => {\r\n    dispatch({\r\n      type: SET_CURRENT_BOARD_ID,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        currentBoardId: state.currentBoardId,\r\n        setCurrentBoardId\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport BoardState from './context/board/BoardState';\nimport AlertState from './context/alert/AlertState';\nimport UserState from './context/user/UserState';\n\nconst StateContainer = () => {\n  return (\n    <BoardState>\n      <AlertState>\n        <UserState>\n          <App />\n        </UserState>\n      </AlertState>\n    </BoardState>\n  );\n}\n\nReactDOM.render(<StateContainer />, document.getElementById('root'));"],"sourceRoot":""}